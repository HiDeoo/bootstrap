{
  "version": 3,
  "sources": ["../../../../node_modules/acorn-jsx/xhtml.js", "../../../../node_modules/acorn/dist/acorn.js", "../../../../node_modules/acorn-jsx/index.js", "../../../../node_modules/inline-style-parser/index.js", "../../../../node_modules/style-to-object/index.js", "../../../../node_modules/markdown-extensions/markdown-extensions.json", "../../../../node_modules/markdown-extensions/index.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/base64.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/base64-vlq.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/util.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/array-set.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/mapping-list.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/source-map-generator.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/binary-search.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/read-wasm.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/wasm.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/source-map-consumer.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/lib/source-node.js", "../../../../node_modules/@mdx-js/rollup/node_modules/source-map/source-map.js", "../../../../node_modules/picomatch/lib/constants.js", "../../../../node_modules/picomatch/lib/utils.js", "../../../../node_modules/picomatch/lib/scan.js", "../../../../node_modules/picomatch/lib/parse.js", "../../../../node_modules/picomatch/lib/picomatch.js", "../../../../node_modules/picomatch/index.js", "browser-external:node:fs/promises", "../../../../node_modules/kind-of/index.js", "../../../../node_modules/is-extendable/index.js", "../../../../node_modules/extend-shallow/index.js", "../../../../node_modules/section-matter/index.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/common.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/exception.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/mark.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/str.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/seq.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/map.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/failsafe.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/null.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/bool.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/int.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/float.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/json.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/core.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/timestamp.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/merge.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/binary.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/omap.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/pairs.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/set.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/default_safe.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/js/undefined.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/js/function.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/default_full.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/loader.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/dumper.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml.js", "../../../../node_modules/gray-matter/node_modules/js-yaml/index.js", "../../../../node_modules/gray-matter/lib/engines.js", "../../../../node_modules/strip-bom-string/index.js", "../../../../node_modules/gray-matter/lib/utils.js", "../../../../node_modules/gray-matter/lib/defaults.js", "../../../../node_modules/gray-matter/lib/engine.js", "../../../../node_modules/gray-matter/lib/stringify.js", "../../../../node_modules/gray-matter/lib/excerpt.js", "../../../../node_modules/gray-matter/lib/to-file.js", "../../../../node_modules/gray-matter/lib/parse.js", "../../../../node_modules/gray-matter/index.js", "../../../../node_modules/micromark-extension-mdxjs/index.js", "../../../../node_modules/unist-util-position-from-estree/lib/index.js", "../../../../node_modules/estree-util-visit/lib/color.browser.js", "../../../../node_modules/estree-util-visit/lib/index.js", "../../../../node_modules/micromark-util-events-to-acorn/dev/index.js", "../../../../node_modules/micromark-factory-mdx-expression/dev/index.js", "../../../../node_modules/micromark-extension-mdx-expression/dev/lib/syntax.js", "../../../../node_modules/estree-util-is-identifier-name/lib/regex.js", "../../../../node_modules/estree-util-is-identifier-name/lib/index.js", "../../../../node_modules/micromark-extension-mdx-jsx/dev/lib/factory-tag.js", "../../../../node_modules/micromark-extension-mdx-jsx/dev/lib/jsx-text.js", "../../../../node_modules/micromark-extension-mdx-jsx/dev/lib/jsx-flow.js", "../../../../node_modules/micromark-extension-mdx-jsx/dev/lib/syntax.js", "../../../../node_modules/micromark-extension-mdx-md/index.js", "../../../../node_modules/micromark-extension-mdxjs-esm/dev/lib/syntax.js", "../../../../node_modules/mdast-util-mdx-expression/lib/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/character-entities-legacy/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/character-reference-invalid/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/is-decimal/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/is-hexadecimal/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/is-alphabetical/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/is-alphanumerical/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/parse-entities/lib/index.js", "../../../../node_modules/mdast-util-mdx-jsx/node_modules/unist-util-stringify-position/lib/index.js", "../../../../node_modules/mdast-util-mdx-jsx/lib/index.js", "../../../../node_modules/mdast-util-mdxjs-esm/lib/index.js", "../../../../node_modules/mdast-util-mdx/index.js", "../../../../node_modules/remark-mdx/index.js", "../../../../node_modules/estree-util-build-jsx/node_modules/estree-walker/src/walker.js", "../../../../node_modules/estree-util-build-jsx/node_modules/estree-walker/src/sync.js", "../../../../node_modules/estree-util-build-jsx/node_modules/estree-walker/src/index.js", "../../../../node_modules/estree-util-build-jsx/lib/index.js", "../../../../node_modules/@mdx-js/mdx/lib/util/estree-util-create.js", "../../../../node_modules/@mdx-js/mdx/lib/util/estree-util-specifiers-to-declarations.js", "../../../../node_modules/@mdx-js/mdx/lib/util/estree-util-to-id-or-member-expression.js", "../../../../node_modules/@mdx-js/mdx/lib/plugin/recma-jsx-build.js", "../../../../node_modules/periscopic/node_modules/estree-walker/src/walker.js", "../../../../node_modules/periscopic/node_modules/estree-walker/src/sync.js", "../../../../node_modules/periscopic/node_modules/estree-walker/src/index.js", "../../../../node_modules/periscopic/node_modules/is-reference/src/index.js", "../../../../node_modules/periscopic/src/index.js", "../../../../node_modules/@mdx-js/mdx/node_modules/unist-util-stringify-position/lib/index.js", "../../../../node_modules/@mdx-js/mdx/node_modules/estree-walker/src/walker.js", "../../../../node_modules/@mdx-js/mdx/node_modules/estree-walker/src/sync.js", "../../../../node_modules/@mdx-js/mdx/node_modules/estree-walker/src/index.js", "../../../../node_modules/@mdx-js/mdx/lib/util/estree-util-declaration-to-expression.js", "../../../../node_modules/@mdx-js/mdx/lib/util/estree-util-is-declaration.js", "../../../../node_modules/@mdx-js/mdx/lib/plugin/recma-document.js", "../../../../node_modules/@mdx-js/mdx/lib/util/estree-util-to-binary-addition.js", "../../../../node_modules/@mdx-js/mdx/lib/plugin/recma-jsx-rewrite.js", "../../../../node_modules/astring/dist/astring.mjs", "../../../../node_modules/estree-util-to-js/lib/index.js", "../../../../node_modules/estree-util-to-js/lib/jsx.js", "../../../../node_modules/@mdx-js/mdx/lib/plugin/recma-stringify.js", "../../../../node_modules/hast-util-to-estree/lib/handlers/comment.js", "../../../../node_modules/style-to-object/index.mjs", "../../../../node_modules/hast-util-to-estree/lib/handlers/element.js", "../../../../node_modules/estree-util-attach-comments/lib/index.js", "../../../../node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js", "../../../../node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js", "../../../../node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js", "../../../../node_modules/hast-util-to-estree/lib/handlers/text.js", "../../../../node_modules/hast-util-to-estree/lib/handlers/root.js", "../../../../node_modules/hast-util-to-estree/lib/handlers/index.js", "../../../../node_modules/hast-util-to-estree/lib/state.js", "../../../../node_modules/hast-util-to-estree/lib/index.js", "../../../../node_modules/@mdx-js/mdx/lib/plugin/rehype-recma.js", "../../../../node_modules/@mdx-js/mdx/lib/plugin/rehype-remove-raw.js", "../../../../node_modules/@mdx-js/mdx/lib/plugin/remark-mark-and-unravel.js", "../../../../node_modules/@mdx-js/mdx/lib/node-types.js", "../../../../node_modules/@mdx-js/mdx/lib/condition.browser.js", "../../../../node_modules/@mdx-js/mdx/lib/core.js", "../../../../node_modules/@mdx-js/mdx/lib/util/extnames.js", "../../../../node_modules/@mdx-js/mdx/lib/util/resolve-file-and-options.js", "../../../../node_modules/@mdx-js/mdx/lib/compile.js", "../../../../node_modules/@mdx-js/mdx/lib/run.js", "../../../../node_modules/@mdx-js/rollup/lib/index.js", "../../../../node_modules/@rollup/pluginutils/dist/es/index.js", "../../../../node_modules/@mdx-js/mdx/lib/util/create-format-aware-processors.js", "../../../../node_modules/@astrojs/mdx/node_modules/es-module-lexer/dist/lexer.js", "../../../../node_modules/@astrojs/mdx/dist/index.js", "../../../../node_modules/kleur/colors.mjs", "../../../../node_modules/@astrojs/mdx/dist/plugins.js", "../../../../node_modules/@astrojs/mdx/dist/utils.js", "../../../../node_modules/@astrojs/mdx/dist/rehype-collect-headings.js", "../../../../node_modules/@astrojs/mdx/dist/rehype-meta-string.js", "../../../../node_modules/@astrojs/mdx/dist/remark-prism.js", "../../../../node_modules/@astrojs/mdx/dist/remark-shiki.js"],
  "sourcesContent": ["module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.acorn = {}));\n})(this, (function (exports) { 'use strict';\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n  // These are a run-length and offset encoded representation of the\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords$1 = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords[name] = new TokenType(name, options)\n  }\n\n  var types$1 = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    privateId: new TokenType(\"privateId\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n  }\n\n  function nextLineBreak(code, from, end) {\n    if ( end === void 0 ) end = code.length;\n\n    for (var i = from; i < end; i++) {\n      var next = code.charCodeAt(i);\n      if (isNewLine(next))\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n    }\n    return -1\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  var hasOwn = Object.hasOwn || (function (obj, propName) { return (\n    hasOwnProperty.call(obj, propName)\n  ); });\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n  function codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      var nextBreak = nextLineBreak(input, cur, offset);\n      if (nextBreak < 0) { return new Position(line, offset - cur) }\n      ++line;\n      cur = nextBreak;\n    }\n  }\n\n  // A second argument must be given to configure the parser process.\n  // These options are recognized (only `ecmaVersion` is required):\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n    // (the latest version the library supports). This influences\n    // support for strict mode, the set of reserved words, and support\n    // for new syntax features.\n    ecmaVersion: null,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called\n    // when a semicolon is automatically inserted. It will be passed\n    // the position of the comma as an offset, and if `locations` is\n    // enabled, it is given the location as a `{line, column}` object\n    // as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program, and an import.meta expression\n    // in a script isn't considered an error.\n    allowImportExportEverywhere: false,\n    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: null,\n    // When enabled, super identifiers are not constrained to\n    // appearing in methods and do not raise an error when they appear elsewhere.\n    allowSuperOutsideMethod: null,\n    // When enabled, hashbang directive in the beginning of file is\n    // allowed and treated as a line comment. Enabled by default when\n    // `ecmaVersion` >= 2023.\n    allowHashBang: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  var warnedAboutEcmaVersion = false;\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion === \"latest\") {\n      options.ecmaVersion = 1e8;\n    } else if (options.ecmaVersion == null) {\n      if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n        warnedAboutEcmaVersion = true;\n        console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n      }\n      options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (opts.allowHashBang == null)\n      { options.allowHashBang = options.ecmaVersion >= 14; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128,\n      SCOPE_CLASS_STATIC_BLOCK = 256,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal* and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types$1.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = Object.create(null);\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n\n    // The stack of private names.\n    // Each element has two properties: 'declared' and 'used'.\n    // When it exited from the outermost class definition, all used private names must be declared.\n    this.privateNameStack = [];\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.canAwait.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n    }\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  prototypeAccessors.allowNewDotTarget.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n  };\n\n  prototypeAccessors.inClassStaticBlock.get = function () {\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n  };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp$9 = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\n  pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) { return false }\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp$9.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp$9.isContextual = function(name) {\n    return this.type === types$1.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp$9.canInsertSemicolon = function() {\n    return this.type === types$1.eof ||\n      this.type === types$1.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp$9.semicolon = function() {\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  var DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  };\n\n  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n  };\n\n  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$8 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) { node.body = []; }\n    while (this.type !== types$1.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91 || nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '[', '/', astral\n    if (context) { return false }\n\n    if (nextCh === 123) { return true } // '{'\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length ||\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types$1._debugger: return this.parseDebuggerStatement(node)\n    case types$1._do: return this.parseDoStatement(node)\n    case types$1._for: return this.parseForStatement(node)\n    case types$1._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types$1._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types$1._if: return this.parseIfStatement(node)\n    case types$1._return: return this.parseReturnStatement(node)\n    case types$1._switch: return this.parseSwitchStatement(node)\n    case types$1._throw: return this.parseThrowStatement(node)\n    case types$1._try: return this.parseTryStatement(node)\n    case types$1._const: case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types$1._while: return this.parseWhileStatement(node)\n    case types$1._with: return this.parseWithStatement(node)\n    case types$1.braceL: return this.parseBlock(true, node)\n    case types$1.semi: return this.parseEmptyStatement(node)\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types$1.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types$1.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types$1.parenL);\n    if (this.type === types$1.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types$1._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLValPattern(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types$1.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\n      if (this.type === types$1._case || this.type === types$1._default) {\n        var isCase = this.type === types$1._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types$1.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty$1 = [];\n\n  pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types$1._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types$1.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types$1.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$8.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$8.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types$1.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types$1.semi);\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\n    this.expect(types$1.semi);\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === types$1._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$8.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types$1.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) { break }\n    }\n    return node\n  };\n\n  pp$8.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types$1.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$8.parseFunctionParams = function(node) {\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$8.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    while (this.type !== types$1.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n          this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat(types$1.semi)) { return null }\n\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n\n    if (this.eatContextual(\"static\")) {\n      // Parse static init block\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(node);\n        return node\n      }\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\n        isStatic = true;\n      } else {\n        keyName = \"static\";\n      }\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n        isAsync = true;\n      } else {\n        keyName = \"async\";\n      }\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n      isGenerator = true;\n    }\n    if (!keyName && !isAsync && !isGenerator) {\n      var lastValue = this.value;\n      if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n        if (this.isClassElementNameStart()) {\n          kind = lastValue;\n        } else {\n          keyName = lastValue;\n        }\n      }\n    }\n\n    // Parse element name\n    if (keyName) {\n      // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n      // The last token is any of those. Make it the element name.\n      node.computed = false;\n      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n      node.key.name = keyName;\n      this.finishNode(node.key, \"Identifier\");\n    } else {\n      this.parseClassElementName(node);\n    }\n\n    // Parse element value\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n      var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n      if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n      node.kind = isConstructor ? \"constructor\" : kind;\n      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else {\n      this.parseClassField(node);\n    }\n\n    return node\n  };\n\n  pp$8.isClassElementNameStart = function() {\n    return (\n      this.type === types$1.name ||\n      this.type === types$1.privateId ||\n      this.type === types$1.num ||\n      this.type === types$1.string ||\n      this.type === types$1.bracketL ||\n      this.type.keyword\n    )\n  };\n\n  pp$8.parseClassElementName = function(element) {\n    if (this.type === types$1.privateId) {\n      if (this.value === \"constructor\") {\n        this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n      }\n      element.computed = false;\n      element.key = this.parsePrivateIdent();\n    } else {\n      this.parsePropertyName(element);\n    }\n  };\n\n  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    // Check key and flags\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    } else if (method.static && checkKeyName(method, \"prototype\")) {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    // Parse value\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n    // Check value\n    if (method.kind === \"get\" && value.params.length !== 0)\n      { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && value.params.length !== 1)\n      { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$8.parseClassField = function(field) {\n    if (checkKeyName(field, \"constructor\")) {\n      this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    } else if (field.static && checkKeyName(field, \"prototype\")) {\n      this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    }\n\n    if (this.eat(types$1.eq)) {\n      // To raise SyntaxError if 'arguments' exists in the initializer.\n      var scope = this.currentThisScope();\n      var inClassFieldInit = scope.inClassFieldInit;\n      scope.inClassFieldInit = true;\n      field.value = this.parseMaybeAssign();\n      scope.inClassFieldInit = inClassFieldInit;\n    } else {\n      field.value = null;\n    }\n    this.semicolon();\n\n    return this.finishNode(field, \"PropertyDefinition\")\n  };\n\n  pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n\n    return this.finishNode(node, \"StaticBlock\")\n  };\n\n  pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === types$1.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(false) : null;\n  };\n\n  pp$8.enterClassBody = function() {\n    var element = {declared: Object.create(null), used: []};\n    this.privateNameStack.push(element);\n    return element.declared\n  };\n\n  pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for (var i = 0; i < used.length; ++i) {\n      var id = used[i];\n      if (!hasOwn(declared, id.name)) {\n        if (parent) {\n          parent.used.push(id);\n        } else {\n          this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n        }\n      }\n    }\n  };\n\n  function isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n      next = (element.static ? \"s\" : \"i\") + element.kind;\n    }\n\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\n    if (\n      curr === \"iget\" && next === \"iset\" ||\n      curr === \"iset\" && next === \"iget\" ||\n      curr === \"sget\" && next === \"sset\" ||\n      curr === \"sset\" && next === \"sget\"\n    ) {\n      privateNameMap[name] = \"true\";\n      return false\n    } else if (!curr) {\n      privateNameMap[name] = next;\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (\n      key.type === \"Identifier\" && key.name === name ||\n      key.type === \"Literal\" && key.value === name\n    )\n  }\n\n  // Parses module export declaration.\n\n  pp$8.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types$1.star)) {\n      if (this.options.ecmaVersion >= 11) {\n        if (this.eatContextual(\"as\")) {\n          node.exported = this.parseModuleExportName();\n          this.checkExport(exports, node.exported, this.lastTokStart);\n        } else {\n          node.exported = null;\n        }\n      }\n      this.expectContextual(\"from\");\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types$1._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types$1._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types$1.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n\n          if (spec.local.type === \"Literal\") {\n            this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n          }\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (typeof name !== \"string\")\n      { name = name.type === \"Identifier\" ? name.name : name.value; }\n    if (hasOwn(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n      this.checkExport(\n        exports,\n        node.exported,\n        node.exported.start\n      );\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$8.parseImport = function(node) {\n    this.next();\n    // import '...'\n    if (this.type === types$1.string) {\n      node.specifiers = empty$1;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types$1.name) {\n      // import defaultObj, { x, y as z } from '...'\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLValSimple(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types$1.comma)) { return nodes }\n    }\n    if (this.type === types$1.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLValSimple(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseModuleExportName();\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLValSimple(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n      var stringLiteral = this.parseLiteral(this.value);\n      if (loneSurrogate.test(stringLiteral.value)) {\n        this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n      }\n      return stringLiteral\n    }\n    return this.parseIdent(true)\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$8.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$8.isDirectiveCandidate = function(statement) {\n    return (\n      this.options.ecmaVersion >= 5 &&\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$7 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types$1.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types$1.comma); }\n      if (allowEmpty && this.type === types$1.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types$1.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$7.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // The following three functions all verify that a node is an lvalue —\n  // something that can be bound, or assigned to. In order to do so, they perform\n  // a variety of checks:\n  //\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\n  // - Record name declarations for bindings in the appropriate scope.\n  // - Check duplicate argument names, if checkClashes is set.\n  //\n  // If a complex binding pattern is encountered (e.g., object and array\n  // destructuring), the entire pattern is recursively checked.\n  //\n  // There are three versions of checkLVal*() appropriate for different\n  // circumstances:\n  //\n  // - checkLValSimple() shall be used if the syntactic construct supports\n  //   nothing other than identifiers and member expressions. Parenthesized\n  //   expressions are also correctly handled. This is generally appropriate for\n  //   constructs for which the spec says\n  //\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   It is also appropriate for checking if an identifier is valid and not\n  //   defined elsewhere, like import declarations or function/class identifiers.\n  //\n  //   Examples where this is used include:\n  //     a += …;\n  //     import a from '…';\n  //   where a is the node to be checked.\n  //\n  // - checkLValPattern() shall be used if the syntactic construct supports\n  //   anything checkLValSimple() supports, as well as object and array\n  //   destructuring patterns. This is generally appropriate for constructs for\n  //   which the spec says\n  //\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   Examples where this is used include:\n  //     (a = …);\n  //     const a = …;\n  //     try { … } catch (a) { … }\n  //   where a is the node to be checked.\n  //\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\n  //   anything checkLValPattern() supports, as well as default assignment\n  //   patterns, rest elements, and other constructs that may appear within an\n  //   object or array destructuring pattern.\n  //\n  //   As a special case, function parameters also use checkLValInnerPattern(),\n  //   as they also support defaults and rest constructs.\n  //\n  // These functions deliberately support both assignment and binding constructs,\n  // as the logic for both is exceedingly similar. If the node is the target of\n  // an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n  // should be set to the appropriate BIND_* constant, like BIND_VAR or\n  // BIND_LEXICAL.\n  //\n  // If the function is called with a non-BIND_NONE bindingType, then\n  // additionally a checkClashes object may be specified to allow checking for\n  // duplicate argument names. checkClashes is ignored if the provided construct\n  // is an assignment (i.e., bindingType is BIND_NONE).\n\n  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    var isBind = bindingType !== BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n          { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name))\n            { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ParenthesizedExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n      }\n      break\n\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n  };\n\n  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break\n\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.initialContext = function() {\n    return [types.b_stat]\n  };\n\n  pp$6.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types.f_expr || parent === types.f_stat)\n      { return true }\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n      { return true }\n    if (prevType === types$1.braceL)\n      { return parent === types.b_stat }\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$6.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types$1.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\n  pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) {\n      this.context[this.context.length - 1] = tokenCtx;\n    }\n  };\n\n  // Token-specific context update code\n\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types$1.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.dollarBraceL.updateContext = function() {\n    this.context.push(types.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types$1.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types$1._else &&\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n      { this.context.push(types.f_expr); }\n    else\n      { this.context.push(types.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types$1.backQuote.updateContext = function() {\n    if (this.curContext() === types.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types$1.star.updateContext = function(prevType) {\n    if (prevType === types$1._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types.f_expr)\n        { this.context[index] = types.f_expr_gen; }\n      else\n        { this.context[index] = types.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types$1.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // A recursive descent parser operates by defining functions for all\n\n  var pp$5 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0) {\n              refDestructuringErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === types$1.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(forInit) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldDoubleProto = refDestructuringErrors.doubleProto;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types$1.parenL || this.type === types$1.name) {\n      this.potentialArrowAt = this.start;\n      this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      if (this.type === types$1.eq)\n        { left = this.toAssignable(left, false, refDestructuringErrors); }\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      if (this.type === types$1.eq)\n        { this.checkLValPattern(left); }\n      else\n        { this.checkLValSimple(left); }\n      node.left = left;\n      this.next();\n      node.right = this.parseMaybeAssign(forInit);\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types$1.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign(forInit);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n        var coalesce = this.type === types$1.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types$1.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n      }\n    }\n    return left\n  };\n\n  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n      expr = this.parseAwait(forInit);\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types$1.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true, update, forInit);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLValSimple(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === types$1.privateId) {\n      if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\n      expr = this.parsePrivateIdent();\n      // only could be private fields in 'in', such as #x in obj\n      if (this.type !== types$1._in) { this.unexpected(); }\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLValSimple(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!incDec && this.eat(types$1.starstar)) {\n      if (sawUnary)\n        { this.unexpected(this.lastTokStart); }\n      else\n        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n    } else {\n      return expr\n    }\n  };\n\n  function isPrivateFieldAccess(node) {\n    return (\n      node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n      node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n    )\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n    }\n    return result\n  };\n\n  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types$1.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types$1.bracketL);\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(types$1.bracketR);\n      } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n        node.property = this.parsePrivateIdent();\n      } else {\n        node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n      }\n      node.computed = !!computed;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types$1.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types$1.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$5.parseExprAtom = function(refDestructuringErrors, forInit) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types$1.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types$1.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n            (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n        }\n      }\n      return id\n\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types$1.num: case types$1.string:\n      return this.parseLiteral(this.value)\n\n    case types$1._null: case types$1._true: case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types$1.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types$1._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types$1._new:\n      return this.parseNew()\n\n    case types$1.backQuote:\n      return this.parseTemplate()\n\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseExprImport = function() {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    var meta = this.parseIdent(true);\n\n    switch (this.type) {\n    case types$1.parenL:\n      return this.parseDynamicImport(node)\n    case types$1.dot:\n      node.meta = meta;\n      return this.parseImportMeta(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    // Verify ending.\n    if (!this.eat(types$1.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$5.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$5.parseParenExpression = function() {\n    this.expect(types$1.parenL);\n    var val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val\n  };\n\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types$1.parenR) {\n        first ? first = false : this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types$1.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n      this.expect(types$1.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$5.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty = [];\n\n  pp$5.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.allowNewDotTarget)\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types$1.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types$1.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$5.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types$1.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types$1.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else {\n        prop.value = this.copyNode(prop.key);\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types$1.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types$1.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign(forInit);\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$5.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types$1.comma)\n        { elt = null; }\n      else if (this.type === types$1.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n      { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n      { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$5.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types$1.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === types$1.privateId) {\n      node.name = this.value;\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n\n    // For validating existence\n    if (this.privateNameStack.length === 0) {\n      this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n    } else {\n      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n    }\n\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$3 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n    // A switch to disallow the identifier reference 'arguments'\n    this.inClassFieldInit = false;\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$3.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$3.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$3.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$3.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$2 = Parser.prototype;\n\n  pp$2.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$2.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$2.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  pp$2.copyNode = function(node) {\n    var newNode = new Node(this, node.start, this.startLoc);\n    for (var prop in node) { newNode[prop] = node[prop]; }\n    return newNode\n  };\n\n  // This file contains Unicode properties extracted from the ECMAScript\n  // specification. The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\n  var ecma13BinaryProperties = ecma12BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties,\n    12: ecma12BinaryProperties,\n    13: ecma13BinaryProperties\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\n  var ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues,\n    12: ecma12ScriptValues,\n    13: ecma13ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  for (var i = 0, list = [9, 10, 11, 12, 13]; i < list.length; i += 1) {\n    var ecmaVersion = list[i];\n\n    buildUnicodeData(ecmaVersion);\n  }\n\n  var pp$1 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$1.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      this.regexp_alternative(state);\n    }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$1.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$1.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$1.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$1.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$1.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$1.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D /* } */)\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!hasOwn(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      state.eat(0x5E /* ^ */);\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D /* ] */)) {\n        return true\n      }\n      // Unreachable since it threw \"unterminated regular expression\" error before.\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$1.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp = Parser.prototype;\n\n  // Move to the next token\n\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp[Symbol.iterator] = function() {\n      var this$1$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1$1.getToken();\n          return {\n            done: token.type === types$1.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n  };\n\n  pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types$1.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types$1.dot)\n    }\n  };\n\n  pp.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.slash, 1)\n  };\n\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types$1.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n  };\n\n  pp.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.bitwiseXOR, 1)\n  };\n\n  pp.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types$1.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.plusMin, 1)\n  };\n\n  pp.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n      return this.finishOp(types$1.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types$1.relational, size)\n  };\n\n  pp.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types$1.arrow)\n    }\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n  };\n\n  pp.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n        }\n        return this.finishOp(types$1.coalesce, 2)\n      }\n    }\n    return this.finishOp(types$1.question, 1)\n  };\n\n  pp.readToken_numberSign = function() { // '#'\n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; // '#'\n    if (ecmaVersion >= 13) {\n      ++this.pos;\n      code = this.fullCharCodeAtPos();\n      if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n        return this.finishToken(types$1.privateId, this.readWord1())\n      }\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types$1.prefix, 1)\n\n    case 35: // '#'\n      return this.readToken_numberSign()\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types$1.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else if (ch === 0x2028 || ch === 0x2029) {\n        if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n        if (this.options.locations) {\n          this.curLine++;\n          this.lineStart = this.pos;\n        }\n      } else {\n        if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types$1.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types$1.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types$1.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types$1.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      // falls through\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      // no default\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(\n          this.pos - 1,\n          \"Invalid escape sequence\"\n        );\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp.readWord = function() {\n    var word = this.readWord1();\n    var type = types$1.name;\n    if (this.keywords.test(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\n  var version = \"8.8.1\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types$1,\n    keywordTypes: keywords,\n    TokContext: TokContext,\n    tokContexts: types,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api].\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types;\n  exports.tokTypes = types$1;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n", "// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n", "var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n", "[\n\t\"md\",\n\t\"markdown\",\n\t\"mdown\",\n\t\"mkdn\",\n\t\"mkd\",\n\t\"mdwn\",\n\t\"mkdown\",\n\t\"ron\"\n]\n", "'use strict';\nmodule.exports = require('./markdown-extensions.json');\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst intToCharMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function(number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst base64 = require(\"./base64\");\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nconst VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nconst VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nconst VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nconst VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\n// eslint-disable-next-line no-unused-vars\nfunction fromVLQSigned(aValue) {\n  const isNegative = (aValue & 1) === 1;\n  const shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  let encoded = \"\";\n  let digit;\n\n  let vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  }\n    throw new Error('\"' + aName + '\" is a required argument.');\n\n}\nexports.getArg = getArg;\n\nconst urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nconst dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  const match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  let url = \"\";\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + \":\";\n  }\n  url += \"//\";\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + \"@\";\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port;\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nconst MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  const cache = [];\n\n  return function(input) {\n    for (let i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        const temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    const result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nconst normalize = lruMemoize(function normalize(aPath) {\n  let path = aPath;\n  const url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  const isAbsolute = exports.isAbsolute(path);\n\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  const parts = [];\n  let start = 0;\n  let i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  let up = 0;\n  for (i = parts.length - 1; i >= 0; i--) {\n    const part = parts[i];\n    if (part === \".\") {\n      parts.splice(i, 1);\n    } else if (part === \"..\") {\n      up++;\n    } else if (up > 0) {\n      if (part === \"\") {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join(\"/\");\n\n  if (path === \"\") {\n    path = isAbsolute ? \"/\" : \".\";\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  const aPathUrl = urlParse(aPath);\n  const aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || \"/\";\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  const joined = aPath.charAt(0) === \"/\"\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, \"\") + \"/\" + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function(aPath) {\n  return aPath.charAt(0) === \"/\" || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, \"\");\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  let level = 0;\n  while (aPath.indexOf(aRoot + \"/\") !== 0) {\n    const index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nconst supportsNullProto = (function() {\n  const obj = Object.create(null);\n  return !(\"__proto__\" in obj);\n}());\n\nfunction identity(s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return \"$\" + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  const length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  /* eslint-disable no-multi-spaces */\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n  /* eslint-enable no-multi-spaces */\n\n  for (let i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  let cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  let cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  let cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, \"\"));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || \"\";\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== \"/\" && sourceURL[0] !== \"/\") {\n      sourceRoot += \"/\";\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    const parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      const index = parsed.path.lastIndexOf(\"/\");\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nclass ArraySet {\n  constructor() {\n    this._array = [];\n    this._set = new Map();\n  }\n\n  /**\n   * Static method for creating ArraySet instances from an existing array.\n   */\n  static fromArray(aArray, aAllowDuplicates) {\n    const set = new ArraySet();\n    for (let i = 0, len = aArray.length; i < len; i++) {\n      set.add(aArray[i], aAllowDuplicates);\n    }\n    return set;\n  }\n\n  /**\n   * Return how many unique items are in this ArraySet. If duplicates have been\n   * added, than those do not count towards the size.\n   *\n   * @returns Number\n   */\n  size() {\n    return this._set.size;\n  }\n\n  /**\n   * Add the given string to this set.\n   *\n   * @param String aStr\n   */\n  add(aStr, aAllowDuplicates) {\n    const isDuplicate = this.has(aStr);\n    const idx = this._array.length;\n    if (!isDuplicate || aAllowDuplicates) {\n      this._array.push(aStr);\n    }\n    if (!isDuplicate) {\n      this._set.set(aStr, idx);\n    }\n  }\n\n  /**\n   * Is the given string a member of this set?\n   *\n   * @param String aStr\n   */\n  has(aStr) {\n      return this._set.has(aStr);\n  }\n\n  /**\n   * What is the index of the given string in the array?\n   *\n   * @param String aStr\n   */\n  indexOf(aStr) {\n    const idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n    throw new Error('\"' + aStr + '\" is not in the set.');\n  }\n\n  /**\n   * What is the element at the given index?\n   *\n   * @param Number aIdx\n   */\n  at(aIdx) {\n    if (aIdx >= 0 && aIdx < this._array.length) {\n      return this._array[aIdx];\n    }\n    throw new Error(\"No element indexed by \" + aIdx);\n  }\n\n  /**\n   * Returns the array representation of this set (which has the proper indices\n   * indicated by indexOf). Note that this is a copy of the internal array used\n   * for storing the members so that no one can mess with internal state.\n   */\n  toArray() {\n    return this._array.slice();\n  }\n}\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const lineA = mappingA.generatedLine;\n  const lineB = mappingB.generatedLine;\n  const columnA = mappingA.generatedColumn;\n  const columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nclass MappingList {\n  constructor() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  }\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  }\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  }\n}\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst util = require(\"./util\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst MappingList = require(\"./mapping-list\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nclass SourceMapGenerator {\n  constructor(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, \"file\", null);\n    this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\n    this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  static fromSourceMap(aSourceMapConsumer) {\n    const sourceRoot = aSourceMapConsumer.sourceRoot;\n    const generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      const newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      let sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  }\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  addMapping(aArgs) {\n    const generated = util.getArg(aArgs, \"generated\");\n    const original = util.getArg(aArgs, \"original\", null);\n    let source = util.getArg(aArgs, \"source\", null);\n    let name = util.getArg(aArgs, \"name\", null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source,\n      name\n    });\n  }\n\n  /**\n   * Set the source content for a source file.\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    let source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  }\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    let sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          \"SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, \" +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    const sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    const newSources = this._mappings.toArray().length > 0\n      ? new ArraySet()\n      : this._sources;\n    const newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function(mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        const original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      const source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      const name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function(srcFile) {\n      const content = aSourceMapConsumer.sourceContentFor(srcFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          srcFile = util.join(aSourceMapPath, srcFile);\n        }\n        if (sourceRoot != null) {\n          srcFile = util.relative(sourceRoot, srcFile);\n        }\n        this.setSourceContent(srcFile, content);\n      }\n    }, this);\n  }\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  _validateMapping(aGenerated, aOriginal, aSource, aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\n        throw new Error(\n            \"original.line and original.column are not numbers -- you probably meant to omit \" +\n            \"the original mapping entirely and only map the generated position. If so, pass \" +\n            \"null for the original mapping instead of an object with empty or null values.\"\n        );\n    }\n\n    if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n\n    } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n             && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n\n    } else {\n      throw new Error(\"Invalid mapping: \" + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  }\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  _serializeMappings() {\n    let previousGeneratedColumn = 0;\n    let previousGeneratedLine = 1;\n    let previousOriginalColumn = 0;\n    let previousOriginalLine = 0;\n    let previousName = 0;\n    let previousSource = 0;\n    let result = \"\";\n    let next;\n    let mapping;\n    let nameIdx;\n    let sourceIdx;\n\n    const mappings = this._mappings.toArray();\n    for (let i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = \"\";\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += \";\";\n          previousGeneratedLine++;\n        }\n      } else if (i > 0) {\n        if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n          continue;\n        }\n        next += \",\";\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  }\n\n  _generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function(source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      const key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  }\n\n  /**\n   * Externalize the source map.\n   */\n  toJSON() {\n    const map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  }\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nSourceMapGenerator.prototype._version = 3;\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  const mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  const cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  } else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    }\n    return mid;\n  }\n\n  // Our needle is less than aHaystack[mid].\n  if (mid - aLow > 1) {\n    // The element is in the lower half.\n    return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n  }\n\n  // we are in termination case (3) or (2) and return the appropriate thing.\n  if (aBias == exports.LEAST_UPPER_BOUND) {\n    return mid;\n  }\n  return aLow < 0 ? -1 : aLow;\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  let index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* Determine browser vs node environment by testing the default top level context. Solution courtesy of: https://stackoverflow.com/questions/17575790/environment-detection-node-js-or-browser */\nconst isBrowserEnvironment = (function() {\n    // eslint-disable-next-line no-undef\n    return (typeof window !== \"undefined\") && (this === window);\n}).call();\n\nif (isBrowserEnvironment) {\n  // Web version of reading a wasm file into an array buffer.\n\n  let mappingsWasm = null;\n\n  module.exports = function readWasm() {\n    if (typeof mappingsWasm === \"string\") {\n      return fetch(mappingsWasm)\n        .then(response => response.arrayBuffer());\n    }\n    if (mappingsWasm instanceof ArrayBuffer) {\n      return Promise.resolve(mappingsWasm);\n    }\n    throw new Error(\"You must provide the string URL or ArrayBuffer contents \" +\n                    \"of lib/mappings.wasm by calling \" +\n                    \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" +\n                    \"before using SourceMapConsumer\");\n  };\n\n  module.exports.initialize = input => mappingsWasm = input;\n} else {\n  // Node version of reading a wasm file into an array buffer.\n  const fs = require(\"fs\");\n  const path = require(\"path\");\n\n  module.exports = function readWasm() {\n    return new Promise((resolve, reject) => {\n      const wasmPath = path.join(__dirname, \"mappings.wasm\");\n      fs.readFile(wasmPath, null, (error, data) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(data.buffer);\n      });\n    });\n  };\n\n  module.exports.initialize = _ => {\n    console.debug(\"SourceMapConsumer.initialize is a no-op when running in node.js\");\n  };\n}\n", "const readWasm = require(\"../lib/read-wasm\");\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.lastGeneratedColumn = null;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\nlet cachedWasm = null;\n\nmodule.exports = function wasm() {\n  if (cachedWasm) {\n    return cachedWasm;\n  }\n\n  const callbackStack = [];\n\n  cachedWasm = readWasm().then(buffer => {\n      return WebAssembly.instantiate(buffer, {\n        env: {\n          mapping_callback(\n            generatedLine,\n            generatedColumn,\n\n            hasLastGeneratedColumn,\n            lastGeneratedColumn,\n\n            hasOriginal,\n            source,\n            originalLine,\n            originalColumn,\n\n            hasName,\n            name\n          ) {\n            const mapping = new Mapping();\n            // JS uses 1-based line numbers, wasm uses 0-based.\n            mapping.generatedLine = generatedLine + 1;\n            mapping.generatedColumn = generatedColumn;\n\n            if (hasLastGeneratedColumn) {\n              // JS uses inclusive last generated column, wasm uses exclusive.\n              mapping.lastGeneratedColumn = lastGeneratedColumn - 1;\n            }\n\n            if (hasOriginal) {\n              mapping.source = source;\n              // JS uses 1-based line numbers, wasm uses 0-based.\n              mapping.originalLine = originalLine + 1;\n              mapping.originalColumn = originalColumn;\n\n              if (hasName) {\n                mapping.name = name;\n              }\n            }\n\n            callbackStack[callbackStack.length - 1](mapping);\n          },\n\n          start_all_generated_locations_for() { console.time(\"all_generated_locations_for\"); },\n          end_all_generated_locations_for() { console.timeEnd(\"all_generated_locations_for\"); },\n\n          start_compute_column_spans() { console.time(\"compute_column_spans\"); },\n          end_compute_column_spans() { console.timeEnd(\"compute_column_spans\"); },\n\n          start_generated_location_for() { console.time(\"generated_location_for\"); },\n          end_generated_location_for() { console.timeEnd(\"generated_location_for\"); },\n\n          start_original_location_for() { console.time(\"original_location_for\"); },\n          end_original_location_for() { console.timeEnd(\"original_location_for\"); },\n\n          start_parse_mappings() { console.time(\"parse_mappings\"); },\n          end_parse_mappings() { console.timeEnd(\"parse_mappings\"); },\n\n          start_sort_by_generated_location() { console.time(\"sort_by_generated_location\"); },\n          end_sort_by_generated_location() { console.timeEnd(\"sort_by_generated_location\"); },\n\n          start_sort_by_original_location() { console.time(\"sort_by_original_location\"); },\n          end_sort_by_original_location() { console.timeEnd(\"sort_by_original_location\"); },\n        }\n      });\n  }).then(Wasm => {\n    return {\n      exports: Wasm.instance.exports,\n      withMappingCallback: (mappingCallback, f) => {\n        callbackStack.push(mappingCallback);\n        try {\n          f();\n        } finally {\n          callbackStack.pop();\n        }\n      }\n    };\n  }).then(null, e => {\n    cachedWasm = null;\n    throw e;\n  });\n\n  return cachedWasm;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\nconst binarySearch = require(\"./binary-search\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst base64VLQ = require(\"./base64-vlq\"); // eslint-disable-line no-unused-vars\nconst readWasm = require(\"../lib/read-wasm\");\nconst wasm = require(\"./wasm\");\n\nconst INTERNAL = Symbol(\"smcInternal\");\n\nclass SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    // If the constructor was called by super(), just return Promise<this>.\n    // Yes, this is a hack to retain the pre-existing API of the base-class\n    // constructor also being an async factory function.\n    if (aSourceMap == INTERNAL) {\n      return Promise.resolve(this);\n    }\n\n    return _factory(aSourceMap, aSourceMapURL);\n  }\n\n  static initialize(opts) {\n    readWasm.initialize(opts[\"lib/mappings.wasm\"]);\n  }\n\n  static fromSourceMap(aSourceMap, aSourceMapURL) {\n    return _factoryBSM(aSourceMap, aSourceMapURL);\n  }\n\n  /**\n   * Construct a new `SourceMapConsumer` from `rawSourceMap` and `sourceMapUrl`\n   * (see the `SourceMapConsumer` constructor for details. Then, invoke the `async\n   * function f(SourceMapConsumer) -> T` with the newly constructed consumer, wait\n   * for `f` to complete, call `destroy` on the consumer, and return `f`'s return\n   * value.\n   *\n   * You must not use the consumer after `f` completes!\n   *\n   * By using `with`, you do not have to remember to manually call `destroy` on\n   * the consumer, since it will be called automatically once `f` completes.\n   *\n   * ```js\n   * const xSquared = await SourceMapConsumer.with(\n   *   myRawSourceMap,\n   *   null,\n   *   async function (consumer) {\n   *     // Use `consumer` inside here and don't worry about remembering\n   *     // to call `destroy`.\n   *\n   *     const x = await whatever(consumer);\n   *     return x * x;\n   *   }\n   * );\n   *\n   * // You may not use that `consumer` anymore out here; it has\n   * // been destroyed. But you can use `xSquared`.\n   * console.log(xSquared);\n   * ```\n   */\n  static async with(rawSourceMap, sourceMapUrl, f) {\n    const consumer = await new SourceMapConsumer(rawSourceMap, sourceMapUrl);\n    try {\n      return await f(consumer);\n    } finally {\n      consumer.destroy();\n    }\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  }\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  eachMapping(aCallback, aContext, aOrder) {\n    throw new Error(\"Subclasses must implement eachMapping\");\n  }\n\n  /**\n   * Returns all generated line and column information for the original source,\n   * line, and column provided. If no column is provided, returns all mappings\n   * corresponding to a either the line we are searching for or the next\n   * closest line that has any mappings. Otherwise, returns all mappings\n   * corresponding to the given line and either the column we are searching for\n   * or the next closest column that has any offsets.\n   *\n   * The only argument is an object with the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number is 1-based.\n   *   - column: Optional. the column number in the original source.\n   *    The column number is 0-based.\n   *\n   * and an array of objects is returned, each with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *    line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *    The column number is 0-based.\n   */\n  allGeneratedPositionsFor(aArgs) {\n    throw new Error(\"Subclasses must implement allGeneratedPositionsFor\");\n  }\n\n  destroy() {\n    throw new Error(\"Subclasses must implement destroy\");\n  }\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nclass BasicSourceMapConsumer extends SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    return super(INTERNAL).then(that => {\n      let sourceMap = aSourceMap;\n      if (typeof aSourceMap === \"string\") {\n        sourceMap = util.parseSourceMapInput(aSourceMap);\n      }\n\n      const version = util.getArg(sourceMap, \"version\");\n      let sources = util.getArg(sourceMap, \"sources\");\n      // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n      // requires the array) to play nice here.\n      const names = util.getArg(sourceMap, \"names\", []);\n      let sourceRoot = util.getArg(sourceMap, \"sourceRoot\", null);\n      const sourcesContent = util.getArg(sourceMap, \"sourcesContent\", null);\n      const mappings = util.getArg(sourceMap, \"mappings\");\n      const file = util.getArg(sourceMap, \"file\", null);\n\n      // Once again, Sass deviates from the spec and supplies the version as a\n      // string rather than a number, so we use loose equality checking here.\n      if (version != that._version) {\n        throw new Error(\"Unsupported version: \" + version);\n      }\n\n      if (sourceRoot) {\n        sourceRoot = util.normalize(sourceRoot);\n      }\n\n      sources = sources\n        .map(String)\n        // Some source maps produce relative source paths like \"./foo.js\" instead of\n        // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n        // See bugzil.la/1090768.\n        .map(util.normalize)\n        // Always ensure that absolute sources are internally stored relative to\n        // the source root, if the source root is absolute. Not doing this would\n        // be particularly problematic when the source root is a prefix of the\n        // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n        .map(function(source) {\n          return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n            ? util.relative(sourceRoot, source)\n            : source;\n        });\n\n      // Pass `true` below to allow duplicate names and sources. While source maps\n      // are intended to be compressed and deduplicated, the TypeScript compiler\n      // sometimes generates source maps with duplicates in them. See Github issue\n      // #72 and bugzil.la/889492.\n      that._names = ArraySet.fromArray(names.map(String), true);\n      that._sources = ArraySet.fromArray(sources, true);\n\n      that._absoluteSources = that._sources.toArray().map(function(s) {\n        return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n      });\n\n      that.sourceRoot = sourceRoot;\n      that.sourcesContent = sourcesContent;\n      that._mappings = mappings;\n      that._sourceMapURL = aSourceMapURL;\n      that.file = file;\n\n      that._computedColumnSpans = false;\n      that._mappingsPtr = 0;\n      that._wasm = null;\n\n      return wasm().then(w => {\n        that._wasm = w;\n        return that;\n      });\n    });\n  }\n\n  /**\n   * Utility function to find the index of a source.  Returns -1 if not\n   * found.\n   */\n  _findSourceIndex(aSource) {\n    let relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    if (this._sources.has(relativeSource)) {\n      return this._sources.indexOf(relativeSource);\n    }\n\n    // Maybe aSource is an absolute URL as returned by |sources|.  In\n    // this case we can't simply undo the transform.\n    for (let i = 0; i < this._absoluteSources.length; ++i) {\n      if (this._absoluteSources[i] == aSource) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @param String aSourceMapURL\n   *        The URL at which the source map can be found (optional)\n   * @returns BasicSourceMapConsumer\n   */\n  static fromSourceMap(aSourceMap, aSourceMapURL) {\n    return new BasicSourceMapConsumer(aSourceMap.toString());\n  }\n\n  get sources() {\n    return this._absoluteSources.slice();\n  }\n\n  _getMappingsPtr() {\n    if (this._mappingsPtr === 0) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this._mappingsPtr;\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    const size = aStr.length;\n\n    const mappingsBufPtr = this._wasm.exports.allocate_mappings(size);\n    const mappingsBuf = new Uint8Array(this._wasm.exports.memory.buffer, mappingsBufPtr, size);\n    for (let i = 0; i < size; i++) {\n      mappingsBuf[i] = aStr.charCodeAt(i);\n    }\n\n    const mappingsPtr = this._wasm.exports.parse_mappings(mappingsBufPtr);\n\n    if (!mappingsPtr) {\n      const error = this._wasm.exports.get_last_error();\n      let msg = `Error parsing mappings (code ${error}): `;\n\n      // XXX: keep these error codes in sync with `fitzgen/source-map-mappings`.\n      switch (error) {\n        case 1:\n          msg += \"the mappings contained a negative line, column, source index, or name index\";\n          break;\n        case 2:\n          msg += \"the mappings contained a number larger than 2**32\";\n          break;\n        case 3:\n          msg += \"reached EOF while in the middle of parsing a VLQ\";\n          break;\n        case 4:\n          msg += \"invalid base 64 character while parsing a VLQ\";\n          break;\n        default:\n          msg += \"unknown error code\";\n          break;\n      }\n\n      throw new Error(msg);\n    }\n\n    this._mappingsPtr = mappingsPtr;\n  }\n\n  eachMapping(aCallback, aContext, aOrder) {\n    const context = aContext || null;\n    const order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n    const sourceRoot = this.sourceRoot;\n\n    this._wasm.withMappingCallback(\n      mapping => {\n        if (mapping.source !== null) {\n          mapping.source = this._sources.at(mapping.source);\n          mapping.source = util.computeSourceURL(sourceRoot, mapping.source, this._sourceMapURL);\n\n          if (mapping.name !== null) {\n            mapping.name = this._names.at(mapping.name);\n          }\n        }\n\n        aCallback.call(context, mapping);\n      },\n      () => {\n        switch (order) {\n        case SourceMapConsumer.GENERATED_ORDER:\n          this._wasm.exports.by_generated_location(this._getMappingsPtr());\n          break;\n        case SourceMapConsumer.ORIGINAL_ORDER:\n          this._wasm.exports.by_original_location(this._getMappingsPtr());\n          break;\n        default:\n          throw new Error(\"Unknown order of iteration.\");\n        }\n      }\n    );\n  }\n\n  allGeneratedPositionsFor(aArgs) {\n    let source = util.getArg(aArgs, \"source\");\n    const originalLine = util.getArg(aArgs, \"line\");\n    const originalColumn = aArgs.column || 0;\n\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return [];\n    }\n\n    if (originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    const mappings = [];\n\n    this._wasm.withMappingCallback(\n      m => {\n        let lastColumn = m.lastGeneratedColumn;\n        if (this._computedColumnSpans && lastColumn === null) {\n          lastColumn = Infinity;\n        }\n        mappings.push({\n          line: m.generatedLine,\n          column: m.generatedColumn,\n          lastColumn,\n        });\n      }, () => {\n        this._wasm.exports.all_generated_locations_for(\n          this._getMappingsPtr(),\n          source,\n          originalLine - 1,\n          \"column\" in aArgs,\n          originalColumn\n        );\n      }\n    );\n\n    return mappings;\n  }\n\n  destroy() {\n    if (this._mappingsPtr !== 0) {\n      this._wasm.exports.free_mappings(this._mappingsPtr);\n      this._mappingsPtr = 0;\n    }\n  }\n\n  /**\n   * Compute the last column for each generated mapping. The last column is\n   * inclusive.\n   */\n  computeColumnSpans() {\n    if (this._computedColumnSpans) {\n      return;\n    }\n\n    this._wasm.exports.compute_column_spans(this._getMappingsPtr());\n    this._computedColumnSpans = true;\n  }\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the generated source.  The column\n   *     number is 0-based.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the original source, or null.  The\n   *     column number is 0-based.\n   *   - name: The original identifier, or null.\n   */\n  originalPositionFor(aArgs) {\n    const needle = {\n      generatedLine: util.getArg(aArgs, \"line\"),\n      generatedColumn: util.getArg(aArgs, \"column\")\n    };\n\n    if (needle.generatedLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.generatedColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    let bias = util.getArg(aArgs, \"bias\", SourceMapConsumer.GREATEST_LOWER_BOUND);\n    if (bias == null) {\n      bias = SourceMapConsumer.GREATEST_LOWER_BOUND;\n    }\n\n    let mapping;\n    this._wasm.withMappingCallback(m => mapping = m, () => {\n      this._wasm.exports.original_location_for(\n        this._getMappingsPtr(),\n        needle.generatedLine - 1,\n        needle.generatedColumn,\n        bias\n      );\n    });\n\n    if (mapping) {\n      if (mapping.generatedLine === needle.generatedLine) {\n        let source = util.getArg(mapping, \"source\", null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n\n        let name = util.getArg(mapping, \"name\", null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n\n        return {\n          source,\n          line: util.getArg(mapping, \"originalLine\", null),\n          column: util.getArg(mapping, \"originalColumn\", null),\n          name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  }\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function(sc) { return sc == null; });\n  }\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    const index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    let relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    let url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      const fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n\n    throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n  }\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the original source.  The column\n   *     number is 0-based.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *     The column number is 0-based.\n   */\n  generatedPositionFor(aArgs) {\n    let source = util.getArg(aArgs, \"source\");\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    const needle = {\n      source,\n      originalLine: util.getArg(aArgs, \"line\"),\n      originalColumn: util.getArg(aArgs, \"column\")\n    };\n\n    if (needle.originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    let bias = util.getArg(aArgs, \"bias\", SourceMapConsumer.GREATEST_LOWER_BOUND);\n    if (bias == null) {\n      bias = SourceMapConsumer.GREATEST_LOWER_BOUND;\n    }\n\n    let mapping;\n    this._wasm.withMappingCallback(m => mapping = m, () => {\n      this._wasm.exports.generated_location_for(\n        this._getMappingsPtr(),\n        needle.source,\n        needle.originalLine - 1,\n        needle.originalColumn,\n        bias\n      );\n    });\n\n    if (mapping) {\n      if (mapping.source === needle.source) {\n        let lastColumn = mapping.lastGeneratedColumn;\n        if (this._computedColumnSpans && lastColumn === null) {\n          lastColumn = Infinity;\n        }\n        return {\n          line: util.getArg(mapping, \"generatedLine\", null),\n          column: util.getArg(mapping, \"generatedColumn\", null),\n          lastColumn,\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  }\n}\n\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nclass IndexedSourceMapConsumer extends SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    return super(INTERNAL).then(that => {\n      let sourceMap = aSourceMap;\n      if (typeof aSourceMap === \"string\") {\n        sourceMap = util.parseSourceMapInput(aSourceMap);\n      }\n\n      const version = util.getArg(sourceMap, \"version\");\n      const sections = util.getArg(sourceMap, \"sections\");\n\n      if (version != that._version) {\n        throw new Error(\"Unsupported version: \" + version);\n      }\n\n      that._sources = new ArraySet();\n      that._names = new ArraySet();\n      that.__generatedMappings = null;\n      that.__originalMappings = null;\n      that.__generatedMappingsUnsorted = null;\n      that.__originalMappingsUnsorted = null;\n\n      let lastOffset = {\n        line: -1,\n        column: 0\n      };\n      return Promise.all(sections.map(s => {\n        if (s.url) {\n          // The url field will require support for asynchronicity.\n          // See https://github.com/mozilla/source-map/issues/16\n          throw new Error(\"Support for url field in sections not implemented.\");\n        }\n        const offset = util.getArg(s, \"offset\");\n        const offsetLine = util.getArg(offset, \"line\");\n        const offsetColumn = util.getArg(offset, \"column\");\n\n        if (offsetLine < lastOffset.line ||\n            (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n          throw new Error(\"Section offsets must be ordered and non-overlapping.\");\n        }\n        lastOffset = offset;\n\n        const cons = new SourceMapConsumer(util.getArg(s, \"map\"), aSourceMapURL);\n        return cons.then(consumer => {\n          return {\n            generatedOffset: {\n              // The offset fields are 0-based, but we use 1-based indices when\n              // encoding/decoding from VLQ.\n              generatedLine: offsetLine + 1,\n              generatedColumn: offsetColumn + 1\n            },\n            consumer\n          };\n        });\n      })).then(s => {\n        that._sections = s;\n        return that;\n      });\n    });\n  }\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n  get _generatedMappings() {\n    if (!this.__generatedMappings) {\n      this._sortGeneratedMappings();\n    }\n\n    return this.__generatedMappings;\n  }\n\n  get _originalMappings() {\n    if (!this.__originalMappings) {\n      this._sortOriginalMappings();\n    }\n\n    return this.__originalMappings;\n  }\n\n  get _generatedMappingsUnsorted() {\n    if (!this.__generatedMappingsUnsorted) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappingsUnsorted;\n  }\n\n  get _originalMappingsUnsorted() {\n    if (!this.__originalMappingsUnsorted) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappingsUnsorted;\n  }\n\n  _sortGeneratedMappings() {\n    const mappings = this._generatedMappingsUnsorted;\n    mappings.sort(util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = mappings;\n  }\n\n  _sortOriginalMappings() {\n    const mappings = this._originalMappingsUnsorted;\n    mappings.sort(util.compareByOriginalPositions);\n    this.__originalMappings = mappings;\n  }\n\n  /**\n   * The list of original sources.\n   */\n  get sources() {\n    const sources = [];\n    for (let i = 0; i < this._sections.length; i++) {\n      for (let j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the generated source.  The column\n   *     number is 0-based.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the original source, or null.  The\n   *     column number is 0-based.\n   *   - name: The original identifier, or null.\n   */\n  originalPositionFor(aArgs) {\n    const needle = {\n      generatedLine: util.getArg(aArgs, \"line\"),\n      generatedColumn: util.getArg(aArgs, \"column\")\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    const sectionIndex = binarySearch.search(needle, this._sections,\n      function(aNeedle, section) {\n        const cmp = aNeedle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (aNeedle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    const section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  }\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  hasContentsOfAllSources() {\n    return this._sections.every(function(s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  }\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  sourceContentFor(aSource, nullOnMissing) {\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      const content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n  }\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the original source.  The column\n   *     number is 0-based.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *     The column number is 0-based.\n   */\n  generatedPositionFor(aArgs) {\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, \"source\")) === -1) {\n        continue;\n      }\n      const generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        const ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    const generatedMappings = this.__generatedMappingsUnsorted = [];\n    const originalMappings = this.__originalMappingsUnsorted = [];\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      const sectionMappings = [];\n      section.consumer.eachMapping(m => sectionMappings.push(m));\n\n      for (let j = 0; j < sectionMappings.length; j++) {\n        const mapping = sectionMappings[j];\n\n        // TODO: test if null is correct here.  The original code used\n        // `source`, which would actually have gotten used as null because\n        // var's get hoisted.\n        // See: https://github.com/mozilla/source-map/issues/333\n        let source = util.computeSourceURL(section.consumer.sourceRoot, null, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        let name = null;\n        if (mapping.name) {\n          this._names.add(mapping.name);\n          name = this._names.indexOf(mapping.name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        const adjustedMapping = {\n          source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name\n        };\n\n        generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === \"number\") {\n          originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n  }\n\n  eachMapping(aCallback, aContext, aOrder) {\n    const context = aContext || null;\n    const order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    let mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    const sourceRoot = this.sourceRoot;\n    mappings.map(function(mapping) {\n      let source = null;\n      if (mapping.source !== null) {\n        source = this._sources.at(mapping.source);\n        source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      }\n      return {\n        source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  }\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  _findMapping(aNeedle, aMappings, aLineName,\n              aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError(\"Line must be greater than or equal to 1, got \"\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError(\"Column must be greater than or equal to 0, got \"\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  }\n\n  allGeneratedPositionsFor(aArgs) {\n    const line = util.getArg(aArgs, \"line\");\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    const needle = {\n      source: util.getArg(aArgs, \"source\"),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, \"column\", 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    if (needle.originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    const mappings = [];\n\n    let index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      let mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        const originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          let lastColumn = mapping.lastGeneratedColumn;\n          if (this._computedColumnSpans && lastColumn === null) {\n            lastColumn = Infinity;\n          }\n          mappings.push({\n            line: util.getArg(mapping, \"generatedLine\", null),\n            column: util.getArg(mapping, \"generatedColumn\", null),\n            lastColumn,\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        const originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          let lastColumn = mapping.lastGeneratedColumn;\n          if (this._computedColumnSpans && lastColumn === null) {\n            lastColumn = Infinity;\n          }\n          mappings.push({\n            line: util.getArg(mapping, \"generatedLine\", null),\n            column: util.getArg(mapping, \"generatedColumn\", null),\n            lastColumn,\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  }\n\n  destroy() {\n    for (let i = 0; i < this._sections.length; i++) {\n      this._sections[i].consumer.destroy();\n    }\n  }\n}\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n/*\n * Cheat to get around inter-twingled classes.  `factory()` can be at the end\n * where it has access to non-hoisted classes, but it gets hoisted itself.\n */\nfunction _factory(aSourceMap, aSourceMapURL) {\n  let sourceMap = aSourceMap;\n  if (typeof aSourceMap === \"string\") {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  const consumer = sourceMap.sections != null\n      ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n      : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n  return Promise.resolve(consumer);\n}\n\nfunction _factoryBSM(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst SourceMapGenerator = require(\"./source-map-generator\").SourceMapGenerator;\nconst util = require(\"./util\");\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nconst REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nconst NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nconst isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nclass SourceNode {\n  constructor(aLine, aColumn, aSource, aChunks, aName) {\n    this.children = [];\n    this.sourceContents = {};\n    this.line = aLine == null ? null : aLine;\n    this.column = aColumn == null ? null : aColumn;\n    this.source = aSource == null ? null : aSource;\n    this.name = aName == null ? null : aName;\n    this[isSourceNode] = true;\n    if (aChunks != null) this.add(aChunks);\n  }\n\n  /**\n   * Creates a SourceNode from generated code and a SourceMapConsumer.\n   *\n   * @param aGeneratedCode The generated code\n   * @param aSourceMapConsumer The SourceMap for the generated code\n   * @param aRelativePath Optional. The path that relative sources in the\n   *        SourceMapConsumer should be relative to.\n   */\n  static fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    const node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    const remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    let remainingLinesIndex = 0;\n    const shiftNextLine = function() {\n      const lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      const newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    let lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    let lastMapping = null;\n    let nextLine;\n\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          nextLine = remainingLines[remainingLinesIndex] || \"\";\n          const code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        nextLine = remainingLines[remainingLinesIndex] || \"\";\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        const source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  }\n\n  /**\n   * Add a chunk of generated JS to this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  add(aChunk) {\n    if (Array.isArray(aChunk)) {\n      aChunk.forEach(function(chunk) {\n        this.add(chunk);\n      }, this);\n    } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      if (aChunk) {\n        this.children.push(aChunk);\n      }\n    } else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Add a chunk of generated JS to the beginning of this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  prepend(aChunk) {\n    if (Array.isArray(aChunk)) {\n      for (let i = aChunk.length - 1; i >= 0; i--) {\n        this.prepend(aChunk[i]);\n      }\n    } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      this.children.unshift(aChunk);\n    } else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Walk over the tree of JS snippets in this node and its children. The\n   * walking function is called once for each snippet of JS and is passed that\n   * snippet and the its original associated source's line/column location.\n   *\n   * @param aFn The traversal function.\n   */\n  walk(aFn) {\n    let chunk;\n    for (let i = 0, len = this.children.length; i < len; i++) {\n      chunk = this.children[i];\n      if (chunk[isSourceNode]) {\n        chunk.walk(aFn);\n      } else if (chunk !== \"\") {\n        aFn(chunk, { source: this.source,\n                      line: this.line,\n                      column: this.column,\n                      name: this.name });\n      }\n    }\n  }\n\n  /**\n   * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n   * each of `this.children`.\n   *\n   * @param aSep The separator.\n   */\n  join(aSep) {\n    let newChildren;\n    let i;\n    const len = this.children.length;\n    if (len > 0) {\n      newChildren = [];\n      for (i = 0; i < len - 1; i++) {\n        newChildren.push(this.children[i]);\n        newChildren.push(aSep);\n      }\n      newChildren.push(this.children[i]);\n      this.children = newChildren;\n    }\n    return this;\n  }\n\n  /**\n   * Call String.prototype.replace on the very right-most source snippet. Useful\n   * for trimming whitespace from the end of a source node, etc.\n   *\n   * @param aPattern The pattern to replace.\n   * @param aReplacement The thing to replace the pattern with.\n   */\n  replaceRight(aPattern, aReplacement) {\n    const lastChild = this.children[this.children.length - 1];\n    if (lastChild[isSourceNode]) {\n      lastChild.replaceRight(aPattern, aReplacement);\n    } else if (typeof lastChild === \"string\") {\n      this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n    } else {\n      this.children.push(\"\".replace(aPattern, aReplacement));\n    }\n    return this;\n  }\n\n  /**\n   * Set the source content for a source file. This will be added to the SourceMapGenerator\n   * in the sourcesContent field.\n   *\n   * @param aSourceFile The filename of the source file\n   * @param aSourceContent The content of the source file\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  }\n\n  /**\n   * Walk over the tree of SourceNodes. The walking function is called for each\n   * source file content and is passed the filename and source content.\n   *\n   * @param aFn The traversal function.\n   */\n  walkSourceContents(aFn) {\n    for (let i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    const sources = Object.keys(this.sourceContents);\n    for (let i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  }\n\n  /**\n   * Return the string representation of this source node. Walks over the tree\n   * and concatenates all the various snippets together to one string.\n   */\n  toString() {\n    let str = \"\";\n    this.walk(function(chunk) {\n      str += chunk;\n    });\n    return str;\n  }\n\n  /**\n   * Returns the string representation of this source node along with a source\n   * map.\n   */\n  toStringWithSourceMap(aArgs) {\n    const generated = {\n      code: \"\",\n      line: 1,\n      column: 0\n    };\n    const map = new SourceMapGenerator(aArgs);\n    let sourceMappingActive = false;\n    let lastOriginalSource = null;\n    let lastOriginalLine = null;\n    let lastOriginalColumn = null;\n    let lastOriginalName = null;\n    this.walk(function(chunk, original) {\n      generated.code += chunk;\n      if (original.source !== null\n          && original.line !== null\n          && original.column !== null) {\n        if (lastOriginalSource !== original.source\n          || lastOriginalLine !== original.line\n          || lastOriginalColumn !== original.column\n          || lastOriginalName !== original.name) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n        lastOriginalSource = original.source;\n        lastOriginalLine = original.line;\n        lastOriginalColumn = original.column;\n        lastOriginalName = original.name;\n        sourceMappingActive = true;\n      } else if (sourceMappingActive) {\n        map.addMapping({\n          generated: {\n            line: generated.line,\n            column: generated.column\n          }\n        });\n        lastOriginalSource = null;\n        sourceMappingActive = false;\n      }\n      for (let idx = 0, length = chunk.length; idx < length; idx++) {\n        if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n          generated.line++;\n          generated.column = 0;\n          // Mappings end at eol\n          if (idx + 1 === length) {\n            lastOriginalSource = null;\n            sourceMappingActive = false;\n          } else if (sourceMappingActive) {\n            map.addMapping({\n              source: original.source,\n              original: {\n                line: original.line,\n                column: original.column\n              },\n              generated: {\n                line: generated.line,\n                column: generated.column\n              },\n              name: original.name\n            });\n          }\n        } else {\n          generated.column++;\n        }\n      }\n    });\n    this.walkSourceContents(function(sourceFile, sourceContent) {\n      map.setSourceContent(sourceFile, sourceContent);\n    });\n\n    return { code: generated.code, map };\n  }\n}\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require(\"./lib/source-map-generator\").SourceMapGenerator;\nexports.SourceMapConsumer = require(\"./lib/source-map-consumer\").SourceMapConsumer;\nexports.SourceNode = require(\"./lib/source-node\").SourceNode;\n", "'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n", "'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n", "'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n", "'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n", "'use strict';\n\nmodule.exports = require('./lib/picomatch');\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:fs/promises\" has been externalized for browser compatibility. Cannot access \"node:fs/promises.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n", "/*!\n * is-extendable <https://github.com/jonschlinkert/is-extendable>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isExtendable(val) {\n  return typeof val !== 'undefined' && val !== null\n    && (typeof val === 'object' || typeof val === 'function');\n};\n", "'use strict';\n\nvar isObject = require('is-extendable');\n\nmodule.exports = function extend(o/*, objects*/) {\n  if (!isObject(o)) { o = {}; }\n\n  var len = arguments.length;\n  for (var i = 1; i < len; i++) {\n    var obj = arguments[i];\n\n    if (isObject(obj)) {\n      assign(o, obj);\n    }\n  }\n  return o;\n};\n\nfunction assign(a, b) {\n  for (var key in b) {\n    if (hasOwn(b, key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n", "'use strict';\n\nvar typeOf = require('kind-of');\nvar extend = require('extend-shallow');\n\n/**\n * Parse sections in `input` with the given `options`.\n *\n * ```js\n * var sections = require('{%= name %}');\n * var result = sections(input, options);\n * // { content: 'Content before sections', sections: [] }\n * ```\n * @param {String|Buffer|Object} `input` If input is an object, it's `content` property must be a string or buffer.\n * @param {Object} options\n * @return {Object} Returns an object with a `content` string and an array of `sections` objects.\n * @api public\n */\n\nmodule.exports = function(input, options) {\n  if (typeof options === 'function') {\n    options = { parse: options };\n  }\n\n  var file = toObject(input);\n  var defaults = {section_delimiter: '---', parse: identity};\n  var opts = extend({}, defaults, options);\n  var delim = opts.section_delimiter;\n  var lines = file.content.split(/\\r?\\n/);\n  var sections = null;\n  var section = createSection();\n  var content = [];\n  var stack = [];\n\n  function initSections(val) {\n    file.content = val;\n    sections = [];\n    content = [];\n  }\n\n  function closeSection(val) {\n    if (stack.length) {\n      section.key = getKey(stack[0], delim);\n      section.content = val;\n      opts.parse(section, sections);\n      sections.push(section);\n      section = createSection();\n      content = [];\n      stack = [];\n    }\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var len = stack.length;\n    var ln = line.trim();\n\n    if (isDelimiter(ln, delim)) {\n      if (ln.length === 3 && i !== 0) {\n        if (len === 0 || len === 2) {\n          content.push(line);\n          continue;\n        }\n        stack.push(ln);\n        section.data = content.join('\\n');\n        content = [];\n        continue;\n      }\n\n      if (sections === null) {\n        initSections(content.join('\\n'));\n      }\n\n      if (len === 2) {\n        closeSection(content.join('\\n'));\n      }\n\n      stack.push(ln);\n      continue;\n    }\n\n    content.push(line);\n  }\n\n  if (sections === null) {\n    initSections(content.join('\\n'));\n  } else {\n    closeSection(content.join('\\n'));\n  }\n\n  file.sections = sections;\n  return file;\n};\n\nfunction isDelimiter(line, delim) {\n  if (line.slice(0, delim.length) !== delim) {\n    return false;\n  }\n  if (line.charAt(delim.length + 1) === delim.slice(-1)) {\n    return false;\n  }\n  return true;\n}\n\nfunction toObject(input) {\n  if (typeOf(input) !== 'object') {\n    input = { content: input };\n  }\n\n  if (typeof input.content !== 'string' && !isBuffer(input.content)) {\n    throw new TypeError('expected a buffer or string');\n  }\n\n  input.content = input.content.toString();\n  input.sections = [];\n  return input;\n}\n\nfunction getKey(val, delim) {\n  return val ? val.slice(delim.length).trim() : '';\n}\n\nfunction createSection() {\n  return { key: '', data: '', content: '' };\n}\n\nfunction identity(val) {\n  return val;\n}\n\nfunction isBuffer(val) {\n  if (val && val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n", "'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n", "// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n", "'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n", "'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n", "'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n", "'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n", "// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n", "'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n", "'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n", "// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n", "// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n", "'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n", "// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n", "'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n", "'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n", "'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /* eslint-disable no-redeclare */\n  /* global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n", "// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n", "'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, iterator, options) {\n  if (typeof iterator === 'object' && iterator !== null && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  return loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n", "'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// [24] b-line-feed       ::=     #xA    /* LF */\n// [25] b-carriage-return ::=     #xD    /* CR */\n// [3]  c-byte-order-mark ::=     #xFEFF\nfunction isNsChar(c) {\n  return isPrintable(c) && !isWhitespace(c)\n    // byte-order-mark\n    && c !== 0xFEFF\n    // b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c, prev) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    // /* An ns-char preceding */ \"#\"\n    && c !== CHAR_COLON\n    && ((c !== CHAR_SHARP) || (prev && isNsChar(prev)));\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char, prev_char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (index !== 0) pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n", "'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n", "'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n", "'use strict';\n\nconst yaml = require('js-yaml');\n\n/**\n * Default engines\n */\n\nconst engines = exports = module.exports;\n\n/**\n * YAML\n */\n\nengines.yaml = {\n  parse: yaml.safeLoad.bind(yaml),\n  stringify: yaml.safeDump.bind(yaml)\n};\n\n/**\n * JSON\n */\n\nengines.json = {\n  parse: JSON.parse.bind(JSON),\n  stringify: function(obj, options) {\n    const opts = Object.assign({replacer: null, space: 2}, options);\n    return JSON.stringify(obj, opts.replacer, opts.space);\n  }\n};\n\n/**\n * JavaScript\n */\n\nengines.javascript = {\n  parse: function parse(str, options, wrap) {\n    /* eslint no-eval: 0 */\n    try {\n      if (wrap !== false) {\n        str = '(function() {\\nreturn ' + str.trim() + ';\\n}());';\n      }\n      return eval(str) || {};\n    } catch (err) {\n      if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {\n        return parse(str, options, false);\n      }\n      throw new SyntaxError(err);\n    }\n  },\n  stringify: function() {\n    throw new Error('stringifying JavaScript is not supported');\n  }\n};\n", "/*!\n * strip-bom-string <https://github.com/jonschlinkert/strip-bom-string>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(str) {\n  if (typeof str === 'string' && str.charAt(0) === '\\ufeff') {\n    return str.slice(1);\n  }\n  return str;\n};\n", "'use strict';\n\nconst stripBom = require('strip-bom-string');\nconst typeOf = require('kind-of');\n\nexports.define = function(obj, key, val) {\n  Reflect.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: val\n  });\n};\n\n/**\n * Returns true if `val` is a buffer\n */\n\nexports.isBuffer = function(val) {\n  return typeOf(val) === 'buffer';\n};\n\n/**\n * Returns true if `val` is an object\n */\n\nexports.isObject = function(val) {\n  return typeOf(val) === 'object';\n};\n\n/**\n * Cast `input` to a buffer\n */\n\nexports.toBuffer = function(input) {\n  return typeof input === 'string' ? Buffer.from(input) : input;\n};\n\n/**\n * Cast `val` to a string.\n */\n\nexports.toString = function(input) {\n  if (exports.isBuffer(input)) return stripBom(String(input));\n  if (typeof input !== 'string') {\n    throw new TypeError('expected input to be a string or buffer');\n  }\n  return stripBom(input);\n};\n\n/**\n * Cast `val` to an array.\n */\n\nexports.arrayify = function(val) {\n  return val ? (Array.isArray(val) ? val : [val]) : [];\n};\n\n/**\n * Returns true if `str` starts with `substr`.\n */\n\nexports.startsWith = function(str, substr, len) {\n  if (typeof len !== 'number') len = substr.length;\n  return str.slice(0, len) === substr;\n};\n", "'use strict';\n\nconst engines = require('./engines');\nconst utils = require('./utils');\n\nmodule.exports = function(options) {\n  const opts = Object.assign({}, options);\n\n  // ensure that delimiters are an array\n  opts.delimiters = utils.arrayify(opts.delims || opts.delimiters || '---');\n  if (opts.delimiters.length === 1) {\n    opts.delimiters.push(opts.delimiters[0]);\n  }\n\n  opts.language = (opts.language || opts.lang || 'yaml').toLowerCase();\n  opts.engines = Object.assign({}, engines, opts.parsers, opts.engines);\n  return opts;\n};\n", "'use strict';\n\nmodule.exports = function(name, options) {\n  let engine = options.engines[name] || options.engines[aliase(name)];\n  if (typeof engine === 'undefined') {\n    throw new Error('gray-matter engine \"' + name + '\" is not registered');\n  }\n  if (typeof engine === 'function') {\n    engine = { parse: engine };\n  }\n  return engine;\n};\n\nfunction aliase(name) {\n  switch (name.toLowerCase()) {\n    case 'js':\n    case 'javascript':\n      return 'javascript';\n    case 'coffee':\n    case 'coffeescript':\n    case 'cson':\n      return 'coffee';\n    case 'yaml':\n    case 'yml':\n      return 'yaml';\n    default: {\n      return name;\n    }\n  }\n}\n", "'use strict';\n\nconst typeOf = require('kind-of');\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, data, options) {\n  if (data == null && options == null) {\n    switch (typeOf(file)) {\n      case 'object':\n        data = file.data;\n        options = {};\n        break;\n      case 'string':\n        return file;\n      default: {\n        throw new TypeError('expected file to be a string or object');\n      }\n    }\n  }\n\n  const str = file.content;\n  const opts = defaults(options);\n  if (data == null) {\n    if (!opts.data) return file;\n    data = opts.data;\n  }\n\n  const language = file.language || opts.language;\n  const engine = getEngine(language, opts);\n  if (typeof engine.stringify !== 'function') {\n    throw new TypeError('expected \"' + language + '.stringify\" to be a function');\n  }\n\n  data = Object.assign({}, file.data, data);\n  const open = opts.delimiters[0];\n  const close = opts.delimiters[1];\n  const matter = engine.stringify(data, options).trim();\n  let buf = '';\n\n  if (matter !== '{}') {\n    buf = newline(open) + newline(matter) + newline(close);\n  }\n\n  if (typeof file.excerpt === 'string' && file.excerpt !== '') {\n    if (str.indexOf(file.excerpt.trim()) === -1) {\n      buf += newline(file.excerpt) + newline(close);\n    }\n  }\n\n  return buf + newline(str);\n};\n\nfunction newline(str) {\n  return str.slice(-1) !== '\\n' ? str + '\\n' : str;\n}\n", "'use strict';\n\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, options) {\n  const opts = defaults(options);\n\n  if (file.data == null) {\n    file.data = {};\n  }\n\n  if (typeof opts.excerpt === 'function') {\n    return opts.excerpt(file, opts);\n  }\n\n  const sep = file.data.excerpt_separator || opts.excerpt_separator;\n  if (sep == null && (opts.excerpt === false || opts.excerpt == null)) {\n    return file;\n  }\n\n  const delimiter = typeof opts.excerpt === 'string'\n    ? opts.excerpt\n    : (sep || opts.delimiters[0]);\n\n  // if enabled, get the excerpt defined after front-matter\n  const idx = file.content.indexOf(delimiter);\n  if (idx !== -1) {\n    file.excerpt = file.content.slice(0, idx);\n  }\n\n  return file;\n};\n", "'use strict';\n\nconst typeOf = require('kind-of');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\n/**\n * Normalize the given value to ensure an object is returned\n * with the expected properties.\n */\n\nmodule.exports = function(file) {\n  if (typeOf(file) !== 'object') {\n    file = { content: file };\n  }\n\n  if (typeOf(file.data) !== 'object') {\n    file.data = {};\n  }\n\n  // if file was passed as an object, ensure that\n  // \"file.content\" is set\n  if (file.contents && file.content == null) {\n    file.content = file.contents;\n  }\n\n  // set non-enumerable properties on the file object\n  utils.define(file, 'orig', utils.toBuffer(file.content));\n  utils.define(file, 'language', file.language || '');\n  utils.define(file, 'matter', file.matter || '');\n  utils.define(file, 'stringify', function(data, options) {\n    if (options && options.language) {\n      file.language = options.language;\n    }\n    return stringify(file, data, options);\n  });\n\n  // strip BOM and ensure that \"file.content\" is a string\n  file.content = utils.toString(file.content);\n  file.isEmpty = false;\n  file.excerpt = '';\n  return file;\n};\n", "'use strict';\n\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(language, str, options) {\n  const opts = defaults(options);\n  const engine = getEngine(language, opts);\n  if (typeof engine.parse !== 'function') {\n    throw new TypeError('expected \"' + language + '.parse\" to be a function');\n  }\n  return engine.parse(str, opts);\n};\n", "'use strict';\n\nconst fs = require('fs');\nconst sections = require('section-matter');\nconst defaults = require('./lib/defaults');\nconst stringify = require('./lib/stringify');\nconst excerpt = require('./lib/excerpt');\nconst engines = require('./lib/engines');\nconst toFile = require('./lib/to-file');\nconst parse = require('./lib/parse');\nconst utils = require('./lib/utils');\n\n/**\n * Takes a string or object with `content` property, extracts\n * and parses front-matter from the string, then returns an object\n * with `data`, `content` and other [useful properties](#returned-object).\n *\n * ```js\n * const matter = require('gray-matter');\n * console.log(matter('---\\ntitle: Home\\n---\\nOther stuff'));\n * //=> { data: { title: 'Home'}, content: 'Other stuff' }\n * ```\n * @param {Object|String} `input` String, or object with `content` string\n * @param {Object} `options`\n * @return {Object}\n * @api public\n */\n\nfunction matter(input, options) {\n  if (input === '') {\n    return { data: {}, content: input, excerpt: '', orig: input };\n  }\n\n  let file = toFile(input);\n  const cached = matter.cache[file.content];\n\n  if (!options) {\n    if (cached) {\n      file = Object.assign({}, cached);\n      file.orig = cached.orig;\n      return file;\n    }\n\n    // only cache if there are no options passed. if we cache when options\n    // are passed, we would need to also cache options values, which would\n    // negate any performance benefits of caching\n    matter.cache[file.content] = file;\n  }\n\n  return parseMatter(file, options);\n}\n\n/**\n * Parse front matter\n */\n\nfunction parseMatter(file, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n  const close = '\\n' + opts.delimiters[1];\n  let str = file.content;\n\n  if (opts.language) {\n    file.language = opts.language;\n  }\n\n  // get the length of the opening delimiter\n  const openLen = open.length;\n  if (!utils.startsWith(str, open, openLen)) {\n    excerpt(file, opts);\n    return file;\n  }\n\n  // if the next character after the opening delimiter is\n  // a character from the delimiter, then it's not a front-\n  // matter delimiter\n  if (str.charAt(openLen) === open.slice(-1)) {\n    return file;\n  }\n\n  // strip the opening delimiter\n  str = str.slice(openLen);\n  const len = str.length;\n\n  // use the language defined after first delimiter, if it exists\n  const language = matter.language(str, opts);\n  if (language.name) {\n    file.language = language.name;\n    str = str.slice(language.raw.length);\n  }\n\n  // get the index of the closing delimiter\n  let closeIndex = str.indexOf(close);\n  if (closeIndex === -1) {\n    closeIndex = len;\n  }\n\n  // get the raw front-matter block\n  file.matter = str.slice(0, closeIndex);\n\n  const block = file.matter.replace(/^\\s*#[^\\n]+/gm, '').trim();\n  if (block === '') {\n    file.isEmpty = true;\n    file.empty = file.content;\n    file.data = {};\n  } else {\n\n    // create file.data by parsing the raw file.matter block\n    file.data = parse(file.language, file.matter, opts);\n  }\n\n  // update file.content\n  if (closeIndex === len) {\n    file.content = '';\n  } else {\n    file.content = str.slice(closeIndex + close.length);\n    if (file.content[0] === '\\r') {\n      file.content = file.content.slice(1);\n    }\n    if (file.content[0] === '\\n') {\n      file.content = file.content.slice(1);\n    }\n  }\n\n  excerpt(file, opts);\n\n  if (opts.sections === true || typeof opts.section === 'function') {\n    sections(file, opts.section);\n  }\n  return file;\n}\n\n/**\n * Expose engines\n */\n\nmatter.engines = engines;\n\n/**\n * Stringify an object to YAML or the specified language, and\n * append it to the given string. By default, only YAML and JSON\n * can be stringified. See the [engines](#engines) section to learn\n * how to stringify other languages.\n *\n * ```js\n * console.log(matter.stringify('foo bar baz', {title: 'Home'}));\n * // results in:\n * // ---\n * // title: Home\n * // ---\n * // foo bar baz\n * ```\n * @param {String|Object} `file` The content string to append to stringified front-matter, or a file object with `file.content` string.\n * @param {Object} `data` Front matter to stringify.\n * @param {Object} `options` [Options](#options) to pass to gray-matter and [js-yaml].\n * @return {String} Returns a string created by wrapping stringified yaml with delimiters, and appending that to the given string.\n * @api public\n */\n\nmatter.stringify = function(file, data, options) {\n  if (typeof file === 'string') file = matter(file, options);\n  return stringify(file, data, options);\n};\n\n/**\n * Synchronously read a file from the file system and parse\n * front matter. Returns the same object as the [main function](#matter).\n *\n * ```js\n * const file = matter.read('./content/blog-post.md');\n * ```\n * @param {String} `filepath` file path of the file to read.\n * @param {Object} `options` [Options](#options) to pass to gray-matter.\n * @return {Object} Returns [an object](#returned-object) with `data` and `content`\n * @api public\n */\n\nmatter.read = function(filepath, options) {\n  const str = fs.readFileSync(filepath, 'utf8');\n  const file = matter(str, options);\n  file.path = filepath;\n  return file;\n};\n\n/**\n * Returns true if the given `string` has front matter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Boolean} True if front matter exists.\n * @api public\n */\n\nmatter.test = function(str, options) {\n  return utils.startsWith(str, defaults(options).delimiters[0]);\n};\n\n/**\n * Detect the language to use, if one is defined after the\n * first front-matter delimiter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Object} Object with `raw` (actual language string), and `name`, the language with whitespace trimmed\n */\n\nmatter.language = function(str, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n\n  if (matter.test(str)) {\n    str = str.slice(open.length);\n  }\n\n  const language = str.slice(0, str.search(/\\r?\\n/));\n  return {\n    raw: language,\n    name: language ? language.trim() : ''\n  };\n};\n\n/**\n * Expose `matter`\n */\n\nmatter.cache = {};\nmatter.clearCache = function() {\n  matter.cache = {};\n};\nmodule.exports = matter;\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-extension-mdx-expression').Options} Options\n */\n\nimport {Parser} from 'acorn'\n// @ts-expect-error: untyped\nimport acornJsx from 'acorn-jsx'\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {mdxExpression} from 'micromark-extension-mdx-expression'\nimport {mdxJsx} from 'micromark-extension-mdx-jsx'\nimport {mdxMd} from 'micromark-extension-mdx-md'\nimport {mdxjsEsm} from 'micromark-extension-mdxjs-esm'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function mdxjs(options) {\n  const settings = Object.assign(\n    {\n      acorn: Parser.extend(acornJsx()),\n      acornOptions: {ecmaVersion: 2020, sourceType: 'module'},\n      addResult: true\n    },\n    options\n  )\n\n  return combineExtensions([\n    mdxjsEsm(settings),\n    mdxExpression(settings),\n    mdxJsx(settings),\n    mdxMd\n  ])\n}\n", "/**\n * @typedef {import('unist').Position} Position\n *\n * @typedef {[number, number]} RangeLike\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n *\n * @typedef LocLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {LocLike | null | undefined} [loc]\n * @property {RangeLike | null | undefined} [range]\n * @property {number | null | undefined} [start]\n * @property {number | null | undefined} [end]\n */\n\n/**\n * Turn an estree `node` into a unist `position`.\n *\n * @param {NodeLike | null | undefined} [node]\n *   estree node.\n * @returns {Position}\n *   unist position.\n */\nexport function positionFromEstree(node) {\n  const nodeLike = node || {}\n  const loc = nodeLike.loc || {}\n  const range = nodeLike.range || [0, 0]\n  const startColumn = loc.start\n    ? numberOrUndefined(loc.start.column)\n    : undefined\n  const endColumn = loc.end ? numberOrUndefined(loc.end.column) : undefined\n\n  return {\n    start: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.start ? numberOrUndefined(loc.start.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: startColumn === undefined ? undefined : startColumn + 1,\n      offset: numberOrUndefined(range[0] || nodeLike.start)\n    },\n    end: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.end ? numberOrUndefined(loc.end.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: endColumn === undefined ? undefined : endColumn + 1,\n      offset: numberOrUndefined(range[1] || nodeLike.end)\n    }\n  }\n}\n\n/**\n *\n * @param {number | null | undefined} value\n * @returns {number | undefined}\n */\nfunction numberOrUndefined(value) {\n  return typeof value === 'number' && value > -1 ? value : undefined\n}\n", "/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n", "/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @typedef {CONTINUE | SKIP | EXIT} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed), when moving in an array.\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n */\n\n/**\n * @callback Visitor\n *   Handle a node.\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node`, the `Visitor` should\n *   return a new `Index` to specify the sibling to traverse after `node` is\n *   traversed.\n *   Adding or removing next siblings of `node` is handled as expected without\n *   needing to return a new `Index`.\n * @param {Node} node\n *   Found node.\n * @param {string | null} key\n *   Field at which `node` lives in its parent (or where a list of nodes lives).\n * @param {number | null} index\n *   Index where `node` lives if `parent[key]` is an array.\n * @param {Array<Node>} ancestors\n *   Ancestors of `node`.\n * @returns {Action | Index | ActionTuple | null | undefined | void}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @typedef Visitors\n *   Handle nodes when entering (preorder) and leaving (postorder).\n * @property {Visitor | null | undefined} [enter]\n *   Handle nodes when entering (preorder).\n * @property {Visitor | null | undefined} [leave]\n *   Handle nodes when leaving (postorder).\n */\n\nimport {color} from './color.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = Symbol('continue')\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = Symbol('exit')\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = Symbol('skip')\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) and/or *postorder* (**LRN**).\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor(s) when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * @param {Node} tree\n *   Tree to traverse\n * @param {Visitor | Visitors | null | undefined} [visitor]\n *   Handle each node.\n * @returns {void}\n *   Nothing.\n */\nexport function visit(tree, visitor) {\n  /** @type {Visitor | undefined} */\n  let enter\n  /** @type {Visitor | undefined} */\n  let leave\n\n  if (typeof visitor === 'function') {\n    enter = visitor\n  } else if (visitor && typeof visitor === 'object') {\n    if (visitor.enter) enter = visitor.enter\n    if (visitor.leave) leave = visitor.leave\n  }\n\n  build(tree, null, null, [])()\n\n  /**\n   * @param {Node} node\n   * @param {string | null} key\n   * @param {number | null} index\n   * @param {Array<Node>} parents\n   */\n  function build(node, key, index, parents) {\n    if (nodelike(node)) {\n      visit.displayName = 'node (' + color(node.type) + ')'\n    }\n\n    return visit\n\n    /**\n     * @returns {ActionTuple}\n     */\n    function visit() {\n      /** @type {ActionTuple} */\n      const result = enter ? toResult(enter(node, key, index, parents)) : []\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      if (result[0] !== SKIP) {\n        /** @type {keyof node} */\n        let cKey\n\n        for (cKey in node) {\n          if (\n            own.call(node, cKey) &&\n            node[cKey] &&\n            typeof node[cKey] === 'object' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'data' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'position'\n          ) {\n            const grandparents = parents.concat(node)\n            /** @type {unknown} */\n            const value = node[cKey]\n\n            if (Array.isArray(value)) {\n              const nodes = /** @type {Array<unknown>} */ (value)\n              let cIndex = 0\n\n              while (cIndex > -1 && cIndex < nodes.length) {\n                const subvalue = nodes[cIndex]\n\n                if (nodelike(subvalue)) {\n                  const subresult = build(\n                    subvalue,\n                    cKey,\n                    cIndex,\n                    grandparents\n                  )()\n                  if (subresult[0] === EXIT) return subresult\n                  cIndex =\n                    typeof subresult[1] === 'number' ? subresult[1] : cIndex + 1\n                } else {\n                  cIndex++\n                }\n              }\n            } else if (nodelike(value)) {\n              const subresult = build(value, cKey, null, grandparents)()\n              if (subresult[0] === EXIT) return subresult\n            }\n          }\n        }\n      }\n\n      return leave ? toResult(leave(node, key, index, parents)) : result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {Action | Index | ActionTuple | null | undefined | void} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n/**\n * Check if something looks like a node.\n *\n * @param {unknown} value\n *   Anything.\n * @returns {value is Node}\n *   Whether `value` looks like a node.\n */\nfunction nodelike(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'type' in value &&\n      typeof value.type === 'string' &&\n      value.type.length > 0\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('acorn').Options} AcornOptions\n * @typedef {import('acorn').Comment} Comment\n * @typedef {import('acorn').Token} Token\n * @typedef {import('acorn').Node} AcornNode\n * @typedef {import('estree').Program} Program\n * @typedef {import('estree').Node} EstreeNode\n *\n * @typedef {{parse: import('acorn').parse, parseExpressionAt: import('acorn').parseExpressionAt}} Acorn\n * @typedef {Error & {raisedAt: number, pos: number, loc: {line: number, column: number}}} AcornError\n *\n * @typedef Options\n * @property {Acorn} acorn\n * @property {AcornOptions | null | undefined} [acornOptions]\n * @property {Point | null | undefined} [start]\n * @property {string | null | undefined} [prefix='']\n * @property {string | null | undefined} [suffix='']\n * @property {boolean | null | undefined} [expression=false]\n * @property {boolean | null | undefined} [allowEmpty=false]\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {visit} from 'estree-util-visit'\nimport {VFileMessage} from 'vfile-message'\nimport {location} from 'vfile-location'\n\n/**\n * Parse a list of micromark events with acorn.\n *\n * @param {Array<Event>} events\n * @param {Options} options\n * @returns {{estree: Program | undefined, error: Error | undefined, swallow: boolean}}\n */\n// eslint-disable-next-line complexity\nexport function eventsToAcorn(events, options) {\n  const prefix = options.prefix || ''\n  const suffix = options.suffix || ''\n  const acornOptions = Object.assign({}, options.acornOptions)\n  /** @type {Array<Comment>} */\n  const comments = []\n  /** @type {Array<Token>} */\n  const tokens = []\n  const onComment = acornOptions.onComment\n  const onToken = acornOptions.onToken\n  /** @type {Array<string>} */\n  const chunks = []\n  /** @type {Record<string, Point>} */\n  const lines = {}\n  let index = -1\n  let swallow = false\n  /** @type {AcornNode | undefined} */\n  let estree\n  /** @type {Error | undefined} */\n  let exception\n  /** @type {number} */\n  let startLine\n  /** @type {AcornOptions} */\n  const acornConfig = Object.assign({}, acornOptions, {\n    onComment: comments,\n    preserveParens: true\n  })\n\n  if (onToken) {\n    acornConfig.onToken = tokens\n  }\n\n  // We use `events` to detect everything, however, it could be empty.\n  // In that case, we need `options.start` to make sense of positional info.\n  if (options.start) {\n    startLine = options.start.line\n    lines[startLine] = options.start\n  }\n\n  while (++index < events.length) {\n    const [kind, token, context] = events[index]\n\n    // Assume only void events (and `enter` followed immediately by an `exit`).\n    if (kind === 'exit') {\n      chunks.push(context.sliceSerialize(token))\n      setPoint(token.start)\n      setPoint(token.end)\n    }\n  }\n\n  const source = chunks.join('')\n  const value = prefix + source + suffix\n  const isEmptyExpression = options.expression && empty(source)\n  const place = location(source)\n\n  if (isEmptyExpression && !options.allowEmpty) {\n    throw new VFileMessage(\n      'Unexpected empty expression',\n      parseOffsetToUnistPoint(0),\n      'micromark-extension-mdx-expression:unexpected-empty-expression'\n    )\n  }\n\n  try {\n    estree =\n      options.expression && !isEmptyExpression\n        ? options.acorn.parseExpressionAt(value, 0, acornConfig)\n        : options.acorn.parse(value, acornConfig)\n  } catch (error_) {\n    const error = /** @type {AcornError} */ (error_)\n    const point = parseOffsetToUnistPoint(error.pos)\n    error.message = String(error.message).replace(/ \\(\\d+:\\d+\\)$/, '')\n    error.pos = point.offset\n    error.loc = {line: point.line, column: point.column - 1}\n    exception = error\n    swallow =\n      error.raisedAt >= prefix.length + source.length ||\n      // Broken comments are raised at their start, not their end.\n      error.message === 'Unterminated comment'\n  }\n\n  if (estree && options.expression && !isEmptyExpression) {\n    if (empty(value.slice(estree.end, value.length - suffix.length))) {\n      estree = {\n        type: 'Program',\n        start: 0,\n        end: prefix.length + source.length,\n        // @ts-expect-error: It’s good.\n        body: [\n          {\n            type: 'ExpressionStatement',\n            expression: estree,\n            start: 0,\n            end: prefix.length + source.length\n          }\n        ],\n        sourceType: 'module',\n        comments: []\n      }\n    } else {\n      const point = parseOffsetToUnistPoint(estree.end)\n      exception = new Error('Unexpected content after expression')\n      // @ts-expect-error: acorn exception.\n      exception.pos = point.offset\n      // @ts-expect-error: acorn exception.\n      exception.loc = {line: point.line, column: point.column - 1}\n      estree = undefined\n    }\n  }\n\n  if (estree) {\n    // @ts-expect-error: acorn *does* allow comments\n    estree.comments = comments\n\n    // @ts-expect-error: acorn looks enough like estree.\n    visit(estree, (esnode, field, index, parents) => {\n      let context = /** @type {AcornNode | Array<AcornNode>} */ (\n        parents[parents.length - 1]\n      )\n      /** @type {string | number | null} */\n      let prop = field\n\n      // Remove non-standard `ParenthesizedExpression`.\n      // @ts-expect-error: included in acorn.\n      if (esnode.type === 'ParenthesizedExpression' && context && prop) {\n        /* c8 ignore next 5 */\n        if (typeof index === 'number') {\n          // @ts-expect-error: indexable.\n          context = context[prop]\n          prop = index\n        }\n\n        // @ts-expect-error: indexable.\n        context[prop] = esnode.expression\n      }\n\n      fixPosition(esnode)\n    })\n\n    // Comment positions are fixed by `visit` because they’re in the tree.\n    if (Array.isArray(onComment)) {\n      onComment.push(...comments)\n    } else if (typeof onComment === 'function') {\n      for (const comment of comments) {\n        assert(comment.loc, 'expected `loc` on comment')\n        onComment(\n          comment.type === 'Block',\n          comment.value,\n          comment.start,\n          comment.end,\n          comment.loc.start,\n          comment.loc.end\n        )\n      }\n    }\n\n    for (const token of tokens) {\n      fixPosition(token)\n\n      if (Array.isArray(onToken)) {\n        onToken.push(token)\n      } else {\n        // `tokens` are not added if `onToken` is not defined, so it must be a\n        // function.\n        assert(typeof onToken === 'function', 'expected function')\n        onToken(token)\n      }\n    }\n  }\n\n  // @ts-expect-error: It’s a program now.\n  return {estree, error: exception, swallow}\n\n  /**\n   * Update the position of a node.\n   *\n   * @param {AcornNode | EstreeNode | Token} nodeOrToken\n   * @returns {void}\n   */\n  function fixPosition(nodeOrToken) {\n    assert(\n      'start' in nodeOrToken,\n      'expected `start` in node or token from acorn'\n    )\n    assert('end' in nodeOrToken, 'expected `end` in node or token from acorn')\n    const pointStart = parseOffsetToUnistPoint(nodeOrToken.start)\n    const pointEnd = parseOffsetToUnistPoint(nodeOrToken.end)\n    nodeOrToken.start = pointStart.offset\n    nodeOrToken.end = pointEnd.offset\n    nodeOrToken.loc = {\n      start: {\n        line: pointStart.line,\n        column: pointStart.column - 1,\n        offset: pointStart.offset\n      },\n      end: {\n        line: pointEnd.line,\n        column: pointEnd.column - 1,\n        offset: pointEnd.offset\n      }\n    }\n    nodeOrToken.range = [nodeOrToken.start, nodeOrToken.end]\n  }\n\n  /**\n   * Turn an arbitrary offset into the parsed value, into a point in the source\n   * value.\n   *\n   * @param {number} acornOffset\n   * @returns {Point}\n   */\n  function parseOffsetToUnistPoint(acornOffset) {\n    let sourceOffset = acornOffset - prefix.length\n\n    if (sourceOffset < 0) {\n      sourceOffset = 0\n    } else if (sourceOffset > source.length) {\n      sourceOffset = source.length\n    }\n\n    const pointInSource = place.toPoint(sourceOffset)\n    assert(\n      typeof startLine === 'number',\n      'expected `startLine` to be found or given '\n    )\n    const line = startLine + (pointInSource.line - 1)\n    assert(line in lines, 'expected line to be defined')\n    const column = lines[line].column + (pointInSource.column - 1)\n    const offset = lines[line].offset + (pointInSource.column - 1)\n    return /** @type {Point} */ ({line, column, offset})\n  }\n\n  /** @param {Point} point */\n  function setPoint(point) {\n    // Not passed by `micromark-extension-mdxjs-esm`\n    /* c8 ignore next 3 */\n    if (!startLine || point.line < startLine) {\n      startLine = point.line\n    }\n\n    if (!(point.line in lines) || lines[point.line].offset > point.offset) {\n      lines[point.line] = point\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return /^\\s*$/.test(\n    value\n      // Multiline comments.\n      .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n      // Line comments.\n      // EOF instead of EOL is specifically not allowed, because that would\n      // mean the closing brace is on the commented-out line\n      .replace(/\\/\\/[^\\r\\n]*(\\r\\n|\\n|\\r)/g, '')\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {factorySpace} from 'micromark-factory-space'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {string} markerType\n * @param {string} chunkType\n * @param {Acorn | null | undefined} [acorn]\n * @param {AcornOptions | null | undefined} [acornOptions]\n * @param {boolean | null | undefined} [addResult=false]\n * @param {boolean | null | undefined} [spread=false]\n * @param {boolean | null | undefined} [allowEmpty=false]\n * @param {boolean | null | undefined} [allowLazy=false]\n * @param {number | null | undefined} [startColumn=0]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryMdxExpression(\n  effects,\n  ok,\n  type,\n  markerType,\n  chunkType,\n  acorn,\n  acornOptions,\n  addResult,\n  spread,\n  allowEmpty,\n  allowLazy,\n  startColumn\n) {\n  const self = this\n  const eventStart = this.events.length + 3 // Add main and marker token\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === types.linePrefix\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  const prefixExpressionIndent = initialPrefix ? initialPrefix + 1 : 0\n  let balance = 1\n  /** @type {Point} */\n  let startPosition\n  /** @type {Error} */\n  let lastCrash\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(code === codes.leftCurlyBrace, 'expected `{`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    startPosition = self.now()\n    return atBreak\n  }\n\n  /** @type {State} */\n  function atBreak(code) {\n    if (code === codes.eof) {\n      throw (\n        lastCrash ||\n        new VFileMessage(\n          'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n          self.now(),\n          'micromark-extension-mdx-expression:unexpected-eof'\n        )\n      )\n    }\n\n    if (code === codes.rightCurlyBrace) {\n      return atClosingBrace(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      // `startColumn` is used by the JSX extensions that also wraps this\n      // factory.\n      // JSX can be indented arbitrarily, but expressions can’t exdent\n      // arbitrarily, due to that they might contain template strings\n      // (backticked strings).\n      // We’ll eat up to where that tag starts (`startColumn`), and a tab size.\n      /* c8 ignore next 3 */\n      const prefixTagIndent = startColumn\n        ? startColumn + constants.tabSize - self.now().column\n        : 0\n      const indent = Math.max(prefixExpressionIndent, prefixTagIndent)\n      return indent\n        ? factorySpace(effects, atBreak, types.linePrefix, indent)\n        : atBreak\n    }\n\n    const now = self.now()\n\n    if (\n      now.line !== startPosition.line &&\n      !allowLazy &&\n      self.parser.lazy[now.line]\n    ) {\n      throw new VFileMessage(\n        'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n        self.now(),\n        'micromark-extension-mdx-expression:unexpected-eof'\n      )\n    }\n\n    effects.enter(chunkType)\n    return inside(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.rightCurlyBrace ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(chunkType)\n      return atBreak(code)\n    }\n\n    if (code === codes.leftCurlyBrace && !acorn) {\n      effects.consume(code)\n      balance++\n      return inside\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function atClosingBrace(code) {\n    balance--\n\n    // Agnostic mode: count balanced braces.\n    if (!acorn) {\n      if (balance) {\n        effects.enter(chunkType)\n        effects.consume(code)\n        return inside\n      }\n\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // Gnostic mode: parse w/ acorn.\n    const result = eventsToAcorn(self.events.slice(eventStart), {\n      acorn,\n      acornOptions,\n      start: startPosition,\n      expression: true,\n      allowEmpty,\n      prefix: spread ? '({' : '',\n      suffix: spread ? '})' : ''\n    })\n    const estree = result.estree\n\n    // Get the spread value.\n    if (spread && estree) {\n      // Should always be the case as we wrap in `d={}`\n      assert(estree.type === 'Program', 'expected program')\n      const head = estree.body[0]\n      assert(head, 'expected body')\n\n      // Can occur in some complex attributes.\n      /* c8 ignore next 11 */\n      if (\n        head.type !== 'ExpressionStatement' ||\n        head.expression.type !== 'ObjectExpression'\n      ) {\n        throw new VFileMessage(\n          'Unexpected `' +\n            head.type +\n            '` in code: expected an object spread (`{...spread}`)',\n          positionFromEstree(head).start,\n          'micromark-extension-mdx-expression:non-spread'\n        )\n      } else if (head.expression.properties[1]) {\n        throw new VFileMessage(\n          'Unexpected extra content in spread: only a single spread is supported',\n          positionFromEstree(head.expression.properties[1]).start,\n          'micromark-extension-mdx-expression:spread-extra'\n        )\n      } else if (\n        head.expression.properties[0] &&\n        head.expression.properties[0].type !== 'SpreadElement'\n      ) {\n        throw new VFileMessage(\n          'Unexpected `' +\n            head.expression.properties[0].type +\n            '` in code: only spread elements are supported',\n          positionFromEstree(head.expression.properties[0]).start,\n          'micromark-extension-mdx-expression:non-spread'\n        )\n      }\n    }\n\n    if (result.error) {\n      lastCrash = new VFileMessage(\n        'Could not parse expression with acorn: ' + result.error.message,\n        {\n          // @ts-expect-error: fine.\n          line: result.error.loc.line,\n          // @ts-expect-error: fine.\n          column: result.error.loc.column + 1,\n          // @ts-expect-error: fine.\n          offset: result.error.pos\n        },\n        'micromark-extension-mdx-expression:acorn'\n      )\n\n      if (code !== codes.eof && result.swallow) {\n        effects.enter(chunkType)\n        effects.consume(code)\n        return inside\n      }\n\n      throw lastCrash\n    }\n\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    Object.assign(effects.exit(type), addResult ? {estree} : undefined)\n    return ok\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {Acorn | null | undefined} [acorn]\n *   Acorn parser to use (optional).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Options to pass to acorn (default: `{ecmaVersion: 2020, locations: true,\n *   sourceType: 'module'}`).\n *   All fields (except for `locations`) can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add an `estree` field to `mdxFlowExpression` and\n *   `mdxTextExpression` tokens with results from acorn.\n * @property {boolean | null | undefined} [spread=false]\n *   Undocumented option to parse only a spread (used by\n *   `micromark-extension-mdx-jsx` to parse spread attributes).\n * @property {boolean | null | undefined} [allowEmpty=true]\n *   Undocumented option to disallow empty attributes (used by\n *   `micromark-extension-mdx-jsx` to prohobit empty attribute values).\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Add support for MDX expressions.\n *\n * Function called optionally with options to get a syntax extension for\n * micromark.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Syntax extension for micromark (passed in `extensions`).\n */\nexport function mdxExpression(options) {\n  const options_ = options || {}\n  const addResult = options_.addResult\n  const acorn = options_.acorn\n  // Hidden: `micromark-extension-mdx-jsx` supports expressions in tags,\n  // and one of them is only “spread” elements.\n  // It also has expressions that are not allowed to be empty (`<x y={}/>`).\n  // Instead of duplicating code there, this are two small hidden feature here\n  // to test that behavior.\n  const spread = options_.spread\n  let allowEmpty = options_.allowEmpty\n  /** @type {AcornOptions} */\n  let acornOptions\n\n  if (allowEmpty === null || allowEmpty === undefined) {\n    allowEmpty = true\n  }\n\n  if (acorn) {\n    if (!acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {ecmaVersion: 2020, sourceType: 'module'},\n      options_.acornOptions\n    )\n  } else if (options_.acornOptions || options_.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {\n      [codes.leftCurlyBrace]: {tokenize: tokenizeFlowExpression, concrete: true}\n    },\n    text: {[codes.leftCurlyBrace]: {tokenize: tokenizeTextExpression}}\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFlowExpression(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        factorySpace(effects, after, types.whitespace),\n        'mdxFlowExpression',\n        'mdxFlowExpressionMarker',\n        'mdxFlowExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty\n      )(code)\n    }\n\n    /** @type {State} */\n    function after(code) {\n      return code === codes.eof || markdownLineEnding(code)\n        ? ok(code)\n        : nok(code)\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeTextExpression(effects, ok) {\n    const self = this\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        ok,\n        'mdxTextExpression',\n        'mdxTextExpressionMarker',\n        'mdxTextExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty,\n        true\n      )(code)\n    }\n  }\n}\n", "// This module is generated by `build.js`.\nexport const start =\n  /[$A-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\nexport const cont =\n  /[\\d\\u00B7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F]/\n", "import {start as startRe, cont as contRe} from './regex.js'\n\n/**\n * Checks if the given character code can start an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// To do: support astrals.\nexport function start(code) {\n  return startRe.test(String.fromCharCode(code))\n}\n\n/**\n * Checks if the given character code can continue an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// To do: support astrals.\nexport function cont(code) {\n  const character = String.fromCharCode(code)\n  return startRe.test(character) || contRe.test(character)\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name) {\n  let index = -1\n\n  while (++index < name.length) {\n    if (!(index ? cont : start)(name.charCodeAt(index))) return false\n  }\n\n  // `false` if `name` is empty.\n  return index > 0\n}\n", "/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {start as idStart, cont as idCont} from 'estree-util-is-identifier-name'\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {VFileMessage} from 'vfile-message'\n\nconst lazyLineEnd = {tokenize: tokenizeLazyLineEnd, partial: true}\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @param {boolean|undefined} allowLazy\n * @param {string} tagType\n * @param {string} tagMarkerType\n * @param {string} tagClosingMarkerType\n * @param {string} tagSelfClosingMarker\n * @param {string} tagNameType\n * @param {string} tagNamePrimaryType\n * @param {string} tagNameMemberMarkerType\n * @param {string} tagNameMemberType\n * @param {string} tagNamePrefixMarkerType\n * @param {string} tagNameLocalType\n * @param {string} tagExpressionAttributeType\n * @param {string} tagExpressionAttributeMarkerType\n * @param {string} tagExpressionAttributeValueType\n * @param {string} tagAttributeType\n * @param {string} tagAttributeNameType\n * @param {string} tagAttributeNamePrimaryType\n * @param {string} tagAttributeNamePrefixMarkerType\n * @param {string} tagAttributeNameLocalType\n * @param {string} tagAttributeInitializerMarkerType\n * @param {string} tagAttributeValueLiteralType\n * @param {string} tagAttributeValueLiteralMarkerType\n * @param {string} tagAttributeValueLiteralValueType\n * @param {string} tagAttributeValueExpressionType\n * @param {string} tagAttributeValueExpressionMarkerType\n * @param {string} tagAttributeValueExpressionValueType\n */\n// eslint-disable-next-line max-params\nexport function factoryTag(\n  effects,\n  ok,\n  nok,\n  acorn,\n  acornOptions,\n  addResult,\n  allowLazy,\n  tagType,\n  tagMarkerType,\n  tagClosingMarkerType,\n  tagSelfClosingMarker,\n  tagNameType,\n  tagNamePrimaryType,\n  tagNameMemberMarkerType,\n  tagNameMemberType,\n  tagNamePrefixMarkerType,\n  tagNameLocalType,\n  tagExpressionAttributeType,\n  tagExpressionAttributeMarkerType,\n  tagExpressionAttributeValueType,\n  tagAttributeType,\n  tagAttributeNameType,\n  tagAttributeNamePrimaryType,\n  tagAttributeNamePrefixMarkerType,\n  tagAttributeNameLocalType,\n  tagAttributeInitializerMarkerType,\n  tagAttributeValueLiteralType,\n  tagAttributeValueLiteralMarkerType,\n  tagAttributeValueLiteralValueType,\n  tagAttributeValueExpressionType,\n  tagAttributeValueExpressionMarkerType,\n  tagAttributeValueExpressionValueType\n) {\n  const self = this\n  /** @type {State} */\n  let returnState\n  /** @type {NonNullable<Code>|undefined} */\n  let marker\n  /** @type {Point|undefined} */\n  let startPoint\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    startPoint = self.now()\n    effects.enter(tagType)\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    return afterStart\n  }\n\n  /** @type {State} */\n  function afterStart(code) {\n    // Deviate from JSX, which allows arbitrary whitespace.\n    // See: <https://github.com/micromark/micromark-extension-mdx-jsx/issues/7>.\n    if (markdownLineEnding(code) || markdownSpace(code)) {\n      return nok(code)\n    }\n\n    // Any other ES whitespace does not get this treatment.\n    returnState = beforeName\n    return optionalEsWhitespace(code)\n  }\n\n  // Right after `<`, before an optional name.\n  /** @type {State} */\n  function beforeName(code) {\n    // Closing tag.\n    if (code === codes.slash) {\n      effects.enter(tagClosingMarkerType)\n      effects.consume(code)\n      effects.exit(tagClosingMarkerType)\n      returnState = beforeClosingTagName\n      return optionalEsWhitespace\n    }\n\n    // Fragment opening tag.\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    // Start of a name.\n    if (code !== codes.eof && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === codes.exclamationMark\n          ? ' (note: to create a comment in MDX, use `{/* text */}`)'\n          : '')\n    )\n  }\n\n  // At the start of a closing tag, right after `</`.\n  /** @type {State} */\n  function beforeClosingTagName(code) {\n    // Fragment closing tag.\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    // Start of a closing tag name.\n    if (code !== codes.eof && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === codes.asterisk || code === codes.slash\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  }\n\n  // Inside the primary name.\n  /** @type {State} */\n  function primaryName(code) {\n    // Continuation of name: remain.\n    if (code === codes.dash || (code !== codes.eof && idCont(code))) {\n      effects.consume(code)\n      return primaryName\n    }\n\n    // End of name.\n    if (\n      code === codes.dot ||\n      code === codes.slash ||\n      code === codes.colon ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNamePrimaryType)\n      returnState = afterPrimaryName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === codes.atSign\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  }\n\n  // After a name.\n  /** @type {State} */\n  function afterPrimaryName(code) {\n    // Start of a member name.\n    if (code === codes.dot) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = beforeMemberName\n      return optionalEsWhitespace\n    }\n\n    // Start of a local name.\n    if (code === codes.colon) {\n      effects.enter(tagNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagNamePrefixMarkerType)\n      returnState = beforeLocalName\n      return optionalEsWhitespace\n    }\n\n    // End of name.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  // We’ve seen a `.` and are expecting a member name.\n  /** @type {State} */\n  function beforeMemberName(code) {\n    // Start of a member name.\n    if (code !== codes.eof && idStart(code)) {\n      effects.enter(tagNameMemberType)\n      effects.consume(code)\n      return memberName\n    }\n\n    crash(\n      code,\n      'before member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  // Inside the member name.\n  /** @type {State} */\n  function memberName(code) {\n    // Continuation of member name: stay in state\n    if (code === codes.dash || (code !== codes.eof && idCont(code))) {\n      effects.consume(code)\n      return memberName\n    }\n\n    // End of member name (note that namespaces and members can’t be combined).\n    if (\n      code === codes.dot ||\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameMemberType)\n      returnState = afterMemberName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in member name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === codes.atSign\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  }\n\n  // After a member name: this is the same as `afterPrimaryName` but we don’t\n  // expect colons.\n  /** @type {State} */\n  function afterMemberName(code) {\n    // Start another member name.\n    if (code === codes.dot) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = beforeMemberName\n      return optionalEsWhitespace\n    }\n\n    // End of name.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  // We’ve seen a `:`, and are expecting a local name.\n  /** @type {State} */\n  function beforeLocalName(code) {\n    // Start of a local name.\n    if (code !== codes.eof && idStart(code)) {\n      effects.enter(tagNameLocalType)\n      effects.consume(code)\n      return localName\n    }\n\n    crash(\n      code,\n      'before local name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === codes.plusSign ||\n        (code !== null &&\n          code > codes.dot &&\n          code < codes.colon) /* `/` - `9` */\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  }\n\n  // Inside the local name.\n  /** @type {State} */\n  function localName(code) {\n    // Continuation of local name: stay in state\n    if (code === codes.dash || (code !== codes.eof && idCont(code))) {\n      effects.consume(code)\n      return localName\n    }\n\n    // End of local name (note that we don’t expect another colon, or a member).\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameLocalType)\n      returnState = afterLocalName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in local name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  // After a local name: this is the same as `afterPrimaryName` but we don’t\n  // expect colons or periods.\n  /** @type {State} */\n  function afterLocalName(code) {\n    // End of name.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after local name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /** @type {State} */\n  function beforeAttribute(code) {\n    // Mark as self-closing.\n    if (code === codes.slash) {\n      effects.enter(tagSelfClosingMarker)\n      effects.consume(code)\n      effects.exit(tagSelfClosingMarker)\n      returnState = selfClosing\n      return optionalEsWhitespace\n    }\n\n    // End of tag.\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    // Attribute expression.\n    if (code === codes.leftCurlyBrace) {\n      assert(startPoint, 'expected `startPoint` to be defined')\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        afterAttributeExpression,\n        tagExpressionAttributeType,\n        tagExpressionAttributeMarkerType,\n        tagExpressionAttributeValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        true,\n        false,\n        allowLazy,\n        startPoint.column\n      )(code)\n    }\n\n    // Start of an attribute name.\n    if (code !== codes.eof && idStart(code)) {\n      effects.enter(tagAttributeType)\n      effects.enter(tagAttributeNameType)\n      effects.enter(tagAttributeNamePrimaryType)\n      effects.consume(code)\n      return attributePrimaryName\n    }\n\n    crash(\n      code,\n      'before attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  // At the start of an attribute expression.\n  /** @type {State} */\n  function afterAttributeExpression(code) {\n    returnState = beforeAttribute\n    return optionalEsWhitespace(code)\n  }\n\n  // In the attribute name.\n  /** @type {State} */\n  function attributePrimaryName(code) {\n    // Continuation of the attribute name.\n    if (code === codes.dash || (code !== codes.eof && idCont(code))) {\n      effects.consume(code)\n      return attributePrimaryName\n    }\n\n    // End of attribute name or tag.\n    if (\n      code === codes.slash ||\n      code === codes.colon ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNamePrimaryType)\n      returnState = afterAttributePrimaryName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  // After an attribute name, probably finding an equals.\n  /** @type {State} */\n  function afterAttributePrimaryName(code) {\n    // Start of a local name.\n    if (code === codes.colon) {\n      effects.enter(tagAttributeNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeNamePrefixMarkerType)\n      returnState = beforeAttributeLocalName\n      return optionalEsWhitespace\n    }\n\n    // Start of an attribute value.\n    if (code === codes.equalsTo) {\n      effects.exit(tagAttributeNameType)\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = beforeAttributeValue\n      return optionalEsWhitespace\n    }\n\n    // End of tag / new attribute.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== codes.eof && idStart(code))\n    ) {\n      effects.exit(tagAttributeNameType)\n      effects.exit(tagAttributeType)\n      returnState = beforeAttribute\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'after attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  }\n\n  // We’ve seen a `:`, and are expecting a local name.\n  /** @type {State} */\n  function beforeAttributeLocalName(code) {\n    // Start of a local name.\n    if (code !== codes.eof && idStart(code)) {\n      effects.enter(tagAttributeNameLocalType)\n      effects.consume(code)\n      return attributeLocalName\n    }\n\n    crash(\n      code,\n      'before local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  }\n\n  // In the local attribute name.\n  /** @type {State} */\n  function attributeLocalName(code) {\n    // Continuation of the local attribute name.\n    if (code === codes.dash || (code !== codes.eof && idCont(code))) {\n      effects.consume(code)\n      return attributeLocalName\n    }\n\n    // End of tag / attribute name.\n    if (\n      code === codes.slash ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNameLocalType)\n      effects.exit(tagAttributeNameType)\n      returnState = afterAttributeLocalName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in local attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  // After a local attribute name, expecting an equals.\n  /** @type {State} */\n  function afterAttributeLocalName(code) {\n    // Start of an attribute value.\n    if (code === codes.equalsTo) {\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = beforeAttributeValue\n      return optionalEsWhitespace\n    }\n\n    // End of tag / new attribute.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && idStart(code))\n    ) {\n      effects.exit(tagAttributeType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  }\n\n  // After an attribute value initializer, expecting quotes and such.\n  /** @type {State} */\n  function beforeAttributeValue(code) {\n    // Start of double- or single quoted value.\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.enter(tagAttributeValueLiteralType)\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      marker = code\n      return attributeValueQuotedStart\n    }\n\n    // Start of an assignment expression.\n    if (code === codes.leftCurlyBrace) {\n      assert(startPoint, 'expected `startPoint` to be defined')\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        afterAttributeValueExpression,\n        tagAttributeValueExpressionType,\n        tagAttributeValueExpressionMarkerType,\n        tagAttributeValueExpressionValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        false,\n        false,\n        allowLazy,\n        startPoint.column\n      )(code)\n    }\n\n    crash(\n      code,\n      'before attribute value',\n      'a character that can start an attribute value, such as `\"`, `\\'`, or `{`' +\n        (code === codes.lessThan\n          ? ' (note: to use an element or fragment as a prop value in MDX, use `{<element />}`)'\n          : '')\n    )\n  }\n\n  /** @type {State} */\n  function afterAttributeValueExpression(code) {\n    effects.exit(tagAttributeType)\n    returnState = beforeAttribute\n    return optionalEsWhitespace(code)\n  }\n\n  // At the start of a quoted attribute value.\n  /** @type {State} */\n  function attributeValueQuotedStart(code) {\n    assert(marker !== undefined, 'expected `marker` to be defined')\n\n    if (code === codes.eof) {\n      crash(\n        code,\n        'in attribute value',\n        'a corresponding closing quote `' + String.fromCharCode(marker) + '`'\n      )\n    }\n\n    if (code === marker) {\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      effects.exit(tagAttributeValueLiteralType)\n      effects.exit(tagAttributeType)\n      marker = undefined\n      returnState = beforeAttribute\n      return optionalEsWhitespace\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = attributeValueQuotedStart\n      return optionalEsWhitespace(code)\n    }\n\n    effects.enter(tagAttributeValueLiteralValueType)\n    return attributeValueQuoted(code)\n  }\n\n  // In a quoted attribute value.\n  /** @type {State} */\n  function attributeValueQuoted(code) {\n    if (code === codes.eof || code === marker || markdownLineEnding(code)) {\n      effects.exit(tagAttributeValueLiteralValueType)\n      return attributeValueQuotedStart(code)\n    }\n\n    // Continuation.\n    effects.consume(code)\n    return attributeValueQuoted\n  }\n\n  // Right after the slash on a tag, e.g., `<asd /`.\n  /** @type {State} */\n  function selfClosing(code) {\n    // End of tag.\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    crash(\n      code,\n      'after self-closing slash',\n      '`>` to end the tag' +\n        (code === codes.asterisk || code === codes.slash\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  }\n\n  // At a `>`.\n  /** @type {State} */\n  function tagEnd(code) {\n    assert(code === codes.greaterThan, 'expected `>`')\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    effects.exit(tagType)\n    return ok\n  }\n\n  // Optionally start whitespace.\n  /** @type {State} */\n  function optionalEsWhitespace(code) {\n    if (markdownLineEnding(code)) {\n      if (allowLazy) {\n        effects.enter(types.lineEnding)\n        effects.consume(code)\n        effects.exit(types.lineEnding)\n        return factorySpace(\n          effects,\n          optionalEsWhitespace,\n          types.linePrefix,\n          constants.tabSize\n        )\n      }\n\n      return effects.attempt(\n        lazyLineEnd,\n        factorySpace(\n          effects,\n          optionalEsWhitespace,\n          types.linePrefix,\n          constants.tabSize\n        ),\n        crashEol\n      )(code)\n    }\n\n    if (markdownSpace(code) || unicodeWhitespace(code)) {\n      effects.enter('esWhitespace')\n      return optionalEsWhitespaceContinue(code)\n    }\n\n    return returnState(code)\n  }\n\n  // Continue optional whitespace.\n  /** @type {State} */\n  function optionalEsWhitespaceContinue(code) {\n    if (\n      markdownLineEnding(code) ||\n      !(markdownSpace(code) || unicodeWhitespace(code))\n    ) {\n      effects.exit('esWhitespace')\n      return optionalEsWhitespace(code)\n    }\n\n    effects.consume(code)\n    return optionalEsWhitespaceContinue\n  }\n\n  /** @type {State} */\n  function crashEol() {\n    throw new VFileMessage(\n      'Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc',\n      self.now(),\n      'micromark-extension-mdx-jsx:unexpected-eof'\n    )\n  }\n\n  // Crash at a nonconforming character.\n  /**\n   * @param {Code} code\n   * @param {string} at\n   * @param {string} expect\n   */\n  function crash(code, at, expect) {\n    throw new VFileMessage(\n      'Unexpected ' +\n        (code === codes.eof\n          ? 'end of file'\n          : 'character `' +\n            (code === codes.graveAccent ? '` ` `' : String.fromCharCode(code)) +\n            '` (' +\n            serializeCharCode(code) +\n            ')') +\n        ' ' +\n        at +\n        ', expected ' +\n        expect,\n      self.now(),\n      'micromark-extension-mdx-jsx:unexpected-' +\n        (code === codes.eof ? 'eof' : 'character')\n    )\n  }\n}\n\n/** @type {Tokenizer} */\nfunction tokenizeLazyLineEnd(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineStart\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @param {NonNullable<Code>} code\n * @returns {string}\n */\nfunction serializeCharCode(code) {\n  return (\n    'U+' +\n    code\n      .toString(constants.numericBaseHexadecimal)\n      .toUpperCase()\n      .padStart(4, '0')\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\n\nimport {factoryTag} from './factory-tag.js'\n\n/**\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @returns {Construct}\n */\nexport function jsxText(acorn, acornOptions, addResult) {\n  return {tokenize: tokenizeJsxText}\n\n  /** @type {Tokenizer} */\n  function tokenizeJsxText(effects, ok, nok) {\n    return factoryTag.call(\n      this,\n      effects,\n      ok,\n      nok,\n      acorn,\n      acornOptions,\n      addResult,\n      true,\n      'mdxJsxTextTag',\n      'mdxJsxTextTagMarker',\n      'mdxJsxTextTagClosingMarker',\n      'mdxJsxTextTagSelfClosingMarker',\n      'mdxJsxTextTagName',\n      'mdxJsxTextTagNamePrimary',\n      'mdxJsxTextTagNameMemberMarker',\n      'mdxJsxTextTagNameMember',\n      'mdxJsxTextTagNamePrefixMarker',\n      'mdxJsxTextTagNameLocal',\n      'mdxJsxTextTagExpressionAttribute',\n      'mdxJsxTextTagExpressionAttributeMarker',\n      'mdxJsxTextTagExpressionAttributeValue',\n      'mdxJsxTextTagAttribute',\n      'mdxJsxTextTagAttributeName',\n      'mdxJsxTextTagAttributeNamePrimary',\n      'mdxJsxTextTagAttributeNamePrefixMarker',\n      'mdxJsxTextTagAttributeNameLocal',\n      'mdxJsxTextTagAttributeInitializerMarker',\n      'mdxJsxTextTagAttributeValueLiteral',\n      'mdxJsxTextTagAttributeValueLiteralMarker',\n      'mdxJsxTextTagAttributeValueLiteralValue',\n      'mdxJsxTextTagAttributeValueExpression',\n      'mdxJsxTextTagAttributeValueExpressionMarker',\n      'mdxJsxTextTagAttributeValueExpressionValue'\n    )\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {factoryTag} from './factory-tag.js'\n\n/**\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @returns {Construct}\n */\nexport function jsxFlow(acorn, acornOptions, addResult) {\n  return {tokenize: tokenizeJsxFlow, concrete: true}\n\n  /** @type {Tokenizer} */\n  function tokenizeJsxFlow(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      assert(code === codes.lessThan, 'expected `<`')\n      return factoryTag.call(\n        self,\n        effects,\n        factorySpace(effects, after, types.whitespace),\n        nok,\n        acorn,\n        acornOptions,\n        addResult,\n        false,\n        'mdxJsxFlowTag',\n        'mdxJsxFlowTagMarker',\n        'mdxJsxFlowTagClosingMarker',\n        'mdxJsxFlowTagSelfClosingMarker',\n        'mdxJsxFlowTagName',\n        'mdxJsxFlowTagNamePrimary',\n        'mdxJsxFlowTagNameMemberMarker',\n        'mdxJsxFlowTagNameMember',\n        'mdxJsxFlowTagNamePrefixMarker',\n        'mdxJsxFlowTagNameLocal',\n        'mdxJsxFlowTagExpressionAttribute',\n        'mdxJsxFlowTagExpressionAttributeMarker',\n        'mdxJsxFlowTagExpressionAttributeValue',\n        'mdxJsxFlowTagAttribute',\n        'mdxJsxFlowTagAttributeName',\n        'mdxJsxFlowTagAttributeNamePrimary',\n        'mdxJsxFlowTagAttributeNamePrefixMarker',\n        'mdxJsxFlowTagAttributeNameLocal',\n        'mdxJsxFlowTagAttributeInitializerMarker',\n        'mdxJsxFlowTagAttributeValueLiteral',\n        'mdxJsxFlowTagAttributeValueLiteralMarker',\n        'mdxJsxFlowTagAttributeValueLiteralValue',\n        'mdxJsxFlowTagAttributeValueExpression',\n        'mdxJsxFlowTagAttributeValueExpressionMarker',\n        'mdxJsxFlowTagAttributeValueExpressionValue'\n      )(code)\n    }\n\n    /** @type {State} */\n    function after(code) {\n      // Another tag.\n      return code === codes.lessThan\n        ? start(code)\n        : code === codes.eof || markdownLineEnding(code)\n        ? ok(code)\n        : nok(code)\n    }\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\n\n/**\n * @typedef Options\n * @property {boolean} [addResult=false]\n * @property {Acorn} [acorn]\n * @property {AcornOptions} [acornOptions]\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {jsxText} from './jsx-text.js'\nimport {jsxFlow} from './jsx-flow.js'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function mdxJsx(options = {}) {\n  const acorn = options.acorn\n  /** @type {AcornOptions|undefined} */\n  let acornOptions\n\n  if (acorn) {\n    if (!acorn.parse || !acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {ecmaVersion: 2020, sourceType: 'module'},\n      options.acornOptions,\n      {locations: true}\n    )\n  } else if (options.acornOptions || options.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {[codes.lessThan]: jsxFlow(acorn, acornOptions, options.addResult)},\n    text: {[codes.lessThan]: jsxText(acorn, acornOptions, options.addResult)}\n  }\n}\n", "/**\n * @type {import('micromark-util-types').Extension}\n */\nexport const mdxMd = {\n  disable: {null: ['autolink', 'codeIndented', 'htmlFlow', 'htmlText']}\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n *\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n */\n\n/**\n * @typedef Options\n * @property {boolean} [addResult=false]\n * @property {Acorn} acorn\n * @property {AcornOptions} [acornOptions]\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {blankLine} from 'micromark-core-commonmark'\nimport {markdownLineEnding, unicodeWhitespace} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\n\nconst nextBlankConstruct = {tokenize: tokenizeNextBlank, partial: true}\n\nconst allowedAcornTypes = new Set([\n  'ExportAllDeclaration',\n  'ExportDefaultDeclaration',\n  'ExportNamedDeclaration',\n  'ImportDeclaration'\n])\n\n/**\n * @param {Options} options\n * @returs {Extension}\n */\nexport function mdxjsEsm(options) {\n  const exportImportConstruct = {tokenize: tokenizeExportImport, concrete: true}\n\n  if (!options || !options.acorn || !options.acorn.parse) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  const acorn = options.acorn\n  const acornOptions = Object.assign(\n    {ecmaVersion: 2020, sourceType: 'module'},\n    options.acornOptions\n  )\n\n  return {\n    flow: {\n      [codes.lowercaseE]: exportImportConstruct,\n      [codes.lowercaseI]: exportImportConstruct\n    }\n  }\n\n  /** @type {Tokenizer} */\n  function tokenizeExportImport(effects, ok, nok) {\n    const self = this\n    /** @type {string[]} */\n    const definedModuleSpecifiers =\n      // @ts-expect-error: hush\n      self.parser.definedModuleSpecifiers ||\n      // @ts-expect-error: hush\n      (self.parser.definedModuleSpecifiers = [])\n    const eventStart = this.events.length + 1 // Add the main `mdxjsEsm` token\n    let index = 0\n    /** @type {string} */\n    let buffer\n\n    return self.interrupt ? nok : start\n\n    /** @type {State} */\n    function start(code) {\n      assert(\n        code === codes.lowercaseE || code === codes.lowercaseI,\n        'expected `e` or `i`'\n      )\n\n      // Do not support indent (the easiest check for containers).\n      if (self.now().column > 1) return nok(code)\n      buffer = code === codes.lowercaseE ? 'export' : 'import'\n      effects.enter('mdxjsEsm')\n      effects.enter('mdxjsEsmData')\n      return keyword(code)\n    }\n\n    /** @type {State} */\n    function keyword(code) {\n      if (code === buffer.charCodeAt(index++)) {\n        effects.consume(code)\n        return index === buffer.length ? after : keyword\n      }\n\n      return nok(code)\n    }\n\n    /** @type {State} */\n    function after(code) {\n      if (unicodeWhitespace(code)) {\n        effects.consume(code)\n        return rest\n      }\n\n      return nok(code)\n    }\n\n    /** @type {State} */\n    function rest(code) {\n      if (code === codes.eof) {\n        return atEndOfData(code)\n      }\n\n      if (markdownLineEnding(code)) {\n        return effects.check(nextBlankConstruct, atEndOfData, atEol)(code)\n      }\n\n      effects.consume(code)\n      return rest\n    }\n\n    /** @type {State} */\n    function atEol(code) {\n      effects.exit('mdxjsEsmData')\n      return lineStart(code)\n    }\n\n    /** @type {State} */\n    function lineStart(code) {\n      if (markdownLineEnding(code)) {\n        effects.enter(types.lineEnding)\n        effects.consume(code)\n        effects.exit(types.lineEnding)\n        return lineStart\n      }\n\n      if (code === codes.eof) {\n        return atEnd(code)\n      }\n\n      effects.enter('mdxjsEsmData')\n      return rest(code)\n    }\n\n    /** @type {State} */\n    function atEndOfData(code) {\n      effects.exit('mdxjsEsmData')\n      return atEnd(code)\n    }\n\n    /** @type {State} */\n    function atEnd(code) {\n      let index = -1\n      const result = eventsToAcorn(self.events.slice(eventStart), {\n        acorn,\n        acornOptions,\n        prefix:\n          definedModuleSpecifiers.length > 0\n            ? 'var ' + definedModuleSpecifiers.join(',') + '\\n'\n            : ''\n      })\n\n      if (code !== codes.eof && result.swallow) {\n        return lineStart(code)\n      }\n\n      if (result.error) {\n        throw new VFileMessage(\n          'Could not parse import/exports with acorn: ' + String(result.error),\n          {\n            // @ts-expect-error: hush\n            line: result.error.loc.line,\n            // @ts-expect-error: hush\n            column: result.error.loc.column + 1,\n            // @ts-expect-error: hush\n            offset: result.error.pos\n          },\n          'micromark-extension-mdxjs-esm:acorn'\n        )\n      }\n\n      assert(result.estree, 'expected `estree` to be defined')\n\n      // Remove the `VariableDeclaration`\n      if (definedModuleSpecifiers.length > 0) {\n        result.estree.body.shift()\n      }\n\n      while (++index < result.estree.body.length) {\n        const node = result.estree.body[index]\n\n        if (!allowedAcornTypes.has(node.type)) {\n          throw new VFileMessage(\n            'Unexpected `' +\n              node.type +\n              '` in code: only import/exports are supported',\n            positionFromEstree(node),\n            'micromark-extension-mdxjs-esm:non-esm'\n          )\n        }\n\n        // Otherwise, when we’re not interrupting (hacky, because `interrupt` is\n        // used to parse containers and “sniff” if this is ESM), collect all the\n        // local values that are imported.\n        if (node.type === 'ImportDeclaration' && !self.interrupt) {\n          let index = -1\n\n          while (++index < node.specifiers.length) {\n            definedModuleSpecifiers.push(node.specifiers[index].local.name)\n          }\n        }\n      }\n\n      Object.assign(\n        effects.exit('mdxjsEsm'),\n        options.addResult ? {estree: result.estree} : undefined\n      )\n\n      return ok(code)\n    }\n  }\n}\n\n/** @type {Tokenizer} */\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.exit('mdxjsEsmData')\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n", "/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n *\n * @typedef {import('../index.js').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('../index.js').MdxTextExpression} MdxTextExpression\n */\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX expressions.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxExpressionFromMarkdown = {\n  enter: {\n    mdxFlowExpression: enterMdxFlowExpression,\n    mdxTextExpression: enterMdxTextExpression\n  },\n  exit: {\n    mdxFlowExpression: exitMdxExpression,\n    mdxFlowExpressionChunk: exitMdxExpressionData,\n    mdxTextExpression: exitMdxExpression,\n    mdxTextExpressionChunk: exitMdxExpressionData\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxExpressionToMarkdown = {\n  handlers: {\n    mdxFlowExpression: handleMdxExpression,\n    mdxTextExpression: handleMdxExpression\n  },\n  unsafe: [\n    {character: '{', inConstruct: ['phrasing']},\n    {atBreak: true, character: '{'}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxFlowExpression(token) {\n  this.enter({type: 'mdxFlowExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxTextExpression(token) {\n  this.enter({type: 'mdxTextExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpression(token) {\n  const value = this.resume()\n  /** @type {Program | undefined} */\n  // @ts-expect-error: estree.\n  const estree = token.estree\n  const node = /** @type {MdxFlowExpression | MdxTextExpression} */ (\n    this.exit(token)\n  )\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpressionData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxFlowExpression | MdxTextExpression} node\n */\nfunction handleMdxExpression(node) {\n  const value = node.value || ''\n  return '{' + value + '}'\n}\n", "/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n", "/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n", "/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n", "/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n", "/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n", "import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n", "/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Token} Token\n * @typedef {import('mdast-util-from-markdown').OnEnterError} OnEnterError\n * @typedef {import('mdast-util-from-markdown').OnExitError} OnExitError\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} ToMarkdownMap\n *\n * @typedef {import('../index.js').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('../index.js').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('../index.js').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('../index.js').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('../index.js').MdxJsxTextElement} MdxJsxTextElement\n */\n\n/**\n * @typedef Tag\n *   Single tag.\n * @property {string | undefined} name\n *   Name of tag, or `undefined` for fragment.\n *\n *   > 👉 **Note**: `null` is used in the AST for fragments, as it serializes in\n *   > JSON.\n * @property {Array<MdxJsxAttribute | MdxJsxExpressionAttribute>} attributes\n *   Attributes.\n * @property {boolean} close\n *   Whether the tag is closing (`</x>`).\n * @property {boolean} selfClosing\n *   Whether the tag is self-closing (`<x/>`).\n * @property {Token['start']} start\n *   Start point.\n * @property {Token['start']} end\n *   End point.\n *\n * @typedef ToMarkdownOptions\n *   Configuration.\n * @property {'\"' | \"'\" | null | undefined} [quote='\"']\n *   Preferred quote to use around attribute values.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes.\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />`.\n * @property {number | null | undefined} [printWidth=Infinity]\n *   Try and wrap syntax at this width.\n *\n *   When set to a finite number (say, `80`), the formatter will print\n *   attributes on separate lines when a tag doesn’t fit on one line.\n *   The normal behavior is to print attributes with spaces between them\n *   instead of line endings.\n */\n\nimport {ccount} from 'ccount'\nimport {parseEntities} from 'parse-entities'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {VFileMessage} from 'vfile-message'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: use `state`, use utilities from state, rename `safeOptions` to `info`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n *   When using the syntax extension with `addResult`, nodes will have a\n *   `data.estree` field set to an ESTree `Program` node.\n */\nexport function mdxJsxFromMarkdown() {\n  return {\n    canContainEols: ['mdxJsxTextElement'],\n    enter: {\n      mdxJsxFlowTag: enterMdxJsxTag,\n      mdxJsxFlowTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxFlowTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxFlowTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagAttributeValueLiteral: buffer,\n      mdxJsxFlowTagAttributeValueExpression: buffer,\n      mdxJsxFlowTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker,\n\n      mdxJsxTextTag: enterMdxJsxTag,\n      mdxJsxTextTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxTextTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxTextTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagAttributeValueLiteral: buffer,\n      mdxJsxTextTagAttributeValueExpression: buffer,\n      mdxJsxTextTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker\n    },\n    exit: {\n      mdxJsxFlowTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxFlowTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxFlowTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxFlowTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxFlowTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagExpressionAttributeValue: data,\n      mdxJsxFlowTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxFlowTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxFlowTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxFlowTagAttributeValueLiteralValue: data,\n      mdxJsxFlowTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxFlowTagAttributeValueExpressionValue: data,\n      mdxJsxFlowTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxFlowTag: exitMdxJsxTag,\n\n      mdxJsxTextTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxTextTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxTextTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxTextTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxTextTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagExpressionAttributeValue: data,\n      mdxJsxTextTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxTextTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxTextTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxTextTagAttributeValueLiteralValue: data,\n      mdxJsxTextTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxTextTagAttributeValueExpressionValue: data,\n      mdxJsxTextTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxTextTag: exitMdxJsxTag\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function buffer() {\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function data(token) {\n    this.config.enter.data.call(this, token)\n    this.config.exit.data.call(this, token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTag(token) {\n    /** @type {Tag} */\n    const tag = {\n      name: undefined,\n      attributes: [],\n      close: false,\n      selfClosing: false,\n      start: token.start,\n      end: token.end\n    }\n    if (!this.getData('mdxJsxTagStack')) this.setData('mdxJsxTagStack', [])\n    this.setData('mdxJsxTag', tag)\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagClosingMarker(token) {\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n\n    if (stack.length === 0) {\n      throw new VFileMessage(\n        'Unexpected closing slash `/` in tag, expected an open tag first',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAnyAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected attribute in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-attribute'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagSelfClosingMarker(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected self-closing slash `/` in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-self-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.close = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameMember(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += '.' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxAttribute', name: '', value: null})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxExpressionAttribute', value: ''})\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxExpressionAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    tail.value = this.resume()\n\n    if (estree) {\n      tail.data = {estree}\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueLiteral() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.attributes[tag.attributes.length - 1].value = parseEntities(\n      this.resume(),\n      {nonTerminated: false}\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueExpression(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {MdxJsxAttributeValueExpression} */\n    const node = {type: 'mdxJsxAttributeValueExpression', value: this.resume()}\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    if (estree) {\n      node.data = {estree}\n    }\n\n    tail.value = node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagSelfClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    tag.selfClosing = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTag(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n    const tail = stack[stack.length - 1]\n\n    if (tag.close && tail.name !== tag.name) {\n      throw new VFileMessage(\n        'Unexpected closing tag `' +\n          serializeAbbreviatedTag(tag) +\n          '`, expected corresponding closing tag for `' +\n          serializeAbbreviatedTag(tail) +\n          '` (' +\n          stringifyPosition(tail) +\n          ')',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:end-tag-mismatch'\n      )\n    }\n\n    // End of a tag, so drop the buffer.\n    this.resume()\n\n    if (tag.close) {\n      stack.pop()\n    } else {\n      this.enter(\n        {\n          type:\n            token.type === 'mdxJsxTextTag'\n              ? 'mdxJsxTextElement'\n              : 'mdxJsxFlowElement',\n          name: tag.name || null,\n          attributes: tag.attributes,\n          children: []\n        },\n        token,\n        onErrorRightIsTag\n      )\n    }\n\n    if (tag.selfClosing || tag.close) {\n      this.exit(token, onErrorLeftIsTag)\n    } else {\n      stack.push(tag)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnEnterError}\n   */\n  function onErrorRightIsTag(closing, open) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const place = closing ? ' before the end of `' + closing.type + '`' : ''\n    const position = closing\n      ? {start: closing.start, end: closing.end}\n      : undefined\n\n    throw new VFileMessage(\n      'Expected a closing tag for `' +\n        serializeAbbreviatedTag(tag) +\n        '` (' +\n        stringifyPosition({start: open.start, end: open.end}) +\n        ')' +\n        place,\n      position,\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnExitError}\n   */\n  function onErrorLeftIsTag(a, b) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    throw new VFileMessage(\n      'Expected the closing tag `' +\n        serializeAbbreviatedTag(tag) +\n        '` either after the end of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.end) +\n        ') or another opening tag after the start of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.start) +\n        ')',\n      {start: a.start, end: a.end},\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * Serialize a tag, excluding attributes.\n   * `self-closing` is not supported, because we don’t need it yet.\n   *\n   * @param {Tag} tag\n   * @returns {string}\n   */\n  function serializeAbbreviatedTag(tag) {\n    return '<' + (tag.close ? '/' : '') + (tag.name || '') + '>'\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX JSX.\n *\n * This extension configures `mdast-util-to-markdown` with\n * `options.fences: true` and `options.resourceLink: true` too, do not\n * overwrite them!\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX JSX.\n */\nexport function mdxJsxToMarkdown(options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const quoteSmart = options_.quoteSmart || false\n  const tightSelfClosing = options_.tightSelfClosing || false\n  const printWidth = options_.printWidth || Number.POSITIVE_INFINITY\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error(\n      'Cannot serialize attribute values with `' +\n        quote +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  mdxElement.peek = peekElement\n\n  return {\n    handlers: {\n      mdxJsxFlowElement: mdxElement,\n      mdxJsxTextElement: mdxElement\n    },\n    unsafe: [\n      {character: '<', inConstruct: ['phrasing']},\n      {atBreak: true, character: '<'}\n    ],\n    // Always generate fenced code (never indented code).\n    fences: true,\n    // Always generate links with resources (never autolinks).\n    resourceLink: true\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n   */\n  // eslint-disable-next-line complexity\n  function mdxElement(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    const selfClosing =\n      node.name && (!node.children || node.children.length === 0)\n    const exit = context.enter(node.type)\n    let index = -1\n    /** @type {Array<string>} */\n    const serializedAttributes = []\n    let value = tracker.move('<' + (node.name || ''))\n\n    // None.\n    if (node.attributes && node.attributes.length > 0) {\n      if (!node.name) {\n        throw new Error('Cannot serialize fragment w/ attributes')\n      }\n\n      while (++index < node.attributes.length) {\n        const attribute = node.attributes[index]\n        /** @type {string} */\n        let result\n\n        if (attribute.type === 'mdxJsxExpressionAttribute') {\n          result = '{' + (attribute.value || '') + '}'\n        } else {\n          if (!attribute.name) {\n            throw new Error('Cannot serialize attribute w/o name')\n          }\n\n          const value = attribute.value\n          const left = attribute.name\n          /** @type {string} */\n          let right = ''\n\n          if (value === undefined || value === null) {\n            // Empty.\n          } else if (typeof value === 'object') {\n            right = '{' + (value.value || '') + '}'\n          } else {\n            // If the alternative is less common than `quote`, switch.\n            const appliedQuote =\n              quoteSmart && ccount(value, quote) > ccount(value, alternative)\n                ? alternative\n                : quote\n            right =\n              appliedQuote +\n              stringifyEntitiesLight(value, {subset: [appliedQuote]}) +\n              appliedQuote\n          }\n\n          result = left + (right ? '=' : '') + right\n        }\n\n        serializedAttributes.push(result)\n      }\n    }\n\n    let attributesOnTheirOwnLine = false\n    const attributesOnOneLine = serializedAttributes.join(' ')\n\n    if (\n      // Block:\n      node.type === 'mdxJsxFlowElement' &&\n      // Including a line ending (expressions).\n      (/\\r?\\n|\\r/.test(attributesOnOneLine) ||\n        // Current position (including `<tag`).\n        tracker.current().now.column +\n          // -1 because columns, +1 for ` ` before attributes.\n          // Attributes joined by spaces.\n          attributesOnOneLine.length +\n          // ` />`.\n          (selfClosing ? (tightSelfClosing ? 2 : 3) : 1) >\n          printWidth)\n    ) {\n      attributesOnTheirOwnLine = true\n    }\n\n    if (attributesOnTheirOwnLine) {\n      value += tracker.move(\n        '\\n' + indentLines(serializedAttributes.join('\\n'), map)\n      )\n    } else if (attributesOnOneLine) {\n      value += tracker.move(' ' + attributesOnOneLine)\n    }\n\n    if (attributesOnTheirOwnLine) {\n      value += tracker.move('\\n')\n    }\n\n    if (selfClosing) {\n      value += tracker.move(\n        (tightSelfClosing || attributesOnTheirOwnLine ? '' : ' ') + '/'\n      )\n    }\n\n    value += tracker.move('>')\n\n    if (node.children && node.children.length > 0) {\n      if (node.type === 'mdxJsxFlowElement') {\n        tracker.shift(2)\n        value += tracker.move('\\n')\n        value += tracker.move(\n          indentLines(containerFlow(node, context, tracker.current()), map)\n        )\n        value += tracker.move('\\n')\n      } else {\n        value += tracker.move(\n          containerPhrasing(node, context, {\n            ...tracker.current(),\n            before: '<',\n            after: '>'\n          })\n        )\n      }\n    }\n\n    if (!selfClosing) {\n      value += tracker.move('</' + (node.name || '') + '>')\n    }\n\n    exit()\n    return value\n  }\n\n  /** @type {ToMarkdownMap} */\n  function map(line, _, blank) {\n    return (blank ? '' : '  ') + line\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   */\n  function peekElement() {\n    return '<'\n  }\n}\n", "/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('../index.js').MdxjsEsm} MdxjsEsm\n */\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX ESM.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxjsEsmFromMarkdown = {\n  enter: {mdxjsEsm: enterMdxjsEsm},\n  exit: {mdxjsEsm: exitMdxjsEsm, mdxjsEsmData: exitMdxjsEsmData}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxjsEsmToMarkdown = {handlers: {mdxjsEsm: handleMdxjsEsm}}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxjsEsm(token) {\n  this.enter({type: 'mdxjsEsm', value: ''}, token)\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsm(token) {\n  const value = this.resume()\n  const node = /** @type {MdxjsEsm} */ (this.exit(token))\n  /** @type {Program | undefined} */\n  // @ts-expect-error: custom.\n  const estree = token.estree\n\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsmData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxjsEsm} node\n */\nfunction handleMdxjsEsm(node) {\n  return node.value || ''\n}\n", "/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpression} MdxTextExpression\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsm} MdxjsEsm\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElement} MdxJsxTextElement\n * @typedef {import('mdast-util-mdx-jsx').ToMarkdownOptions} ToMarkdownOptions\n */\n\nimport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from 'mdast-util-mdx-expression'\nimport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from 'mdast-util-mdx-jsx'\nimport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from 'mdast-util-mdxjs-esm'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n *\n *   When using the syntax extensions with `addResult`, ESM and expression\n *   nodes will have `data.estree` fields set to ESTree `Program` node.\n */\nexport function mdxFromMarkdown() {\n  return [mdxExpressionFromMarkdown, mdxJsxFromMarkdown(), mdxjsEsmFromMarkdown]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n */\nexport function mdxToMarkdown(options) {\n  return {\n    extensions: [\n      mdxExpressionToMarkdown,\n      mdxJsxToMarkdown(options),\n      mdxjsEsmToMarkdown\n    ]\n  }\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-mdxjs').Options} MicromarkOptions\n * @typedef {import('mdast-util-mdx').ToMarkdownOptions} ToMarkdownOptions\n * @typedef {import('mdast-util-mdx')} DoNotTouchAsThisIncludesMdxInTree\n */\n\n/**\n * @typedef {MicromarkOptions & ToMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {mdxjs} from 'micromark-extension-mdxjs'\nimport {mdxFromMarkdown, mdxToMarkdown} from 'mdast-util-mdx'\n\n/**\n * Plugin to support MDX (import/exports: `export {x} from 'y'`; expressions:\n * `{1 + 1}`; and JSX: `<Video id={123} />`).\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options | null | undefined] | [], Root>}\n */\nexport default function remarkMdx(options) {\n  const data = this.data()\n\n  add('micromarkExtensions', mdxjs(options))\n  add('fromMarkdownExtensions', mdxFromMarkdown())\n  add('toMarkdownExtensions', mdxToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {Array<unknown>} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n", "/**\n * @typedef { import('estree').Node} Node\n * @typedef {{\n *   skip: () => void;\n *   remove: () => void;\n *   replace: (node: Node) => void;\n * }} WalkerContext\n */\n\nexport class WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t * @param {Node} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent && prop) {\n\t\t\tif (index != null) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop])[index] = node;\n\t\t\t} else {\n\t\t\t\t/** @type {Node} */ (parent[prop]) = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent && prop) {\n\t\t\tif (index !== null && index !== undefined) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop]).splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => void} SyncHandler\n */\n\nexport class SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} [enter]\n\t * @param {SyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Node | null}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!this.visit(item, node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n", "import { SyncWalker } from './sync.js';\nimport { AsyncWalker } from './async.js';\n\n/**\n * @typedef {import('estree').Node} Node\n * @typedef {import('./sync.js').SyncHandler} SyncHandler\n * @typedef {import('./async.js').AsyncHandler} AsyncHandler\n */\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {Node | null}\n */\nexport function walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<Node | null>}\n */\nexport async function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n", "/**\n * @typedef {import('estree-jsx').Node} Node\n * @typedef {import('estree-jsx').Expression} Expression\n * @typedef {import('estree-jsx').ObjectExpression} ObjectExpression\n * @typedef {import('estree-jsx').Property} Property\n * @typedef {import('estree-jsx').ImportSpecifier} ImportSpecifier\n * @typedef {import('estree-jsx').SpreadElement} SpreadElement\n * @typedef {import('estree-jsx').MemberExpression} MemberExpression\n * @typedef {import('estree-jsx').Literal} Literal\n * @typedef {import('estree-jsx').Identifier} Identifier\n * @typedef {import('estree-jsx').JSXAttribute} JSXAttribute\n * @typedef {import('estree-jsx').JSXMemberExpression} JSXMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JSXNamespacedName\n * @typedef {import('estree-jsx').JSXIdentifier} JSXIdentifier\n *\n * @typedef {'automatic' | 'classic'} Runtime\n *   How to transform JSX.\n *\n * @typedef Options\n *   Configuration.\n *\n *   > 👉 **Note**: you can also configure `runtime`, `importSource`, `pragma`,\n *   > and `pragmaFrag` from within files through comments.\n * @property {Runtime | null | undefined} [runtime='classic']\n *   Choose the runtime.\n *\n *   Comment form: `@jsxRuntime theRuntime`.\n * @property {string | null | undefined} [importSource='react']\n *   Place to import `jsx`, `jsxs`, `jsxDEV`, and `Fragment` from, when the\n *   effective runtime is automatic.\n *\n *   Comment form: `@jsxImportSource theSource`.\n *\n *   > 👉 **Note**: `/jsx-runtime` or `/jsx-dev-runtime` is appended to this\n *   > provided source.\n *   > In CJS, that can resolve to a file (as in `theSource/jsx-runtime.js`),\n *   > but for ESM an export map needs to be set up to point to files:\n *   >\n *   > ```js\n *   > // …\n *   > \"exports\": {\n *   >   // …\n *   >   \"./jsx-runtime\": \"./path/to/jsx-runtime.js\",\n *   >   \"./jsx-dev-runtime\": \"./path/to/jsx-runtime.js\"\n *   >   // …\n *   > ```\n * @property {string | null | undefined} [pragma='React.createElement']\n *   Identifier or member expression to call when the effective runtime is\n *   classic.\n *\n *   Comment form: `@jsx identifier`.\n * @property {string | null | undefined} [pragmaFrag='React.Fragment']\n *   Identifier or member expression to use as a symbol for fragments when the\n *   effective runtime is classic.\n *\n *   Comment form: `@jsxFrag identifier`.\n * @property {boolean | null | undefined} [development=false]\n *   When in the automatic runtime, whether to import\n *   `theSource/jsx-dev-runtime.js`, use `jsxDEV`, and pass location info when\n *   available.\n *\n *   This helps debugging but adds a lot of code that you don’t want in\n *   production.\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file.\n *\n *   Passed in location info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n *\n * @typedef Annotations\n *   State where info from comments is gathered.\n * @property {Runtime | undefined} [jsxRuntime]\n *   Runtime.\n * @property {string | undefined} [jsx]\n *   JSX identifier (`pragma`).\n * @property {string | undefined} [jsxFrag]\n *   JSX identifier of fragment (`pragmaFrag`).\n * @property {string | undefined} [jsxImportSource]\n *   Where to import an automatic JSX runtime from.\n *\n * @typedef Imports\n *   State of used identifiers from the automatic runtime.\n * @property {boolean | undefined} [fragment]\n *   Symbol of `Fragment`.\n * @property {boolean | undefined} [jsx]\n *   Symbol of `jsx`.\n * @property {boolean | undefined} [jsxs]\n *   Symbol of `jsxs`.\n * @property {boolean | undefined} [jsxDEV]\n *   Symbol of `jsxDEV`.\n */\n\nimport {walk} from 'estree-walker'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\n\nconst regex = /@(jsx|jsxFrag|jsxImportSource|jsxRuntime)\\s+(\\S+)/g\n\n/**\n * Turn JSX in `tree` into function calls: `<x />` -> `h('x')`!\n *\n * ###### Algorithm\n *\n * In almost all cases, this utility is the same as the Babel plugin, except that\n * they work on slightly different syntax trees.\n *\n * Some differences:\n *\n * *   no pure annotations things\n * *   `this` is not a component: `<this>` -> `h('this')`, not `h(this)`\n * *   namespaces are supported: `<a:b c:d>` -> `h('a:b', {'c:d': true})`,\n *     which throws by default in Babel or can be turned on with `throwIfNamespace`\n * *   no `useSpread`, `useBuiltIns`, or `filter` options\n *\n * @template {Node} Tree\n *   Node type.\n * @param {Tree} tree\n *   Tree to transform (typically `Program`).\n * @param {Options | null | undefined} [options={}]\n *   Configuration (optional).\n * @returns {Tree}\n *   Given, modified, `tree`.\n */\n// To do next major: do not return the given Node.\nexport function buildJsx(tree, options) {\n  const config = options || {}\n  let automatic = config.runtime === 'automatic'\n  /** @type {Annotations} */\n  const annotations = {}\n  /** @type {Imports} */\n  const imports = {}\n\n  walk(tree, {\n    // @ts-expect-error: hush, `estree-walker` is broken.\n    enter(/** @type {Node} */ node) {\n      if (node.type === 'Program') {\n        const comments = node.comments || []\n        let index = -1\n\n        while (++index < comments.length) {\n          regex.lastIndex = 0\n\n          let match = regex.exec(comments[index].value)\n\n          while (match) {\n            // @ts-expect-error: indexable.\n            annotations[match[1]] = match[2]\n            match = regex.exec(comments[index].value)\n          }\n        }\n\n        if (annotations.jsxRuntime) {\n          if (annotations.jsxRuntime === 'automatic') {\n            automatic = true\n\n            if (annotations.jsx) {\n              throw new Error('Unexpected `@jsx` pragma w/ automatic runtime')\n            }\n\n            if (annotations.jsxFrag) {\n              throw new Error(\n                'Unexpected `@jsxFrag` pragma w/ automatic runtime'\n              )\n            }\n          } else if (annotations.jsxRuntime === 'classic') {\n            automatic = false\n\n            if (annotations.jsxImportSource) {\n              throw new Error(\n                'Unexpected `@jsxImportSource` w/ classic runtime'\n              )\n            }\n          } else {\n            throw new Error(\n              'Unexpected `jsxRuntime` `' +\n                annotations.jsxRuntime +\n                '`, expected `automatic` or `classic`'\n            )\n          }\n        }\n      }\n    },\n    // @ts-expect-error: hush, `estree-walker` is broken.\n    // eslint-disable-next-line complexity\n    leave(/** @type {Node} */ node) {\n      if (node.type === 'Program') {\n        /** @type {Array<ImportSpecifier>} */\n        const specifiers = []\n\n        if (imports.fragment) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'Fragment'},\n            local: {type: 'Identifier', name: '_Fragment'}\n          })\n        }\n\n        if (imports.jsx) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsx'},\n            local: {type: 'Identifier', name: '_jsx'}\n          })\n        }\n\n        if (imports.jsxs) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxs'},\n            local: {type: 'Identifier', name: '_jsxs'}\n          })\n        }\n\n        if (imports.jsxDEV) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxDEV'},\n            local: {type: 'Identifier', name: '_jsxDEV'}\n          })\n        }\n\n        if (specifiers.length > 0) {\n          node.body.unshift({\n            type: 'ImportDeclaration',\n            specifiers,\n            source: {\n              type: 'Literal',\n              value:\n                (annotations.jsxImportSource ||\n                  config.importSource ||\n                  'react') +\n                (config.development ? '/jsx-dev-runtime' : '/jsx-runtime')\n            }\n          })\n        }\n      }\n\n      if (node.type !== 'JSXElement' && node.type !== 'JSXFragment') {\n        return\n      }\n\n      /** @type {Array<Expression>} */\n      const children = []\n      let index = -1\n\n      // Figure out `children`.\n      while (++index < node.children.length) {\n        const child = node.children[index]\n\n        if (child.type === 'JSXExpressionContainer') {\n          // Ignore empty expressions.\n          if (child.expression.type !== 'JSXEmptyExpression') {\n            children.push(child.expression)\n          }\n        } else if (child.type === 'JSXText') {\n          const value = child.value\n            // Replace tabs w/ spaces.\n            .replace(/\\t/g, ' ')\n            // Use line feeds, drop spaces around them.\n            .replace(/ *(\\r?\\n|\\r) */g, '\\n')\n            // Collapse multiple line feeds.\n            .replace(/\\n+/g, '\\n')\n            // Drop final line feeds.\n            .replace(/\\n+$/, '')\n            // Drop first line feeds.\n            .replace(/^\\n+/, '')\n            // Replace line feeds with spaces.\n            .replace(/\\n/g, ' ')\n\n          // Ignore collapsible text.\n          if (value) {\n            children.push(create(child, {type: 'Literal', value}))\n          }\n        } else {\n          // @ts-expect-error JSX{Element,Fragment} have already been compiled,\n          // and `JSXSpreadChild` is not supported in Babel either, so ignore\n          // it.\n          children.push(child)\n        }\n      }\n\n      /** @type {MemberExpression | Literal | Identifier} */\n      let name\n      /** @type {Array<Property>} */\n      let fields = []\n      /** @type {Array<Expression>} */\n      const objects = []\n      /** @type {Array<Expression | SpreadElement>} */\n      let parameters = []\n      /** @type {Expression | undefined} */\n      let key\n\n      // Do the stuff needed for elements.\n      if (node.type === 'JSXElement') {\n        name = toIdentifier(node.openingElement.name)\n\n        // If the name could be an identifier, but start with a lowercase letter,\n        // it’s not a component.\n        if (name.type === 'Identifier' && /^[a-z]/.test(name.name)) {\n          name = create(name, {type: 'Literal', value: name.name})\n        }\n\n        /** @type {boolean | undefined} */\n        let spread\n        const attributes = node.openingElement.attributes\n        let index = -1\n\n        // Place props in the right order, because we might have duplicates\n        // in them and what’s spread in.\n        while (++index < attributes.length) {\n          const attribute = attributes[index]\n\n          if (attribute.type === 'JSXSpreadAttribute') {\n            if (fields.length > 0) {\n              objects.push({type: 'ObjectExpression', properties: fields})\n              fields = []\n            }\n\n            objects.push(attribute.argument)\n            spread = true\n          } else {\n            const prop = toProperty(attribute)\n\n            if (\n              automatic &&\n              prop.key.type === 'Identifier' &&\n              prop.key.name === 'key'\n            ) {\n              if (spread) {\n                throw new Error(\n                  'Expected `key` to come before any spread expressions'\n                )\n              }\n\n              // @ts-expect-error I can’t see object patterns being used as\n              // attribute values? 🤷‍♂️\n              key = prop.value\n            } else {\n              fields.push(prop)\n            }\n          }\n        }\n      }\n      // …and fragments.\n      else if (automatic) {\n        imports.fragment = true\n        name = {type: 'Identifier', name: '_Fragment'}\n      } else {\n        name = toMemberExpression(\n          annotations.jsxFrag || config.pragmaFrag || 'React.Fragment'\n        )\n      }\n\n      if (automatic) {\n        if (children.length > 0) {\n          fields.push({\n            type: 'Property',\n            key: {type: 'Identifier', name: 'children'},\n            value:\n              children.length > 1\n                ? {type: 'ArrayExpression', elements: children}\n                : children[0],\n            kind: 'init',\n            method: false,\n            shorthand: false,\n            computed: false\n          })\n        }\n      } else {\n        parameters = children\n      }\n\n      if (fields.length > 0) {\n        objects.push({type: 'ObjectExpression', properties: fields})\n      }\n\n      /** @type {Expression | undefined} */\n      let props\n      /** @type {MemberExpression | Literal | Identifier} */\n      let callee\n\n      if (objects.length > 1) {\n        // Don’t mutate the first object, shallow clone instead.\n        if (objects[0].type !== 'ObjectExpression') {\n          objects.unshift({type: 'ObjectExpression', properties: []})\n        }\n\n        props = {\n          type: 'CallExpression',\n          callee: toMemberExpression('Object.assign'),\n          arguments: objects,\n          optional: false\n        }\n      } else if (objects.length > 0) {\n        props = objects[0]\n      }\n\n      if (automatic) {\n        parameters.push(props || {type: 'ObjectExpression', properties: []})\n\n        if (key) {\n          parameters.push(key)\n        } else if (config.development) {\n          parameters.push({type: 'Identifier', name: 'undefined'})\n        }\n\n        const isStaticChildren = children.length > 1\n\n        if (config.development) {\n          imports.jsxDEV = true\n          callee = {\n            type: 'Identifier',\n            name: '_jsxDEV'\n          }\n          parameters.push({type: 'Literal', value: isStaticChildren})\n\n          /** @type {ObjectExpression} */\n          const source = {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'fileName'},\n                value: {\n                  type: 'Literal',\n                  value: config.filePath || '<source.js>'\n                }\n              }\n            ]\n          }\n\n          if (node.loc) {\n            source.properties.push(\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'lineNumber'},\n                value: {type: 'Literal', value: node.loc.start.line}\n              },\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'columnNumber'},\n                value: {type: 'Literal', value: node.loc.start.column + 1}\n              }\n            )\n          }\n\n          parameters.push(source, {type: 'ThisExpression'})\n        } else if (isStaticChildren) {\n          imports.jsxs = true\n          callee = {type: 'Identifier', name: '_jsxs'}\n        } else {\n          imports.jsx = true\n          callee = {type: 'Identifier', name: '_jsx'}\n        }\n      }\n      // Classic.\n      else {\n        // There are props or children.\n        if (props || parameters.length > 0) {\n          parameters.unshift(props || {type: 'Literal', value: null})\n        }\n\n        callee = toMemberExpression(\n          annotations.jsx || config.pragma || 'React.createElement'\n        )\n      }\n\n      parameters.unshift(name)\n\n      // Types of `estree-walker` are wrong\n      this.replace(\n        create(node, {\n          type: 'CallExpression',\n          callee,\n          arguments: parameters,\n          optional: false\n        })\n      )\n    }\n  })\n\n  return tree\n}\n\n/**\n * @param {JSXAttribute} node\n * @returns {Property}\n */\nfunction toProperty(node) {\n  /** @type {Expression} */\n  let value\n\n  if (node.value) {\n    if (node.value.type === 'JSXExpressionContainer') {\n      // @ts-expect-error `JSXEmptyExpression` is not allowed in props.\n      value = node.value.expression\n    }\n    // Literal or call expression.\n    else {\n      // @ts-expect-error: JSX{Element,Fragment} are already compiled to\n      // `CallExpression`.\n      value = node.value\n      // @ts-expect-error Remove `raw` so we don’t get character references in\n      // strings.\n      delete value.raw\n    }\n  }\n  // Boolean prop.\n  else {\n    value = {type: 'Literal', value: true}\n  }\n\n  return create(node, {\n    type: 'Property',\n    key: toIdentifier(node.name),\n    value,\n    kind: 'init',\n    method: false,\n    shorthand: false,\n    computed: false\n  })\n}\n\n/**\n * @param {JSXMemberExpression | JSXNamespacedName | JSXIdentifier} node\n * @returns {MemberExpression | Identifier | Literal}\n */\nfunction toIdentifier(node) {\n  /** @type {MemberExpression | Identifier | Literal} */\n  let replace\n\n  if (node.type === 'JSXMemberExpression') {\n    // `property` is always a `JSXIdentifier`, but it could be something that\n    // isn’t an ES identifier name.\n    const id = toIdentifier(node.property)\n    replace = {\n      type: 'MemberExpression',\n      object: toIdentifier(node.object),\n      property: id,\n      computed: id.type === 'Literal',\n      optional: false\n    }\n  } else if (node.type === 'JSXNamespacedName') {\n    replace = {\n      type: 'Literal',\n      value: node.namespace.name + ':' + node.name.name\n    }\n  }\n  // Must be `JSXIdentifier`.\n  else {\n    replace = isIdentifierName(node.name)\n      ? {type: 'Identifier', name: node.name}\n      : {type: 'Literal', value: node.name}\n  }\n\n  return create(node, replace)\n}\n\n/**\n * @param {string} id\n * @returns {Identifier | Literal | MemberExpression}\n */\nfunction toMemberExpression(id) {\n  const identifiers = id.split('.')\n  let index = -1\n  /** @type {Identifier | Literal | MemberExpression | undefined} */\n  let result\n\n  while (++index < identifiers.length) {\n    /** @type {Identifier | Literal} */\n    const prop = isIdentifierName(identifiers[index])\n      ? {type: 'Identifier', name: identifiers[index]}\n      : {type: 'Literal', value: identifiers[index]}\n    result = result\n      ? {\n          type: 'MemberExpression',\n          object: result,\n          property: prop,\n          computed: Boolean(index && prop.type === 'Literal'),\n          optional: false\n        }\n      : prop\n  }\n\n  // @ts-expect-error: always a result.\n  return result\n}\n\n/**\n * @template {Node} T\n * @param {Node} from\n * @param {T} node\n * @returns {T}\n */\nfunction create(from, node) {\n  const fields = ['start', 'end', 'loc', 'range', 'comments']\n  let index = -1\n\n  while (++index < fields.length) {\n    const field = fields[index]\n    if (field in from) {\n      // @ts-expect-error: indexable.\n      node[field] = from[field]\n    }\n  }\n\n  return node\n}\n", "/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @param {Node} from\n *   Node to take from.\n * @param {Node} to\n *   Node to add to.\n * @returns {void}\n *   Nothing.\n */\nexport function create(from, to) {\n  /** @type {Array<keyof Node>} */\n  // @ts-expect-error: `start`, `end`, `comments` are custom Acorn fields.\n  const fields = ['start', 'end', 'loc', 'range', 'comments']\n  let index = -1\n\n  while (++index < fields.length) {\n    const field = fields[index]\n\n    if (field in from) {\n      // @ts-expect-error: assume they’re settable.\n      to[field] = from[field]\n    }\n  }\n}\n", "/**\n * @typedef {import('estree-jsx').AssignmentProperty} AssignmentProperty\n * @typedef {import('estree-jsx').ExportSpecifier} ExportSpecifier\n * @typedef {import('estree-jsx').Expression} Expression\n * @typedef {import('estree-jsx').Identifier} Identifier\n * @typedef {import('estree-jsx').ImportDefaultSpecifier} ImportDefaultSpecifier\n * @typedef {import('estree-jsx').ImportNamespaceSpecifier} ImportNamespaceSpecifier\n * @typedef {import('estree-jsx').ImportSpecifier} ImportSpecifier\n * @typedef {import('estree-jsx').VariableDeclarator} VariableDeclarator\n */\n\nimport {create} from './estree-util-create.js'\n\n/**\n * @param {Array<ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier | ExportSpecifier>} specifiers\n * @param {Expression} init\n * @returns {Array<VariableDeclarator>}\n */\nexport function specifiersToDeclarations(specifiers, init) {\n  let index = -1\n  /** @type {Array<VariableDeclarator>} */\n  const declarations = []\n  /** @type {Array<ImportSpecifier | ImportDefaultSpecifier | ExportSpecifier>} */\n  const otherSpecifiers = []\n  // Can only be one according to JS syntax.\n  /** @type {ImportNamespaceSpecifier | undefined} */\n  let importNamespaceSpecifier\n\n  while (++index < specifiers.length) {\n    const specifier = specifiers[index]\n\n    if (specifier.type === 'ImportNamespaceSpecifier') {\n      importNamespaceSpecifier = specifier\n    } else {\n      otherSpecifiers.push(specifier)\n    }\n  }\n\n  if (importNamespaceSpecifier) {\n    /** @type {VariableDeclarator} */\n    const declarator = {\n      type: 'VariableDeclarator',\n      id: importNamespaceSpecifier.local,\n      init\n    }\n    create(importNamespaceSpecifier, declarator)\n    declarations.push(declarator)\n  }\n\n  declarations.push({\n    type: 'VariableDeclarator',\n    id: {\n      type: 'ObjectPattern',\n      properties: otherSpecifiers.map((specifier) => {\n        /** @type {Identifier} */\n        let key =\n          specifier.type === 'ImportSpecifier'\n            ? specifier.imported\n            : specifier.type === 'ExportSpecifier'\n            ? specifier.exported\n            : {type: 'Identifier', name: 'default'}\n        let value = specifier.local\n\n        // Switch them around if we’re exporting.\n        if (specifier.type === 'ExportSpecifier') {\n          value = key\n          key = specifier.local\n        }\n\n        /** @type {AssignmentProperty} */\n        const property = {\n          type: 'Property',\n          kind: 'init',\n          shorthand: key.name === value.name,\n          method: false,\n          computed: false,\n          key,\n          value\n        }\n        create(specifier, property)\n        return property\n      })\n    },\n    init: importNamespaceSpecifier\n      ? {type: 'Identifier', name: importNamespaceSpecifier.local.name}\n      : init\n  })\n\n  return declarations\n}\n", "/**\n * @typedef {import('estree-jsx').Identifier} Identifier\n * @typedef {import('estree-jsx').JSXIdentifier} JSXIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JSXMemberExpression\n * @typedef {import('estree-jsx').Literal} Literal\n * @typedef {import('estree-jsx').MemberExpression} MemberExpression\n */\n\nimport {\n  start as esStart,\n  cont as esCont,\n  name as isIdentifierName\n} from 'estree-util-is-identifier-name'\n\nexport const toIdOrMemberExpression = toIdOrMemberExpressionFactory(\n  'Identifier',\n  'MemberExpression',\n  isIdentifierName\n)\n\nexport const toJsxIdOrMemberExpression =\n  // @ts-expect-error: fine\n  /** @type {(ids: Array<string | number>) => JSXIdentifier | JSXMemberExpression)} */\n  (\n    toIdOrMemberExpressionFactory(\n      'JSXIdentifier',\n      'JSXMemberExpression',\n      isJsxIdentifierName\n    )\n  )\n\n/**\n * @param {string} idType\n * @param {string} memberType\n * @param {(value: string) => boolean} isIdentifier\n */\nfunction toIdOrMemberExpressionFactory(idType, memberType, isIdentifier) {\n  return toIdOrMemberExpression\n  /**\n   * @param {Array<string | number>} ids\n   * @returns {Identifier | MemberExpression}\n   */\n  function toIdOrMemberExpression(ids) {\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let object\n\n    while (++index < ids.length) {\n      const name = ids[index]\n      const valid = typeof name === 'string' && isIdentifier(name)\n\n      // A value of `asd.123` could be turned into `asd['123']` in the JS form,\n      // but JSX does not have a form for it, so throw.\n      /* c8 ignore next 3 */\n      if (idType === 'JSXIdentifier' && !valid) {\n        throw new Error('Cannot turn `' + name + '` into a JSX identifier')\n      }\n\n      /** @type {Identifier | Literal} */\n      // @ts-expect-error: JSX is fine.\n      const id = valid ? {type: idType, name} : {type: 'Literal', value: name}\n      // @ts-expect-error: JSX is fine.\n      object = object\n        ? {\n            type: memberType,\n            object,\n            property: id,\n            computed: id.type === 'Literal',\n            optional: false\n          }\n        : id\n    }\n\n    // Just for types.\n    /* c8 ignore next 3 */\n    if (!object) throw new Error('Expected non-empty `ids` to be passed')\n    if (object.type === 'Literal')\n      throw new Error('Expected identifier as left-most value')\n\n    return object\n  }\n}\n\n/**\n * Checks if the given string is a valid JSX identifier name.\n * @param {string} name\n */\nfunction isJsxIdentifierName(name) {\n  let index = -1\n\n  while (++index < name.length) {\n    // We currently receive valid input, but this catches bugs and is needed\n    // when externalized.\n    /* c8 ignore next */\n    if (!(index ? jsxCont : esStart)(name.charCodeAt(index))) return false\n  }\n\n  // `false` if `name` is empty.\n  return index > 0\n}\n\n/**\n * Checks if the given character code can continue a JSX identifier.\n * @param {number} code\n */\nfunction jsxCont(code) {\n  return code === 45 /* `-` */ || esCont(code)\n}\n", "/**\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {import('estree-util-build-jsx').BuildJsxOptions} BuildJsxOptions\n */\n\n/**\n * @typedef ExtraOptions\n *   Configuration for internal plugin `recma-jsx-build`.\n * @property {'function-body' | 'program' | null | undefined} [outputFormat='program']\n *   Whether to keep the import of the automatic runtime or get it from\n *   `arguments[0]` instead.\n *\n * @typedef {BuildJsxOptions & ExtraOptions} RecmaJsxBuildOptions\n */\n\nimport {buildJsx} from 'estree-util-build-jsx'\nimport {specifiersToDeclarations} from '../util/estree-util-specifiers-to-declarations.js'\nimport {toIdOrMemberExpression} from '../util/estree-util-to-id-or-member-expression.js'\n\n/**\n * A plugin to build JSX into function calls.\n * `estree-util-build-jsx` does all the work for us!\n *\n * @type {import('unified').Plugin<[RecmaJsxBuildOptions | null | undefined] | [], Program>}\n */\nexport function recmaJsxBuild(options) {\n  // Always given inside `@mdx-js/mdx`\n  /* c8 ignore next */\n  const {development, outputFormat} = options || {}\n\n  return (tree, file) => {\n    buildJsx(tree, {development, filePath: file.history[0]})\n\n    // When compiling to a function body, replace the import that was just\n    // generated, and get `jsx`, `jsxs`, and `Fragment` from `arguments[0]`\n    // instead.\n    if (\n      outputFormat === 'function-body' &&\n      tree.body[0] &&\n      tree.body[0].type === 'ImportDeclaration' &&\n      typeof tree.body[0].source.value === 'string' &&\n      /\\/jsx-(dev-)?runtime$/.test(tree.body[0].source.value)\n    ) {\n      tree.body[0] = {\n        type: 'VariableDeclaration',\n        kind: 'const',\n        declarations: specifiersToDeclarations(\n          tree.body[0].specifiers,\n          toIdOrMemberExpression(['arguments', 0])\n        )\n      }\n    }\n  }\n}\n", "/**\n * @typedef { import('estree').Node} Node\n * @typedef {{\n *   skip: () => void;\n *   remove: () => void;\n *   replace: (node: Node) => void;\n * }} WalkerContext\n */\n\nexport class WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t * @param {Node} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent && prop) {\n\t\t\tif (index != null) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop])[index] = node;\n\t\t\t} else {\n\t\t\t\t/** @type {Node} */ (parent[prop]) = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent && prop) {\n\t\t\tif (index !== null && index !== undefined) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop]).splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => void} SyncHandler\n */\n\nexport class SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} [enter]\n\t * @param {SyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Node | null}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!this.visit(item, node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n", "import { SyncWalker } from './sync.js';\nimport { AsyncWalker } from './async.js';\n\n/**\n * @typedef {import('estree').Node} Node\n * @typedef {import('./sync.js').SyncHandler} SyncHandler\n * @typedef {import('./async.js').AsyncHandler} AsyncHandler\n */\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {Node | null}\n */\nexport function walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<Node | null>}\n */\nexport async function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n", "/** @typedef { import('estree').Node} Node */\n/** @typedef {Node | {\n *   type: 'PropertyDefinition';\n *   computed: boolean;\n *   value: Node\n * }} NodeWithPropertyDefinition */\n\n/**\n *\n * @param {NodeWithPropertyDefinition} node\n * @param {NodeWithPropertyDefinition} parent\n * @returns {boolean}\n */\nexport default function is_reference (node, parent) {\n\tif (node.type === 'MemberExpression') {\n\t\treturn !node.computed && is_reference(node.object, node);\n\t}\n\n\tif (node.type === 'Identifier') {\n\t\tif (!parent) return true;\n\n\t\tswitch (parent.type) {\n\t\t\t// disregard `bar` in `foo.bar`\n\t\t\tcase 'MemberExpression': return parent.computed || node === parent.object;\n\n\t\t\t// disregard the `foo` in `class {foo(){}}` but keep it in `class {[foo](){}}`\n\t\t\tcase 'MethodDefinition': return parent.computed;\n\n\t\t\t// disregard the `foo` in `class {foo=bar}` but keep it in `class {[foo]=bar}` and `class {bar=foo}`\n\t\t\tcase 'PropertyDefinition': return parent.computed || node === parent.value;\n\n\t\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\t\tcase 'Property': return parent.computed || node === parent.value;\n\n\t\t\t// disregard the `bar` in `export { foo as bar }` or\n\t\t\t// the foo in `import { foo as bar }`\n\t\t\tcase 'ExportSpecifier':\n\t\t\tcase 'ImportSpecifier': return node === parent.local;\n\n\t\t\t// disregard the `foo` in `foo: while (...) { ... break foo; ... continue foo;}`\n\t\t\tcase 'LabeledStatement':\n\t\t\tcase 'BreakStatement':\n\t\t\tcase 'ContinueStatement': return false;\n\t\t\tdefault: return true;\n\t\t}\n\t}\n\n\treturn false;\n}\n", "import { walk } from 'estree-walker';\nimport is_reference from 'is-reference';\n\n/** @param {import('estree').Node} expression */\nexport function analyze(expression) {\n\t/** @typedef {import('estree').Node} Node */\n\n\t/** @type {WeakMap<Node, Scope>} */\n\tconst map = new WeakMap();\n\n\t/** @type {Map<string, Node>} */\n\tconst globals = new Map();\n\n\tconst scope = new Scope(null, false);\n\n\t/** @type {[Scope, import('estree').Identifier][]} */\n\tconst references = [];\n\t/** @type {Scope} */\n\tlet current_scope = scope;\n\n\twalk(expression, {\n\t\tenter(node, parent) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'Identifier':\n\t\t\t\t\tif (parent && is_reference(node, parent)) {\n\t\t\t\t\t\treferences.push([current_scope, node]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ImportDeclaration':\n\t\t\t\t\tnode.specifiers.forEach((specifier) => {\n\t\t\t\t\t\tcurrent_scope.declarations.set(specifier.local.name, specifier);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'FunctionExpression':\n\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\tcase 'ArrowFunctionExpression':\n\t\t\t\t\tif (node.type === 'FunctionDeclaration') {\n\t\t\t\t\t\tif (node.id) {\n\t\t\t\t\t\t\tcurrent_scope.declarations.set(node.id.name, node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, false));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, false));\n\n\t\t\t\t\t\tif (node.type === 'FunctionExpression' && node.id) {\n\t\t\t\t\t\t\tcurrent_scope.declarations.set(node.id.name, node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.params.forEach(param => {\n\t\t\t\t\t\textract_names(param).forEach(name => {\n\t\t\t\t\t\t\tcurrent_scope.declarations.set(name, node);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ForStatement':\n\t\t\t\tcase 'ForInStatement':\n\t\t\t\tcase 'ForOfStatement':\n\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, true));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, true));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ClassDeclaration':\n\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\tcurrent_scope.add_declaration(node);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'CatchClause':\n\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, true));\n\n\t\t\t\t\tif (node.param) {\n\t\t\t\t\t\textract_names(node.param).forEach(name => {\n\t\t\t\t\t\t\tif (node.param) {\n\t\t\t\t\t\t\t\tcurrent_scope.declarations.set(name, node.param);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tleave(node) {\n\t\t\tif (map.has(node) && current_scope !== null && current_scope.parent) {\n\t\t\t\tcurrent_scope = current_scope.parent;\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (let i = references.length - 1; i >= 0; --i) {\n\t\tconst [scope, reference] = references[i];\n\n\t\tif (!scope.references.has(reference.name)) {\n\t\t\tadd_reference(scope, reference.name);\n\t\t}\n\t\tif (!scope.find_owner(reference.name)) {\n\t\t\tglobals.set(reference.name, reference);\n\t\t}\n\t}\n\n\treturn { map, scope, globals };\n}\n\n/**\n * @param {Scope} scope\n * @param {string} name\n */\nfunction add_reference(scope, name) {\n\tscope.references.add(name);\n\tif (scope.parent) add_reference(scope.parent, name);\n}\n\nexport class Scope {\n\t/**\n\t * @param {Scope | null} parent \n\t * @param {boolean} block \n\t */\n\tconstructor(parent, block) {\n\t\t/** @type {Scope | null} */\n\t\tthis.parent = parent;\n\n\t\t/** @type {boolean} */\n\t\tthis.block = block;\n\n\t\t/** @type {Map<string, import('estree').Node>} */\n\t\tthis.declarations = new Map();\n\n\t\t/** @type {Set<string>} */\n\t\tthis.initialised_declarations = new Set();\n\n\t\t/** @type {Set<string>} */\n\t\tthis.references = new Set();\n\t}\n\n\t/**\n\t * @param {import('estree').VariableDeclaration | import('estree').ClassDeclaration} node\n\t */\n\tadd_declaration(node) {\n\t\tif (node.type === 'VariableDeclaration') {\n\t\t\tif (node.kind === 'var' && this.block && this.parent) {\n\t\t\t\tthis.parent.add_declaration(node);\n\t\t\t} else {\n\t\t\t\t/** @param {import('estree').VariableDeclarator} declarator */\n\t\t\t\tconst handle_declarator = (declarator) => {\n\t\t\t\t\textract_names(declarator.id).forEach(name => {\n\t\t\t\t\t\tthis.declarations.set(name, node);\n\t\t\t\t\t\tif (declarator.init) this.initialised_declarations.add(name);\n\t\t\t\t\t});;\n\t\t\t\t}\n\n\t\t\t\tnode.declarations.forEach(handle_declarator);\n\t\t\t}\n\t\t} else if (node.id) {\n\t\t\tthis.declarations.set(node.id.name, node);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @returns {Scope | null}\n\t */\n\tfind_owner(name) {\n\t\tif (this.declarations.has(name)) return this;\n\t\treturn this.parent && this.parent.find_owner(name);\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\thas(name) {\n\t\treturn (\n\t\t\tthis.declarations.has(name) || (!!this.parent && this.parent.has(name))\n\t\t);\n\t}\n}\n\n/**\n * @param {import('estree').Node} param\n * @returns {string[]}\n */\nexport function extract_names(param) {\n\treturn extract_identifiers(param).map(node => node.name);\n}\n\n/**\n * @param {import('estree').Node} param\n * @param {import('estree').Identifier[]} nodes\n * @returns {import('estree').Identifier[]}\n */\nexport function extract_identifiers(param, nodes = []) {\n\tswitch (param.type) {\n\t\tcase 'Identifier':\n\t\t\tnodes.push(param);\n\t\t\tbreak;\n\n\t\tcase 'MemberExpression':\n\t\t\tlet object = param;\n\t\t\twhile (object.type === 'MemberExpression') {\n\t\t\t\tobject = /** @type {any} */ (object.object);\n\t\t\t}\n\t\t\tnodes.push(/** @type {any} */ (object));\n\t\t\tbreak;\n\n\t\tcase 'ObjectPattern':\n\t\t\t/** @param {import('estree').Property | import('estree').RestElement} prop */\n\t\t\tconst handle_prop = (prop) => {\n\t\t\t\tif (prop.type === 'RestElement') {\n\t\t\t\t\textract_identifiers(prop.argument, nodes);\n\t\t\t\t} else {\n\t\t\t\t\textract_identifiers(prop.value, nodes);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tparam.properties.forEach(handle_prop);\n\t\t\tbreak;\n\n\t\tcase 'ArrayPattern':\n\t\t\t/** @param {import('estree').Node} element */\n\t\t\tconst handle_element = (element) => {\n\t\t\t\tif (element) extract_identifiers(element, nodes);\n\t\t\t};\n\n\t\t\tparam.elements.forEach((element) => {\n\t\t\t\tif (element) {\n\t\t\t\t\thandle_element(element)\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase 'RestElement':\n\t\t\textract_identifiers(param.argument, nodes);\n\t\t\tbreak;\n\n\t\tcase 'AssignmentPattern':\n\t\t\textract_identifiers(param.left, nodes);\n\t\t\tbreak;\n\t}\n\n\treturn nodes;\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "/**\n * @typedef { import('estree').Node} Node\n * @typedef {{\n *   skip: () => void;\n *   remove: () => void;\n *   replace: (node: Node) => void;\n * }} WalkerContext\n */\n\nexport class WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t * @param {Node} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent && prop) {\n\t\t\tif (index != null) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop])[index] = node;\n\t\t\t} else {\n\t\t\t\t/** @type {Node} */ (parent[prop]) = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent && prop) {\n\t\t\tif (index !== null && index !== undefined) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop]).splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => void} SyncHandler\n */\n\nexport class SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} [enter]\n\t * @param {SyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Node | null}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!this.visit(item, node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n", "import { SyncWalker } from './sync.js';\nimport { AsyncWalker } from './async.js';\n\n/**\n * @typedef {import('estree').Node} Node\n * @typedef {import('./sync.js').SyncHandler} SyncHandler\n * @typedef {import('./async.js').AsyncHandler} AsyncHandler\n */\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {Node | null}\n */\nexport function walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<Node | null>}\n */\nexport async function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n", "/**\n * @typedef {import('estree-jsx').Declaration} Declaration\n * @typedef {import('estree-jsx').Expression} Expression\n */\n\n/**\n * Turn a declaration into an expression.\n *\n * Doesn’t work for variable declarations, but that’s fine for our use case\n * because currently we’re using this utility for export default declarations,\n * which can’t contain variable declarations.\n *\n * @param {Declaration} declaration\n *   Declaration.\n * @returns {Expression}\n *   Expression.\n */\nexport function declarationToExpression(declaration) {\n  if (declaration.type === 'FunctionDeclaration') {\n    return {...declaration, type: 'FunctionExpression'}\n  }\n\n  if (declaration.type === 'ClassDeclaration') {\n    return {...declaration, type: 'ClassExpression'}\n    /* Internal utility so the next shouldn’t happen or a maintainer is making a\n     * mistake. */\n    /* c8 ignore next 4 */\n  }\n\n  // Probably `VariableDeclaration`.\n  throw new Error('Cannot turn `' + declaration.type + '` into an expression')\n}\n", "/**\n * @typedef {import('estree-jsx').Node} Node\n * @typedef {import('estree-jsx').Declaration} Declaration\n */\n\n/**\n * Check if `node` is a declaration.\n *\n * @param {Node} node\n *   Node to check.\n * @returns {node is Declaration}\n *   Whether `node` is a declaration.\n */\nexport function isDeclaration(node) {\n  return Boolean(\n    node.type === 'FunctionDeclaration' ||\n      node.type === 'ClassDeclaration' ||\n      node.type === 'VariableDeclaration'\n  )\n}\n", "/**\n * @typedef {import('estree-jsx').Directive} Directive\n * @typedef {import('estree-jsx').ExportAllDeclaration} ExportAllDeclaration\n * @typedef {import('estree-jsx').ExportDefaultDeclaration} ExportDefaultDeclaration\n * @typedef {import('estree-jsx').ExportNamedDeclaration} ExportNamedDeclaration\n * @typedef {import('estree-jsx').ExportSpecifier} ExportSpecifier\n * @typedef {import('estree-jsx').Expression} Expression\n * @typedef {import('estree-jsx').FunctionDeclaration} FunctionDeclaration\n * @typedef {import('estree-jsx').ImportDeclaration} ImportDeclaration\n * @typedef {import('estree-jsx').ImportDefaultSpecifier} ImportDefaultSpecifier\n * @typedef {import('estree-jsx').ImportExpression} ImportExpression\n * @typedef {import('estree-jsx').ImportSpecifier} ImportSpecifier\n * @typedef {import('estree-jsx').Literal} Literal\n * @typedef {import('estree-jsx').JSXElement} JSXElement\n * @typedef {import('estree-jsx').ModuleDeclaration} ModuleDeclaration\n * @typedef {import('estree-jsx').Node} Node\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {import('estree-jsx').Property} Property\n * @typedef {import('estree-jsx').SimpleLiteral} SimpleLiteral\n * @typedef {import('estree-jsx').SpreadElement} SpreadElement\n * @typedef {import('estree-jsx').Statement} Statement\n * @typedef {import('estree-jsx').VariableDeclarator} VariableDeclarator\n */\n\n/**\n * @typedef RecmaDocumentOptions\n *   Configuration for internal plugin `recma-document`.\n * @property {'function-body' | 'program' | null | undefined} [outputFormat='program']\n *   Whether to use either `import` and `export` statements to get the runtime\n *   (and optionally provider) and export the content, or get values from\n *   `arguments` and return things.\n * @property {boolean | null | undefined} [useDynamicImport=false]\n *   Whether to keep `import` (and `export … from`) statements or compile them\n *   to dynamic `import()` instead.\n * @property {string | null | undefined} [baseUrl]\n *   Resolve `import`s (and `export … from`, and `import.meta.url`) relative to\n *   this URL.\n * @property {string | null | undefined} [pragma='React.createElement']\n *   Pragma for JSX (used in classic runtime).\n * @property {string | null | undefined} [pragmaFrag='React.Fragment']\n *   Pragma for JSX fragments (used in classic runtime).\n * @property {string | null | undefined} [pragmaImportSource='react']\n *   Where to import the identifier of `pragma` from (used in classic runtime).\n * @property {string | null | undefined} [jsxImportSource='react']\n *   Place to import automatic JSX runtimes from (used in automatic runtime).\n * @property {'automatic' | 'classic' | null | undefined} [jsxRuntime='automatic']\n *   JSX runtime to use.\n */\n\nimport {analyze} from 'periscopic'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {walk} from 'estree-walker'\nimport {create} from '../util/estree-util-create.js'\nimport {specifiersToDeclarations} from '../util/estree-util-specifiers-to-declarations.js'\nimport {declarationToExpression} from '../util/estree-util-declaration-to-expression.js'\nimport {isDeclaration} from '../util/estree-util-is-declaration.js'\n\n/**\n * A plugin to wrap the estree in `MDXContent`.\n *\n * @type {import('unified').Plugin<[RecmaDocumentOptions | null | undefined] | [], Program>}\n */\nexport function recmaDocument(options) {\n  // Always given inside `@mdx-js/mdx`\n  /* c8 ignore next */\n  const options_ = options || {}\n  const baseUrl = options_.baseUrl || undefined\n  const useDynamicImport = options_.useDynamicImport || undefined\n  const outputFormat = options_.outputFormat || 'program'\n  const pragma =\n    options_.pragma === undefined ? 'React.createElement' : options_.pragma\n  const pragmaFrag =\n    options_.pragmaFrag === undefined ? 'React.Fragment' : options_.pragmaFrag\n  const pragmaImportSource = options_.pragmaImportSource || 'react'\n  const jsxImportSource = options_.jsxImportSource || 'react'\n  const jsxRuntime = options_.jsxRuntime || 'automatic'\n\n  return (tree, file) => {\n    /** @type {Array<[string, string] | string>} */\n    const exportedIdentifiers = []\n    /** @type {Array<Directive | ModuleDeclaration | Statement>} */\n    const replacement = []\n    /** @type {Array<string>} */\n    const pragmas = []\n    let exportAllCount = 0\n    /** @type {ExportDefaultDeclaration | ExportSpecifier | undefined} */\n    let layout\n    /** @type {boolean | undefined} */\n    let content\n    /** @type {Node} */\n    let child\n\n    // Patch missing comments, which types say could occur.\n    /* c8 ignore next */\n    if (!tree.comments) tree.comments = []\n\n    if (jsxRuntime) {\n      pragmas.push('@jsxRuntime ' + jsxRuntime)\n    }\n\n    if (jsxRuntime === 'automatic' && jsxImportSource) {\n      pragmas.push('@jsxImportSource ' + jsxImportSource)\n    }\n\n    if (jsxRuntime === 'classic' && pragma) {\n      pragmas.push('@jsx ' + pragma)\n    }\n\n    if (jsxRuntime === 'classic' && pragmaFrag) {\n      pragmas.push('@jsxFrag ' + pragmaFrag)\n    }\n\n    if (pragmas.length > 0) {\n      tree.comments.unshift({type: 'Block', value: pragmas.join(' ')})\n    }\n\n    if (jsxRuntime === 'classic' && pragmaImportSource) {\n      if (!pragma) {\n        throw new Error(\n          'Missing `pragma` in classic runtime with `pragmaImportSource`'\n        )\n      }\n\n      handleEsm({\n        type: 'ImportDeclaration',\n        specifiers: [\n          {\n            type: 'ImportDefaultSpecifier',\n            local: {type: 'Identifier', name: pragma.split('.')[0]}\n          }\n        ],\n        source: {type: 'Literal', value: pragmaImportSource}\n      })\n    }\n\n    // Find the `export default`, the JSX expression, and leave the rest\n    // (import/exports) as they are.\n    for (child of tree.body) {\n      // ```js\n      // export default props => <>{props.children}</>\n      // ```\n      //\n      // Treat it as an inline layout declaration.\n      if (child.type === 'ExportDefaultDeclaration') {\n        if (layout) {\n          file.fail(\n            'Cannot specify multiple layouts (previous: ' +\n              stringifyPosition(positionFromEstree(layout)) +\n              ')',\n            positionFromEstree(child),\n            'recma-document:duplicate-layout'\n          )\n        }\n\n        layout = child\n        replacement.push({\n          type: 'VariableDeclaration',\n          kind: 'const',\n          declarations: [\n            {\n              type: 'VariableDeclarator',\n              id: {type: 'Identifier', name: 'MDXLayout'},\n              init: isDeclaration(child.declaration)\n                ? declarationToExpression(child.declaration)\n                : child.declaration\n            }\n          ]\n        })\n      }\n      // ```js\n      // export {a, b as c} from 'd'\n      // ```\n      else if (child.type === 'ExportNamedDeclaration' && child.source) {\n        const source = /** @type {SimpleLiteral} */ (child.source)\n\n        // Remove `default` or `as default`, but not `default as`, specifier.\n        child.specifiers = child.specifiers.filter((specifier) => {\n          if (specifier.exported.name === 'default') {\n            if (layout) {\n              file.fail(\n                'Cannot specify multiple layouts (previous: ' +\n                  stringifyPosition(positionFromEstree(layout)) +\n                  ')',\n                positionFromEstree(child),\n                'recma-document:duplicate-layout'\n              )\n            }\n\n            layout = specifier\n\n            // Make it just an import: `import MDXLayout from '…'`.\n            /** @type {Array<ImportDefaultSpecifier | ImportSpecifier>} */\n            const specifiers = []\n\n            // Default as default / something else as default.\n            if (specifier.local.name === 'default') {\n              specifiers.push({\n                type: 'ImportDefaultSpecifier',\n                local: {type: 'Identifier', name: 'MDXLayout'}\n              })\n            } else {\n              /** @type {ImportSpecifier} */\n              const importSpecifier = {\n                type: 'ImportSpecifier',\n                imported: specifier.local,\n                local: {type: 'Identifier', name: 'MDXLayout'}\n              }\n              create(specifier.local, importSpecifier)\n              specifiers.push(importSpecifier)\n            }\n\n            /** @type {Literal} */\n            const from = {type: 'Literal', value: source.value}\n            create(source, from)\n\n            /** @type {ImportDeclaration} */\n            const declaration = {\n              type: 'ImportDeclaration',\n              specifiers,\n              source: from\n            }\n            create(specifier, declaration)\n            handleEsm(declaration)\n\n            return false\n          }\n\n          return true\n        })\n\n        // If there are other things imported, keep it.\n        if (child.specifiers.length > 0) {\n          handleExport(child)\n        }\n      }\n      // ```js\n      // export {a, b as c}\n      // export * from 'a'\n      // ```\n      else if (\n        child.type === 'ExportNamedDeclaration' ||\n        child.type === 'ExportAllDeclaration'\n      ) {\n        handleExport(child)\n      } else if (child.type === 'ImportDeclaration') {\n        handleEsm(child)\n      } else if (\n        child.type === 'ExpressionStatement' &&\n        // @ts-expect-error types are wrong: `JSXFragment` is an `Expression`.\n        (child.expression.type === 'JSXFragment' ||\n          child.expression.type === 'JSXElement')\n      ) {\n        content = true\n        replacement.push(...createMdxContent(child.expression, Boolean(layout)))\n        // The following catch-all branch is because plugins might’ve added\n        // other things.\n        // Normally, we only have import/export/jsx, but just add whatever’s\n        // there.\n        /* c8 ignore next 3 */\n      } else {\n        replacement.push(child)\n      }\n    }\n\n    // If there was no JSX content at all, add an empty function.\n    if (!content) {\n      replacement.push(...createMdxContent(undefined, Boolean(layout)))\n    }\n\n    exportedIdentifiers.push(['MDXContent', 'default'])\n\n    if (outputFormat === 'function-body') {\n      replacement.push({\n        type: 'ReturnStatement',\n        argument: {\n          type: 'ObjectExpression',\n          properties: [\n            ...Array.from({length: exportAllCount}).map(\n              /**\n               * @param {undefined} _\n               * @param {number} index\n               * @returns {SpreadElement}\n               */\n              (_, index) => ({\n                type: 'SpreadElement',\n                argument: {type: 'Identifier', name: '_exportAll' + (index + 1)}\n              })\n            ),\n            ...exportedIdentifiers.map((d) => {\n              /** @type {Property} */\n              const prop = {\n                type: 'Property',\n                kind: 'init',\n                method: false,\n                computed: false,\n                shorthand: typeof d === 'string',\n                key: {\n                  type: 'Identifier',\n                  name: typeof d === 'string' ? d : d[1]\n                },\n                value: {\n                  type: 'Identifier',\n                  name: typeof d === 'string' ? d : d[0]\n                }\n              }\n\n              return prop\n            })\n          ]\n        }\n      })\n    } else {\n      replacement.push({\n        type: 'ExportDefaultDeclaration',\n        declaration: {type: 'Identifier', name: 'MDXContent'}\n      })\n    }\n\n    tree.body = replacement\n\n    if (baseUrl) {\n      walk(tree, {\n        enter(node) {\n          if (\n            node.type === 'MemberExpression' &&\n            'object' in node &&\n            node.object.type === 'MetaProperty' &&\n            node.property.type === 'Identifier' &&\n            node.object.meta.name === 'import' &&\n            node.object.property.name === 'meta' &&\n            node.property.name === 'url'\n          ) {\n            /** @type {SimpleLiteral} */\n            const replacement = {type: 'Literal', value: baseUrl}\n            this.replace(replacement)\n          }\n        }\n      })\n    }\n\n    /**\n     * @param {ExportAllDeclaration | ExportNamedDeclaration} node\n     * @returns {void}\n     */\n    function handleExport(node) {\n      if (node.type === 'ExportNamedDeclaration') {\n        // ```js\n        // export function a() {}\n        // export class A {}\n        // export var a = 1\n        // ```\n        if (node.declaration) {\n          exportedIdentifiers.push(\n            ...analyze(node.declaration).scope.declarations.keys()\n          )\n        }\n\n        // ```js\n        // export {a, b as c}\n        // export {a, b as c} from 'd'\n        // ```\n        for (child of node.specifiers) {\n          exportedIdentifiers.push(child.exported.name)\n        }\n      }\n\n      handleEsm(node)\n    }\n\n    /**\n     * @param {ExportAllDeclaration | ExportNamedDeclaration | ImportDeclaration} node\n     * @returns {void}\n     */\n    function handleEsm(node) {\n      // Rewrite the source of the `import` / `export … from`.\n      // See: <https://html.spec.whatwg.org/multipage/webappapis.html#resolve-a-module-specifier>\n      if (baseUrl && node.source) {\n        let value = String(node.source.value)\n\n        try {\n          // A full valid URL.\n          value = String(new URL(value))\n        } catch {\n          // Relative: `/example.js`, `./example.js`, and `../example.js`.\n          if (/^\\.{0,2}\\//.test(value)) {\n            value = String(new URL(value, baseUrl))\n          }\n          // Otherwise, it’s a bare specifiers.\n          // For example `some-package`, `@some-package`, and\n          // `some-package/path`.\n          // These are supported in Node and browsers plan to support them\n          // with import maps (<https://github.com/WICG/import-maps>).\n        }\n\n        /** @type {Literal} */\n        const literal = {type: 'Literal', value}\n        create(node.source, literal)\n        node.source = literal\n      }\n\n      /** @type {ModuleDeclaration | Statement | undefined} */\n      let replace\n      /** @type {Expression} */\n      let init\n\n      if (outputFormat === 'function-body') {\n        if (\n          // Always have a source:\n          node.type === 'ImportDeclaration' ||\n          node.type === 'ExportAllDeclaration' ||\n          // Source optional:\n          (node.type === 'ExportNamedDeclaration' && node.source)\n        ) {\n          if (!useDynamicImport) {\n            file.fail(\n              'Cannot use `import` or `export … from` in `evaluate` (outputting a function body) by default: please set `useDynamicImport: true` (and probably specify a `baseUrl`)',\n              positionFromEstree(node),\n              'recma-document:invalid-esm-statement'\n            )\n          }\n\n          // Just for types.\n          /* c8 ignore next 3 */\n          if (!node.source) {\n            throw new Error('Expected `node.source` to be defined')\n          }\n\n          // ```\n          // import 'a'\n          // //=> await import('a')\n          // import a from 'b'\n          // //=> const {default: a} = await import('b')\n          // export {a, b as c} from 'd'\n          // //=> const {a, c: b} = await import('d')\n          // export * from 'a'\n          // //=> const _exportAll0 = await import('a')\n          // ```\n          /** @type {ImportExpression} */\n          const argument = {type: 'ImportExpression', source: node.source}\n          create(node, argument)\n          init = {type: 'AwaitExpression', argument}\n\n          if (\n            (node.type === 'ImportDeclaration' ||\n              node.type === 'ExportNamedDeclaration') &&\n            node.specifiers.length === 0\n          ) {\n            replace = {type: 'ExpressionStatement', expression: init}\n          } else {\n            replace = {\n              type: 'VariableDeclaration',\n              kind: 'const',\n              declarations:\n                node.type === 'ExportAllDeclaration'\n                  ? [\n                      {\n                        type: 'VariableDeclarator',\n                        id: {\n                          type: 'Identifier',\n                          name: '_exportAll' + ++exportAllCount\n                        },\n                        init\n                      }\n                    ]\n                  : specifiersToDeclarations(node.specifiers, init)\n            }\n          }\n        } else if (node.declaration) {\n          replace = node.declaration\n        } else {\n          /** @type {Array<VariableDeclarator>} */\n          const declarators = node.specifiers\n            .filter(\n              (specifier) => specifier.local.name !== specifier.exported.name\n            )\n            .map((specifier) => ({\n              type: 'VariableDeclarator',\n              id: specifier.exported,\n              init: specifier.local\n            }))\n\n          if (declarators.length > 0) {\n            replace = {\n              type: 'VariableDeclaration',\n              kind: 'const',\n              declarations: declarators\n            }\n          }\n        }\n      } else {\n        replace = node\n      }\n\n      if (replace) {\n        replacement.push(replace)\n      }\n    }\n  }\n\n  /**\n   * @param {Expression | undefined} [content]\n   * @param {boolean | undefined} [hasInternalLayout]\n   * @returns {Array<FunctionDeclaration>}\n   */\n  function createMdxContent(content, hasInternalLayout) {\n    /** @type {JSXElement} */\n    const element = {\n      type: 'JSXElement',\n      openingElement: {\n        type: 'JSXOpeningElement',\n        name: {type: 'JSXIdentifier', name: 'MDXLayout'},\n        attributes: [\n          {\n            type: 'JSXSpreadAttribute',\n            argument: {type: 'Identifier', name: 'props'}\n          }\n        ],\n        selfClosing: false\n      },\n      closingElement: {\n        type: 'JSXClosingElement',\n        name: {type: 'JSXIdentifier', name: 'MDXLayout'}\n      },\n      children: [\n        {\n          type: 'JSXElement',\n          openingElement: {\n            type: 'JSXOpeningElement',\n            name: {type: 'JSXIdentifier', name: '_createMdxContent'},\n            attributes: [\n              {\n                type: 'JSXSpreadAttribute',\n                argument: {type: 'Identifier', name: 'props'}\n              }\n            ],\n            selfClosing: true\n          },\n          closingElement: null,\n          children: []\n        }\n      ]\n    }\n\n    let result = /** @type {Expression} */ (element)\n\n    if (!hasInternalLayout) {\n      result = {\n        type: 'ConditionalExpression',\n        test: {type: 'Identifier', name: 'MDXLayout'},\n        consequent: result,\n        alternate: {\n          type: 'CallExpression',\n          callee: {type: 'Identifier', name: '_createMdxContent'},\n          arguments: [{type: 'Identifier', name: 'props'}],\n          optional: false\n        }\n      }\n    }\n\n    let argument = content || {type: 'Literal', value: null}\n\n    // Unwrap a fragment of a single element.\n    if (\n      argument &&\n      // @ts-expect-error: fine.\n      argument.type === 'JSXFragment' &&\n      // @ts-expect-error: fine.\n      argument.children.length === 1 &&\n      // @ts-expect-error: fine.\n      argument.children[0].type === 'JSXElement'\n    ) {\n      // @ts-expect-error: fine.\n      argument = argument.children[0]\n    }\n\n    return [\n      {\n        type: 'FunctionDeclaration',\n        id: {type: 'Identifier', name: '_createMdxContent'},\n        params: [{type: 'Identifier', name: 'props'}],\n        body: {\n          type: 'BlockStatement',\n          body: [{type: 'ReturnStatement', argument}]\n        }\n      },\n      {\n        type: 'FunctionDeclaration',\n        id: {type: 'Identifier', name: 'MDXContent'},\n        params: [\n          {\n            type: 'AssignmentPattern',\n            left: {type: 'Identifier', name: 'props'},\n            right: {type: 'ObjectExpression', properties: []}\n          }\n        ],\n        body: {\n          type: 'BlockStatement',\n          body: [{type: 'ReturnStatement', argument: result}]\n        }\n      }\n    ]\n  }\n}\n", "/**\n * @typedef {import('estree-jsx').Expression} Expression\n */\n\n/**\n * @param {Array<Expression>} expressions\n */\nexport function toBinaryAddition(expressions) {\n  let index = -1\n  /** @type {Expression | undefined} */\n  let left\n\n  while (++index < expressions.length) {\n    const right = expressions[index]\n    left = left ? {type: 'BinaryExpression', left, operator: '+', right} : right\n  }\n\n  // Just for types.\n  /* c8 ignore next */\n  if (!left) throw new Error('Expected non-empty `expressions` to be passed')\n\n  return left\n}\n", "/**\n * @typedef {import('estree-jsx').Expression} Expression\n * @typedef {import('estree-jsx').Function} EstreeFunction\n * @typedef {import('estree-jsx').Identifier} Identifier\n * @typedef {import('estree-jsx').ImportSpecifier} ImportSpecifier\n * @typedef {import('estree-jsx').JSXElement} JSXElement\n * @typedef {import('estree-jsx').ModuleDeclaration} ModuleDeclaration\n * @typedef {import('estree-jsx').Node} Node\n * @typedef {import('estree-jsx').ObjectPattern} ObjectPattern\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {import('estree-jsx').Property} Property\n * @typedef {import('estree-jsx').Statement} Statement\n * @typedef {import('estree-jsx').VariableDeclarator} VariableDeclarator\n *\n * @typedef {import('periscopic').Scope & {node: Node}} Scope\n */\n\n/**\n * @typedef RecmaJsxRewriteOptions\n *   Configuration for internal plugin `recma-jsx-rewrite`.\n * @property {'function-body' | 'program' | null | undefined} [outputFormat='program']\n *   Whether to use an import statement or `arguments[0]` to get the provider.\n * @property {string | null | undefined} [providerImportSource]\n *   Place to import a provider from.\n * @property {boolean | null | undefined} [development=false]\n *   Whether to add extra info to error messages in generated code.\n *\n *   This also results in the development automatic JSX runtime\n *   (`/jsx-dev-runtime`, `jsxDEV`) being used, which passes positional info to\n *   nodes.\n *   The default can be set to `true` in Node.js through environment variables:\n *   set `NODE_ENV=development`.\n *\n * @typedef StackEntry\n * @property {Array<string>} objects\n * @property {Array<string>} components\n * @property {Array<string>} tags\n * @property {Record<string, {node: JSXElement, component: boolean}>} references\n * @property {Map<string|number, string>} idToInvalidComponentName\n * @property {EstreeFunction} node\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {walk} from 'estree-walker'\nimport {analyze} from 'periscopic'\nimport {specifiersToDeclarations} from '../util/estree-util-specifiers-to-declarations.js'\nimport {\n  toIdOrMemberExpression,\n  toJsxIdOrMemberExpression\n} from '../util/estree-util-to-id-or-member-expression.js'\nimport {toBinaryAddition} from '../util/estree-util-to-binary-addition.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * A plugin that rewrites JSX in functions to accept components as\n * `props.components` (when the function is called `_createMdxContent`), or from\n * a provider (if there is one).\n * It also makes sure that any undefined components are defined: either from\n * received components or as a function that throws an error.\n *\n * @type {import('unified').Plugin<[RecmaJsxRewriteOptions | null | undefined] | [], Program>}\n */\nexport function recmaJsxRewrite(options) {\n  // Always given inside `@mdx-js/mdx`\n  /* c8 ignore next */\n  const {development, providerImportSource, outputFormat} = options || {}\n\n  return (tree, file) => {\n    // Find everything that’s defined in the top-level scope.\n    const scopeInfo = analyze(tree)\n    /** @type {Array<StackEntry>} */\n    const fnStack = []\n    let importProvider = false\n    let createErrorHelper = false\n    /** @type {Scope | undefined} */\n    let currentScope\n\n    walk(tree, {\n      enter(node) {\n        const newScope = /** @type {Scope | undefined} */ (\n          scopeInfo.map.get(node)\n        )\n\n        if (\n          node.type === 'FunctionDeclaration' ||\n          node.type === 'FunctionExpression' ||\n          node.type === 'ArrowFunctionExpression'\n        ) {\n          fnStack.push({\n            objects: [],\n            components: [],\n            tags: [],\n            references: {},\n            idToInvalidComponentName: new Map(),\n            node\n          })\n\n          // MDXContent only ever contains MDXLayout\n          if (\n            isNamedFunction(node, 'MDXContent') &&\n            newScope &&\n            !inScope(newScope, 'MDXLayout')\n          ) {\n            fnStack[0].components.push('MDXLayout')\n          }\n        }\n\n        const fnScope = fnStack[0]\n        if (\n          !fnScope ||\n          (!isNamedFunction(fnScope.node, '_createMdxContent') &&\n            !providerImportSource)\n        ) {\n          return\n        }\n\n        if (newScope) {\n          newScope.node = node\n          currentScope = newScope\n        }\n\n        if (currentScope && node.type === 'JSXElement') {\n          let name = node.openingElement.name\n\n          // `<x.y>`, `<Foo.Bar>`, `<x.y.z>`.\n          if (name.type === 'JSXMemberExpression') {\n            /** @type {Array<string>} */\n            const ids = []\n\n            // Find the left-most identifier.\n            while (name.type === 'JSXMemberExpression') {\n              ids.unshift(name.property.name)\n              name = name.object\n            }\n\n            ids.unshift(name.name)\n            const fullId = ids.join('.')\n            const id = name.name\n\n            const isInScope = inScope(currentScope, id)\n\n            if (!own.call(fnScope.references, fullId)) {\n              const parentScope = /** @type {Scope | undefined} */ (\n                currentScope.parent\n              )\n              if (\n                !isInScope ||\n                // If the parent scope is `_createMdxContent`, then this\n                // references a component we can add a check statement for.\n                (parentScope &&\n                  parentScope.node.type === 'FunctionDeclaration' &&\n                  isNamedFunction(parentScope.node, '_createMdxContent'))\n              ) {\n                fnScope.references[fullId] = {node, component: true}\n              }\n            }\n\n            if (!fnScope.objects.includes(id) && !isInScope) {\n              fnScope.objects.push(id)\n            }\n          }\n          // `<xml:thing>`.\n          else if (name.type === 'JSXNamespacedName') {\n            // Ignore namespaces.\n          }\n          // If the name is a valid ES identifier, and it doesn’t start with a\n          // lowercase letter, it’s a component.\n          // For example, `$foo`, `_bar`, `Baz` are all component names.\n          // But `foo` and `b-ar` are tag names.\n          else if (isIdentifierName(name.name) && !/^[a-z]/.test(name.name)) {\n            const id = name.name\n\n            if (!inScope(currentScope, id)) {\n              // No need to add an error for an undefined layout — we use an\n              // `if` later.\n              if (id !== 'MDXLayout' && !own.call(fnScope.references, id)) {\n                fnScope.references[id] = {node, component: true}\n              }\n\n              if (!fnScope.components.includes(id)) {\n                fnScope.components.push(id)\n              }\n            }\n          }\n          // @ts-expect-error Allow fields passed through from mdast through hast to\n          // esast.\n          else if (node.data && node.data._mdxExplicitJsx) {\n            // Do not turn explicit JSX into components from `_components`.\n            // As in, a given `h1` component is used for `# heading` (next case),\n            // but not for `<h1>heading</h1>`.\n          } else {\n            const id = name.name\n\n            if (!fnScope.tags.includes(id)) {\n              fnScope.tags.push(id)\n            }\n\n            /** @type {Array<string | number>} */\n            let jsxIdExpression = ['_components', id]\n            if (isIdentifierName(id) === false) {\n              let invalidComponentName =\n                fnScope.idToInvalidComponentName.get(id)\n              if (invalidComponentName === undefined) {\n                invalidComponentName = `_component${fnScope.idToInvalidComponentName.size}`\n                fnScope.idToInvalidComponentName.set(id, invalidComponentName)\n              }\n\n              jsxIdExpression = [invalidComponentName]\n            }\n\n            node.openingElement.name =\n              toJsxIdOrMemberExpression(jsxIdExpression)\n\n            if (node.closingElement) {\n              node.closingElement.name =\n                toJsxIdOrMemberExpression(jsxIdExpression)\n            }\n          }\n        }\n      },\n      leave(node) {\n        /** @type {Array<Property>} */\n        const defaults = []\n        /** @type {Array<string>} */\n        const actual = []\n        /** @type {Array<Expression>} */\n        const parameters = []\n        /** @type {Array<VariableDeclarator>} */\n        const declarations = []\n\n        if (currentScope && currentScope.node === node) {\n          // @ts-expect-error: `node`s were patched when entering.\n          currentScope = currentScope.parent\n        }\n\n        if (\n          node.type === 'FunctionDeclaration' ||\n          node.type === 'FunctionExpression' ||\n          node.type === 'ArrowFunctionExpression'\n        ) {\n          const fn = node\n          const scope = fnStack[fnStack.length - 1]\n          /** @type {string} */\n          let name\n\n          for (name of scope.tags) {\n            defaults.push({\n              type: 'Property',\n              kind: 'init',\n              key: isIdentifierName(name)\n                ? {type: 'Identifier', name}\n                : {type: 'Literal', value: name},\n              value: {type: 'Literal', value: name},\n              method: false,\n              shorthand: false,\n              computed: false\n            })\n          }\n\n          actual.push(...scope.components)\n\n          for (name of scope.objects) {\n            // In some cases, a component is used directly (`<X>`) but it’s also\n            // used as an object (`<X.Y>`).\n            if (!actual.includes(name)) {\n              actual.push(name)\n            }\n          }\n\n          /** @type {Array<Statement>} */\n          const statements = []\n\n          if (\n            defaults.length > 0 ||\n            actual.length > 0 ||\n            scope.idToInvalidComponentName.size > 0\n          ) {\n            if (providerImportSource) {\n              importProvider = true\n              parameters.push({\n                type: 'CallExpression',\n                callee: {type: 'Identifier', name: '_provideComponents'},\n                arguments: [],\n                optional: false\n              })\n            }\n\n            // Accept `components` as a prop if this is the `MDXContent` or\n            // `_createMdxContent` function.\n            if (\n              isNamedFunction(scope.node, 'MDXContent') ||\n              isNamedFunction(scope.node, '_createMdxContent')\n            ) {\n              parameters.push(toIdOrMemberExpression(['props', 'components']))\n            }\n\n            if (defaults.length > 0 || parameters.length > 1) {\n              parameters.unshift({\n                type: 'ObjectExpression',\n                properties: defaults\n              })\n            }\n\n            // If we’re getting components from several sources, merge them.\n            /** @type {Expression} */\n            let componentsInit =\n              parameters.length > 1\n                ? {\n                    type: 'CallExpression',\n                    callee: toIdOrMemberExpression(['Object', 'assign']),\n                    arguments: parameters,\n                    optional: false\n                  }\n                : parameters[0].type === 'MemberExpression'\n                ? // If we’re only getting components from `props.components`,\n                  // make sure it’s defined.\n                  {\n                    type: 'LogicalExpression',\n                    operator: '||',\n                    left: parameters[0],\n                    right: {type: 'ObjectExpression', properties: []}\n                  }\n                : parameters[0]\n\n            /** @type {ObjectPattern | undefined} */\n            let componentsPattern\n\n            // Add components to scope.\n            // For `['MyComponent', 'MDXLayout']` this generates:\n            // ```js\n            // const {MyComponent, wrapper: MDXLayout} = _components\n            // ```\n            // Note that MDXLayout is special as it’s taken from\n            // `_components.wrapper`.\n            if (actual.length > 0) {\n              componentsPattern = {\n                type: 'ObjectPattern',\n                properties: actual.map((name) => ({\n                  type: 'Property',\n                  kind: 'init',\n                  key: {\n                    type: 'Identifier',\n                    name: name === 'MDXLayout' ? 'wrapper' : name\n                  },\n                  value: {type: 'Identifier', name},\n                  method: false,\n                  shorthand: name !== 'MDXLayout',\n                  computed: false\n                }))\n              }\n            }\n\n            if (scope.tags.length > 0) {\n              declarations.push({\n                type: 'VariableDeclarator',\n                id: {type: 'Identifier', name: '_components'},\n                init: componentsInit\n              })\n              componentsInit = {type: 'Identifier', name: '_components'}\n            }\n\n            if (isNamedFunction(scope.node, '_createMdxContent')) {\n              for (const [\n                id,\n                componentName\n              ] of scope.idToInvalidComponentName) {\n                // For JSX IDs that can’t be represented as JavaScript IDs (as in,\n                // those with dashes, such as `custom-element`), generate a\n                // separate variable that is a valid JS ID (such as `_component0`),\n                // and takes it from components:\n                // `const _component0 = _components['custom-element']`\n                declarations.push({\n                  type: 'VariableDeclarator',\n                  id: {type: 'Identifier', name: componentName},\n                  init: {\n                    type: 'MemberExpression',\n                    object: {type: 'Identifier', name: '_components'},\n                    property: {type: 'Literal', value: id},\n                    computed: true,\n                    optional: false\n                  }\n                })\n              }\n            }\n\n            if (componentsPattern) {\n              declarations.push({\n                type: 'VariableDeclarator',\n                id: componentsPattern,\n                init: componentsInit\n              })\n            }\n\n            if (declarations.length > 0) {\n              statements.push({\n                type: 'VariableDeclaration',\n                kind: 'const',\n                declarations\n              })\n            }\n          }\n\n          /** @type {string} */\n          let key\n\n          // Add partials (so for `x.y.z` it’d generate `x` and `x.y` too).\n          for (key in scope.references) {\n            if (own.call(scope.references, key)) {\n              const parts = key.split('.')\n              let index = 0\n              while (++index < parts.length) {\n                const partial = parts.slice(0, index).join('.')\n                if (!own.call(scope.references, partial)) {\n                  scope.references[partial] = {\n                    node: scope.references[key].node,\n                    component: false\n                  }\n                }\n              }\n            }\n          }\n\n          const references = Object.keys(scope.references).sort()\n          let index = -1\n          while (++index < references.length) {\n            const id = references[index]\n            const info = scope.references[id]\n            const place = stringifyPosition(positionFromEstree(info.node))\n            /** @type {Array<Expression>} */\n            const parameters = [\n              {type: 'Literal', value: id},\n              {type: 'Literal', value: info.component}\n            ]\n\n            createErrorHelper = true\n\n            if (development && place !== '1:1-1:1') {\n              parameters.push({type: 'Literal', value: place})\n            }\n\n            statements.push({\n              type: 'IfStatement',\n              test: {\n                type: 'UnaryExpression',\n                operator: '!',\n                prefix: true,\n                argument: toIdOrMemberExpression(id.split('.'))\n              },\n              consequent: {\n                type: 'ExpressionStatement',\n                expression: {\n                  type: 'CallExpression',\n                  callee: {type: 'Identifier', name: '_missingMdxReference'},\n                  arguments: parameters,\n                  optional: false\n                }\n              },\n              alternate: null\n            })\n          }\n\n          if (statements.length > 0) {\n            // Arrow functions with an implied return:\n            if (fn.body.type !== 'BlockStatement') {\n              fn.body = {\n                type: 'BlockStatement',\n                body: [{type: 'ReturnStatement', argument: fn.body}]\n              }\n            }\n\n            fn.body.body.unshift(...statements)\n          }\n\n          fnStack.pop()\n        }\n      }\n    })\n\n    // If a provider is used (and can be used), import it.\n    if (importProvider && providerImportSource) {\n      tree.body.unshift(\n        createImportProvider(providerImportSource, outputFormat)\n      )\n    }\n\n    // If potentially missing components are used.\n    if (createErrorHelper) {\n      /** @type {Array<Expression>} */\n      const message = [\n        {type: 'Literal', value: 'Expected '},\n        {\n          type: 'ConditionalExpression',\n          test: {type: 'Identifier', name: 'component'},\n          consequent: {type: 'Literal', value: 'component'},\n          alternate: {type: 'Literal', value: 'object'}\n        },\n        {type: 'Literal', value: ' `'},\n        {type: 'Identifier', name: 'id'},\n        {\n          type: 'Literal',\n          value:\n            '` to be defined: you likely forgot to import, pass, or provide it.'\n        }\n      ]\n\n      /** @type {Array<Identifier>} */\n      const parameters = [\n        {type: 'Identifier', name: 'id'},\n        {type: 'Identifier', name: 'component'}\n      ]\n\n      if (development) {\n        message.push({\n          type: 'ConditionalExpression',\n          test: {type: 'Identifier', name: 'place'},\n          consequent: toBinaryAddition([\n            {type: 'Literal', value: '\\nIt’s referenced in your code at `'},\n            {type: 'Identifier', name: 'place'},\n            {\n              type: 'Literal',\n              value: (file.path ? '` in `' + file.path : '') + '`'\n            }\n          ]),\n          alternate: {type: 'Literal', value: ''}\n        })\n\n        parameters.push({type: 'Identifier', name: 'place'})\n      }\n\n      tree.body.push({\n        type: 'FunctionDeclaration',\n        id: {type: 'Identifier', name: '_missingMdxReference'},\n        generator: false,\n        async: false,\n        params: parameters,\n        body: {\n          type: 'BlockStatement',\n          body: [\n            {\n              type: 'ThrowStatement',\n              argument: {\n                type: 'NewExpression',\n                callee: {type: 'Identifier', name: 'Error'},\n                arguments: [toBinaryAddition(message)]\n              }\n            }\n          ]\n        }\n      })\n    }\n  }\n}\n\n/**\n * @param {string} providerImportSource\n * @param {RecmaJsxRewriteOptions['outputFormat']} outputFormat\n * @returns {Statement | ModuleDeclaration}\n */\nfunction createImportProvider(providerImportSource, outputFormat) {\n  /** @type {Array<ImportSpecifier>} */\n  const specifiers = [\n    {\n      type: 'ImportSpecifier',\n      imported: {type: 'Identifier', name: 'useMDXComponents'},\n      local: {type: 'Identifier', name: '_provideComponents'}\n    }\n  ]\n\n  return outputFormat === 'function-body'\n    ? {\n        type: 'VariableDeclaration',\n        kind: 'const',\n        declarations: specifiersToDeclarations(\n          specifiers,\n          toIdOrMemberExpression(['arguments', 0])\n        )\n      }\n    : {\n        type: 'ImportDeclaration',\n        specifiers,\n        source: {type: 'Literal', value: providerImportSource}\n      }\n}\n\n/**\n * @param {EstreeFunction} node\n * @param {string} name\n * @returns {boolean}\n */\nfunction isNamedFunction(node, name) {\n  return Boolean(node && 'id' in node && node.id && node.id.name === name)\n}\n\n/**\n * @param {Scope} scope\n * @param {string} id\n * @returns {boolean}\n */\nfunction inScope(scope, id) {\n  /** @type {Scope | undefined} */\n  let currentScope = scope\n\n  while (currentScope) {\n    if (currentScope.declarations.has(id)) {\n      return true\n    }\n\n    // @ts-expect-error: `node`s have been added when entering.\n    currentScope = currentScope.parent\n  }\n\n  return false\n}\n", "// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 3,\n  '&&': 4,\n  '|': 5,\n  '??': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    if (node.computed) {\n      state.write('[')\n    }\n    this[node.key.type](node.key, state)\n    if (node.computed) {\n      state.write(']')\n    }\n    if (node.value == null) {\n      if (node.key.type[0] !== 'F') {\n        state.write(';')\n      }\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n    state.write(';')\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `␣␣`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n", "/**\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {typeof import('source-map').SourceMapGenerator} SourceMapGenerator\n * @typedef {import('source-map').RawSourceMap} Map\n * @typedef {import('./types.js').Handlers} Handlers\n */\n\n/**\n * @typedef BaseFields\n * @property {Handlers | null | undefined} [handlers]\n *   Object mapping node types to functions handling the corresponding nodes.\n *\n * @typedef SourceMapFieldsWithoutSourceMapGenerator\n * @property {null | undefined} [SourceMapGenerator]\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in.\n *   This works if there is positional info on nodes.\n * @property {null | undefined} [filePath]\n *   Path to input file.\n *   Only used in source map.\n *\n * @typedef SourceMapFieldsWithSourceMapGenerator\n * @property {SourceMapGenerator} SourceMapGenerator\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in.\n *   This works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file.\n *   Only used in source map.\n *\n * @typedef SourceMapFieldsMaybeSourceMapGenerator\n * @property {SourceMapGenerator | null | undefined} SourceMapGenerator\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in.\n *   This works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file.\n *   Only used in source map.\n *\n * @typedef {BaseFields & SourceMapFieldsWithoutSourceMapGenerator} OptionsWithoutSourceMapGenerator\n * @typedef {BaseFields & SourceMapFieldsWithSourceMapGenerator} OptionsWithSourceMapGenerator\n * @typedef {BaseFields & SourceMapFieldsMaybeSourceMapGenerator} OptionsWithMaybeMapGenerator\n *\n * @typedef {OptionsWithMaybeMapGenerator} Options\n *   Configuration (optional).\n *\n * @typedef BaseResultFields\n * @property {string} value\n *   Serialized JavaScript.\n *\n * @typedef ResultFieldsWithoutSourceMapGenerator\n * @property {undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is passed.\n *\n * @typedef ResultFieldsWithSourceMapGenerator\n * @property {Map} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is not passed.\n *\n * @typedef ResultFieldsMaybeSourceMapGenerator\n * @property {Map | undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` might be passed.\n *\n * @typedef {BaseResultFields & ResultFieldsWithoutSourceMapGenerator} ResultWithoutSourceMapGenerator\n * @typedef {BaseResultFields & ResultFieldsWithSourceMapGenerator} ResultWithSourceMapGenerator\n * @typedef {BaseResultFields & ResultFieldsMaybeSourceMapGenerator} ResultMaybeSourceMapGenerator\n *\n * @typedef {ResultMaybeSourceMapGenerator} Result\n */\n\n// @ts-expect-error: `astring` has broken types.\nimport * as astring from 'astring'\n\n/** @type {Handlers} */\nconst GENERATOR = astring.GENERATOR\n\n/** @type {(node: Program, options: unknown) => string} */\nconst generate = astring.generate\n\n/**\n * Serialize an estree as JavaScript.\n *\n * @param tree\n *   Estree (esast).\n * @param options\n *   Configuration (optional).\n * @returns\n *   Result, optionally with source map.\n */\nexport const toJs =\n  /**\n   * @type {(\n   *   ((value: Program, options: OptionsWithSourceMapGenerator) => ResultWithSourceMapGenerator) &\n   *   ((value: Program, options: OptionsWithMaybeMapGenerator) => ResultMaybeSourceMapGenerator) &\n   *   ((value: Program, options?: OptionsWithoutSourceMapGenerator | null | undefined) => ResultWithoutSourceMapGenerator)\n   * )}\n   */\n  (\n    /**\n     * @param {Program} tree\n     * @param {Options | null | undefined} [options]\n     * @returns {Result}\n     */\n    function (tree, options) {\n      const {SourceMapGenerator, filePath, handlers} = options || {}\n      const sourceMap = SourceMapGenerator\n        ? new SourceMapGenerator({file: filePath || '<unknown>.js'})\n        : undefined\n\n      const value = generate(tree, {\n        comments: true,\n        generator: {...GENERATOR, ...handlers},\n        sourceMap\n      })\n      const map = sourceMap ? sourceMap.toJSON() : undefined\n\n      return {value, map}\n    }\n  )\n", "/**\n * @typedef {import('estree-jsx').JSXAttribute} JSXAttribute\n * @typedef {import('estree-jsx').JSXClosingElement} JSXClosingElement\n * @typedef {import('estree-jsx').JSXClosingFragment} JSXClosingFragment\n * @typedef {import('estree-jsx').JSXElement} JSXElement\n * @typedef {import('estree-jsx').JSXExpressionContainer} JSXExpressionContainer\n * @typedef {import('estree-jsx').JSXFragment} JSXFragment\n * @typedef {import('estree-jsx').JSXIdentifier} JSXIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JSXMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JSXNamespacedName\n * @typedef {import('estree-jsx').JSXOpeningElement} JSXOpeningElement\n * @typedef {import('estree-jsx').JSXOpeningFragment} JSXOpeningFragment\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JSXSpreadAttribute\n * @typedef {import('estree-jsx').JSXText} JSXText\n * @typedef {import('./types.js').Generator} Generator\n * @typedef {import('./types.js').State} State\n */\n\nexport const jsx = {\n  JSXAttribute,\n  JSXClosingElement,\n  JSXClosingFragment,\n  JSXElement,\n  JSXEmptyExpression,\n  JSXExpressionContainer,\n  JSXFragment,\n  JSXIdentifier,\n  JSXMemberExpression,\n  JSXNamespacedName,\n  JSXOpeningElement,\n  JSXOpeningFragment,\n  JSXSpreadAttribute,\n  JSXText\n}\n\n/**\n * `attr`\n * `attr=\"something\"`\n * `attr={1}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXAttribute(node, state) {\n  this[node.name.type](node.name, state)\n\n  if (node.value !== undefined && node.value !== null) {\n    state.write('=')\n\n    // Encode double quotes in attribute values.\n    if (node.value.type === 'Literal') {\n      state.write(\n        '\"' + encodeJsx(String(node.value.value)).replace(/\"/g, '&quot;') + '\"',\n        node\n      )\n    } else {\n      this[node.value.type](node.value, state)\n    }\n  }\n}\n\n/**\n * `</div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXClosingElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXClosingElement(node, state) {\n  state.write('</')\n  this[node.name.type](node.name, state)\n  state.write('>')\n}\n\n/**\n * `</>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXClosingFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXClosingFragment(node, state) {\n  state.write('</>', node)\n}\n\n/**\n * `<div />`\n * `<div></div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXElement(node, state) {\n  let index = -1\n\n  this[node.openingElement.type](node.openingElement, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  if (node.closingElement) {\n    this[node.closingElement.type](node.closingElement, state)\n  }\n}\n\n/**\n * `{}` (always in a `JSXExpressionContainer`, which does the curlies)\n *\n * @this {Generator}\n *   `astring` generator.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXEmptyExpression() {}\n\n/**\n * `{expression}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXExpressionContainer} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXExpressionContainer(node, state) {\n  state.write('{')\n  this[node.expression.type](node.expression, state)\n  state.write('}')\n}\n\n/**\n * `<></>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXFragment(node, state) {\n  let index = -1\n\n  this[node.openingFragment.type](node.openingFragment, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  this[node.closingFragment.type](node.closingFragment, state)\n}\n\n/**\n * `div`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXIdentifier} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXIdentifier(node, state) {\n  state.write(node.name, node)\n}\n\n/**\n * `member.expression`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXMemberExpression} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXMemberExpression(node, state) {\n  this[node.object.type](node.object, state)\n  state.write('.')\n  this[node.property.type](node.property, state)\n}\n\n/**\n * `ns:name`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXNamespacedName} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXNamespacedName(node, state) {\n  this[node.namespace.type](node.namespace, state)\n  state.write(':')\n  this[node.name.type](node.name, state)\n}\n\n/**\n * `<div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXOpeningElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXOpeningElement(node, state) {\n  let index = -1\n\n  state.write('<')\n  this[node.name.type](node.name, state)\n\n  if (node.attributes) {\n    while (++index < node.attributes.length) {\n      state.write(' ')\n      this[node.attributes[index].type](node.attributes[index], state)\n    }\n  }\n\n  state.write(node.selfClosing ? ' />' : '>')\n}\n\n/**\n * `<>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXOpeningFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXOpeningFragment(node, state) {\n  state.write('<>', node)\n}\n\n/**\n * `{...argument}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXSpreadAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXSpreadAttribute(node, state) {\n  state.write('{')\n  // eslint-disable-next-line new-cap\n  this.SpreadElement(node, state)\n  state.write('}')\n}\n\n/**\n * `!`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXText} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXText(node, state) {\n  state.write(\n    encodeJsx(node.value).replace(/[<>{}]/g, ($0) =>\n      $0 === '<'\n        ? '&lt;'\n        : $0 === '>'\n        ? '&gt;'\n        : $0 === '{'\n        ? '&#123;'\n        : '&#125;'\n    ),\n    node\n  )\n}\n\n/**\n * Make sure that character references don’t pop up.\n *\n * For example, the text `&copy;` should stay that way, and not turn into `©`.\n * We could encode all `&` (easy but verbose) or look for actual valid\n * references (complex but cleanest output).\n * Looking for the 2nd character gives us a middle ground.\n * The `#` is for (decimal and hexadecimal) numeric references, the letters\n * are for the named references.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nfunction encodeJsx(value) {\n  return value.replace(/&(?=[#a-z])/gi, '&amp;')\n}\n", "/**\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {typeof import('source-map').SourceMapGenerator} SourceMapGenerator\n *\n * @typedef RecmaStringifyOptions\n *   Configuration for internal plugin `recma-stringify`.\n * @property {SourceMapGenerator | null | undefined} [SourceMapGenerator]\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in.\n */\n\nimport {toJs, jsx} from 'estree-util-to-js'\n\n/**\n * A plugin that adds an esast compiler: a small wrapper around `astring` to add\n * support for serializing JSX.\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[RecmaStringifyOptions | null | undefined] | [], Program, string>}\n */\nexport function recmaStringify(options) {\n  // Always given inside `@mdx-js/mdx`\n  /* c8 ignore next */\n  const {SourceMapGenerator} = options || {}\n\n  Object.assign(this, {Compiler: compiler})\n\n  /** @type {import('unified').CompilerFunction<Program, string>} */\n  function compiler(tree, file) {\n    const result = SourceMapGenerator\n      ? toJs(tree, {\n          filePath: file.path || 'unknown.mdx',\n          SourceMapGenerator,\n          handlers: jsx\n        })\n      : toJs(tree, {handlers: jsx})\n\n    file.map = result.map\n\n    return result.value\n  }\n}\n", "/**\n * @typedef {import('estree').Comment} Comment\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n * @typedef {import('estree-jsx').JSXEmptyExpression} JsxEmptyExpression\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn a hast comment into an estree node.\n *\n * @param {import('hast').Comment} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nexport function comment(node, state) {\n  /** @type {Comment} */\n  const result = {type: 'Block', value: node.value}\n  state.inherit(node, result)\n  state.comments.push(result)\n\n  /** @type {JsxEmptyExpression} */\n  const expression = {\n    type: 'JSXEmptyExpression',\n    // @ts-expect-error: `comments` is custom.\n    comments: [Object.assign({}, result, {leading: false, trailing: true})]\n  }\n  state.patch(node, expression)\n\n  /** @type {JsxExpressionContainer} */\n  const container = {type: 'JSXExpressionContainer', expression}\n  state.patch(node, container)\n  return container\n}\n", "import StyleToObject from './index.js';\n\nexport default StyleToObject;\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('estree').Property} Property\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Record<string, string>} Style\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {\n  start as identifierStart,\n  cont as identifierCont,\n  name as identifierName\n} from 'estree-util-is-identifier-name'\nimport styleToObject from 'style-to-object'\n\nconst own = {}.hasOwnProperty\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n/**\n * Turn a hast element into an estree node.\n *\n * @param {Element} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement}\n *   estree expression.\n */\n// eslint-disable-next-line complexity\nexport function element(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const props = node.properties || {}\n\n  if (parentSchema.space === 'html' && node.tagName.toLowerCase() === 'svg') {\n    schema = svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const attributes = []\n  /** @type {string} */\n  let prop\n\n  for (prop in props) {\n    if (own.call(props, prop)) {\n      let value = props[prop]\n      const info = find(schema, prop)\n      /** @type {JsxAttribute['value']} */\n      let attributeValue\n\n      // Ignore nullish and `NaN` values.\n      // Ignore `false` and falsey known booleans.\n      if (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'number' && Number.isNaN(value)) ||\n        value === false ||\n        (!value && info.boolean)\n      ) {\n        continue\n      }\n\n      prop =\n        state.elementAttributeNameCase === 'react' && info.space\n          ? hastToReact[info.property] || info.property\n          : info.attribute\n\n      if (Array.isArray(value)) {\n        // Accept `array`.\n        // Most props are space-separated.\n        value = info.commaSeparated ? commas(value) : spaces(value)\n      }\n\n      if (prop === 'style') {\n        let styleObject =\n          typeof value === 'object'\n            ? value\n            : parseStyle(String(value), node.tagName)\n\n        if (state.stylePropertyNameCase === 'css') {\n          styleObject = transformStyleToCssCasing(styleObject)\n        }\n\n        /** @type {Array<Property>} */\n        const cssProperties = []\n        /** @type {string} */\n        let cssProp\n\n        for (cssProp in styleObject) {\n          // eslint-disable-next-line max-depth\n          if (own.call(styleObject, cssProp)) {\n            cssProperties.push({\n              type: 'Property',\n              method: false,\n              shorthand: false,\n              computed: false,\n              key: identifierName(cssProp)\n                ? {type: 'Identifier', name: cssProp}\n                : {type: 'Literal', value: cssProp},\n              value: {type: 'Literal', value: String(styleObject[cssProp])},\n              kind: 'init'\n            })\n          }\n        }\n\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: {type: 'ObjectExpression', properties: cssProperties}\n        }\n      } else if (value === true) {\n        attributeValue = null\n      } else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      if (jsxIdentifierName(prop)) {\n        attributes.push({\n          type: 'JSXAttribute',\n          name: {type: 'JSXIdentifier', name: prop},\n          value: attributeValue\n        })\n      } else {\n        attributes.push({\n          type: 'JSXSpreadAttribute',\n          argument: {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                key: {type: 'Literal', value: String(prop)},\n                // @ts-expect-error No need to worry about `style` (which has a\n                // `JSXExpressionContainer` value) because that’s a valid identifier.\n                value: attributeValue || {type: 'Literal', value: true},\n                kind: 'init'\n              }\n            ]\n          }\n        })\n      }\n    }\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement} */\n  const result = {\n    type: 'JSXElement',\n    openingElement: {\n      type: 'JSXOpeningElement',\n      attributes,\n      name: state.createJsxElementName(node.tagName),\n      selfClosing: children.length === 0\n    },\n    closingElement:\n      children.length > 0\n        ? {\n            type: 'JSXClosingElement',\n            name: state.createJsxElementName(node.tagName)\n          }\n        : null,\n    children\n  }\n  state.inherit(node, result)\n  return result\n}\n\n/**\n * Parse CSS rules as a declaration.\n *\n * @param {string} value\n *   CSS text.\n * @param {string} tagName\n *   Element name.\n * @returns {Style}\n *   Props.\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, iterator)\n  } catch (error) {\n    const exception = /** @type {Error} */ (error)\n    exception.message =\n      tagName + '[style]' + exception.message.slice('undefined'.length)\n    throw error\n  }\n\n  return result\n\n  /**\n   * Add `name`, as a CSS prop, to `result`.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function iterator(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      // See: <https://alanhogan.com/code/vendor-prefixed-css-property-names-in-javascript>\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStyleToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      let to = from.replace(cap, toDash)\n      // Handle `ms-xxx` -> `-ms-xxx`.\n      if (to.slice(0, 3) === 'ms-') to = '-' + to\n      cssCasing[to] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * Checks if the given string is a valid identifier name.\n *\n * Allows dashes, so it’s actually JSX identifier names.\n *\n * @param {string} name\n *   Whatever.\n * @returns {boolean}\n *   Whether `name` is a valid JSX identifier.\n */\nfunction jsxIdentifierName(name) {\n  let index = -1\n\n  while (++index < name.length) {\n    if (!(index ? cont : identifierStart)(name.charCodeAt(index))) return false\n  }\n\n  // `false` if `name` is empty.\n  return index > 0\n\n  /**\n   * @param {number} code\n   * @returns {boolean}\n   */\n  function cont(code) {\n    return identifierCont(code) || code === 45 /* `-` */\n  }\n}\n", "/**\n * @typedef {import('estree').BaseNode} EstreeNode\n * @typedef {import('estree').Comment} EstreeComment\n *\n * @typedef State\n *   Info passed around.\n * @property {Array<EstreeComment>} comments\n *   Comments.\n * @property {number} index\n *   Index of comment.\n *\n * @typedef Fields\n * @property {boolean} leading\n * @property {boolean} trailing\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * This mutates the given `tree`.\n * It takes `comments`, walks the tree, and adds comments as close as possible\n * to where they originated.\n *\n * Comment nodes are given two boolean fields: `leading` (`true` for\n * `/* a *\\/ b`) and `trailing` (`true` for `a /* b *\\/`).\n * Both fields are `false` for dangling comments: `[/* a *\\/]`.\n * This is what `recast` uses too, and is somewhat similar to Babel, which is\n * not estree but instead uses `leadingComments`, `trailingComments`, and\n * `innerComments` arrays on nodes.\n *\n * The algorithm checks any node: even recent (or future) proposals or\n * nonstandard syntax such as JSX, because it ducktypes to find nodes instead\n * of having a list of visitor keys.\n *\n * The algorithm supports `loc` fields (line/column), `range` fields (offsets),\n * and direct `start` / `end` fields.\n *\n * @template {EstreeNode} Tree\n *   Node type.\n * @param {Tree} tree\n *   Tree to attach to.\n * @param {Array<EstreeComment> | null | undefined} [comments]\n *   List of comments.\n * @returns {Tree}\n *   Given tree.\n */\n// To do: next major: don’t return given `tree`.\nexport function attachComments(tree, comments) {\n  const list = (comments || []).concat().sort(compare)\n  if (list.length > 0) walk(tree, {comments: list, index: 0})\n  return tree\n}\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * @param {EstreeNode} node\n *   Node.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction walk(node, state) {\n  // Done, we can quit.\n  if (state.index === state.comments.length) {\n    return\n  }\n\n  /** @type {Array<EstreeNode>} */\n  const children = []\n  /** @type {Array<EstreeComment>} */\n  const comments = []\n  /** @type {string} */\n  let key\n\n  // Find all children of `node`\n  for (key in node) {\n    if (own.call(node, key)) {\n      /** @type {EstreeNode | Array<EstreeNode>} */\n      // @ts-expect-error: indexable.\n      const value = node[key]\n\n      // Ignore comments.\n      if (value && typeof value === 'object' && key !== 'comments') {\n        if (Array.isArray(value)) {\n          let index = -1\n\n          while (++index < value.length) {\n            if (value[index] && typeof value[index].type === 'string') {\n              children.push(value[index])\n            }\n          }\n        } else if (typeof value.type === 'string') {\n          children.push(value)\n        }\n      }\n    }\n  }\n\n  // Sort the children.\n  children.sort(compare)\n\n  // Initial comments.\n  comments.push(...slice(state, node, false, {leading: true, trailing: false}))\n\n  let index = -1\n\n  while (++index < children.length) {\n    walk(children[index], state)\n  }\n\n  // Dangling or trailing comments.\n  comments.push(\n    ...slice(state, node, true, {\n      leading: false,\n      trailing: children.length > 0\n    })\n  )\n\n  if (comments.length > 0) {\n    // @ts-expect-error, yes, because they’re nonstandard.\n    node.comments = comments\n  }\n}\n\n/**\n * @param {State} state\n *   Info passed around.\n * @param {EstreeNode} node\n *   Node.\n * @param {boolean} compareEnd\n *   Whether to compare on the end (default is on start).\n * @param {Fields} fields\n *   Fields.\n * @returns {Array<EstreeComment>}\n *   Slice from `state.comments`.\n */\nfunction slice(state, node, compareEnd, fields) {\n  /** @type {Array<EstreeComment>} */\n  const result = []\n\n  while (\n    state.comments[state.index] &&\n    compare(state.comments[state.index], node, compareEnd) < 1\n  ) {\n    result.push(Object.assign({}, state.comments[state.index++], fields))\n  }\n\n  return result\n}\n\n/**\n * Sort two nodes (or comments).\n *\n * @param {EstreeNode | EstreeComment} left\n *   A node.\n * @param {EstreeNode | EstreeComment} right\n *   The other node.\n * @param {boolean | undefined} [compareEnd=false]\n *   Compare on `end` of `right`, default is to compare on `start`.\n * @returns {number}\n *   Sorting.\n */\nfunction compare(left, right, compareEnd) {\n  const field = compareEnd ? 'end' : 'start'\n\n  // Offsets.\n  if (left.range && right.range) {\n    return left.range[0] - right.range[compareEnd ? 1 : 0]\n  }\n\n  // Points.\n  if (left.loc && left.loc.start && right.loc && right.loc[field]) {\n    return (\n      left.loc.start.line - right.loc[field].line ||\n      left.loc.start.column - right.loc[field].column\n    )\n  }\n\n  // Just `start` (and `end`) on nodes.\n  // Default in most parsers.\n  if ('start' in left && field in right) {\n    // @ts-expect-error Added by Acorn\n    return left.start - right[field]\n  }\n\n  return Number.NaN\n}\n", "/**\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpression} MdxTextExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree-jsx').JSXEmptyExpression} JsxEmptyExpression\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n * @typedef {import('../state.js').State} State\n */\n\nimport {attachComments} from 'estree-util-attach-comments'\n\n/**\n * Turn an MDX expression node into an estree node.\n *\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nexport function mdxExpression(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n  /** @type {Expression | JsxEmptyExpression | undefined} */\n  let expression\n\n  if (estree) {\n    state.comments.push(...comments)\n    attachComments(estree, estree.comments)\n    expression =\n      (estree.body[0] &&\n        estree.body[0].type === 'ExpressionStatement' &&\n        estree.body[0].expression) ||\n      undefined\n  }\n\n  if (!expression) {\n    expression = {type: 'JSXEmptyExpression'}\n    state.patch(node, expression)\n  }\n\n  /** @type {JsxExpressionContainer} */\n  const result = {type: 'JSXExpressionContainer', expression}\n  state.inherit(node, result)\n  return result\n}\n", "/**\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElement} MdxJsxTextElement\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n * @typedef {import('../state.js').State} State\n */\n\nimport {attachComments} from 'estree-util-attach-comments'\nimport {svg} from 'property-information'\n\n/**\n * Turn an MDX JSX element node into an estree node.\n *\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement | JsxFragment}\n *   JSX element or fragment.\n */\n// eslint-disable-next-line complexity\nexport function mdxJsxElement(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const attrs = node.attributes || []\n  let index = -1\n\n  if (\n    node.name &&\n    parentSchema.space === 'html' &&\n    node.name.toLowerCase() === 'svg'\n  ) {\n    schema = svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const attributes = []\n\n  while (++index < attrs.length) {\n    const attr = attrs[index]\n    const value = attr.value\n    /** @type {JsxAttribute['value']} */\n    let attributeValue\n\n    if (attr.type === 'mdxJsxAttribute') {\n      if (value === undefined || value === null) {\n        attributeValue = null\n        // Empty.\n      }\n      // `MdxJsxAttributeValueExpression`.\n      else if (typeof value === 'object') {\n        const estree = value.data && value.data.estree\n        const comments = (estree && estree.comments) || []\n        /** @type {Expression | undefined} */\n        let expression\n\n        if (estree) {\n          state.comments.push(...comments)\n          attachComments(estree, estree.comments)\n          // Should exist.\n          /* c8 ignore next 5 */\n          expression =\n            (estree.body[0] &&\n              estree.body[0].type === 'ExpressionStatement' &&\n              estree.body[0].expression) ||\n            undefined\n        }\n\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: expression || {type: 'JSXEmptyExpression'}\n        }\n        state.inherit(value, attributeValue)\n      }\n      // Anything else.\n      else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      /** @type {JsxAttribute} */\n      const attribute = {\n        type: 'JSXAttribute',\n        name: state.createJsxAttributeName(attr.name),\n        value: attributeValue\n      }\n\n      state.inherit(attr, attribute)\n      attributes.push(attribute)\n    }\n    // MdxJsxExpressionAttribute.\n    else {\n      const estree = attr.data && attr.data.estree\n      const comments = (estree && estree.comments) || []\n      /** @type {JsxSpreadAttribute['argument'] | undefined} */\n      let argumentValue\n\n      if (estree) {\n        state.comments.push(...comments)\n        attachComments(estree, estree.comments)\n        // Should exist.\n        /* c8 ignore next 10 */\n        argumentValue =\n          (estree.body[0] &&\n            estree.body[0].type === 'ExpressionStatement' &&\n            estree.body[0].expression &&\n            estree.body[0].expression.type === 'ObjectExpression' &&\n            estree.body[0].expression.properties &&\n            estree.body[0].expression.properties[0] &&\n            estree.body[0].expression.properties[0].type === 'SpreadElement' &&\n            estree.body[0].expression.properties[0].argument) ||\n          undefined\n      }\n\n      /** @type {JsxSpreadAttribute} */\n      const attribute = {\n        type: 'JSXSpreadAttribute',\n        argument: argumentValue || {type: 'ObjectExpression', properties: []}\n      }\n      state.inherit(attr, attribute)\n      attributes.push(attribute)\n    }\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement | JsxFragment} */\n  const result = node.name\n    ? {\n        type: 'JSXElement',\n        openingElement: {\n          type: 'JSXOpeningElement',\n          attributes,\n          name: state.createJsxElementName(node.name),\n          selfClosing: children.length === 0\n        },\n        closingElement:\n          children.length > 0\n            ? {\n                type: 'JSXClosingElement',\n                name: state.createJsxElementName(node.name)\n              }\n            : null,\n        children\n      }\n    : {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children\n      }\n\n  state.inherit(node, result)\n  return result\n}\n", "/**\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsm} MdxjsEsm\n * @typedef {import('../state.js').State} State\n */\n\nimport {attachComments} from 'estree-util-attach-comments'\n\n/**\n * Handle an MDX ESM node.\n *\n * @param {MdxjsEsm} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nexport function mdxjsEsm(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n\n  if (estree) {\n    state.comments.push(...comments)\n    attachComments(estree, comments)\n    state.esm.push(...estree.body)\n  }\n}\n", "/**\n * @typedef {import('hast').Text} Text\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn a hast text node into an estree node.\n *\n * @param {Text} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer | void}\n *   JSX expression.\n */\nexport function text(node, state) {\n  const value = String(node.value || '')\n\n  if (value) {\n    /** @type {Literal} */\n    const result = {type: 'Literal', value}\n    state.inherit(node, result)\n    /** @type {JsxExpressionContainer} */\n    const container = {type: 'JSXExpressionContainer', expression: result}\n    state.patch(node, container)\n    return container\n  }\n}\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n * @typedef {JsxFragment['children'][number]} JsxChild\n * @typedef {import('../state.js').State} State\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\n/**\n * Turn a hast root node into an estree node.\n *\n * @param {Root} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxFragment}\n *   estree JSX fragment.\n */\nexport function root(node, state) {\n  const children = state.all(node)\n  /** @type {Array<JsxChild>} */\n  const cleanChildren = []\n  let index = -1\n  /** @type {Array<JsxChild> | undefined} */\n  let queue\n\n  // Remove surrounding whitespace nodes from the fragment.\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (\n      child.type === 'JSXExpressionContainer' &&\n      child.expression.type === 'Literal' &&\n      whitespace(child.expression.value)\n    ) {\n      if (queue) queue.push(child)\n    } else {\n      if (queue) cleanChildren.push(...queue)\n      cleanChildren.push(child)\n      queue = []\n    }\n  }\n\n  /** @type {JsxFragment} */\n  const result = {\n    type: 'JSXFragment',\n    openingFragment: {type: 'JSXOpeningFragment'},\n    closingFragment: {type: 'JSXClosingFragment'},\n    children: cleanChildren\n  }\n  state.inherit(node, result)\n  return result\n}\n", "import {comment} from './comment.js'\nimport {element} from './element.js'\nimport {mdxExpression} from './mdx-expression.js'\nimport {mdxJsxElement} from './mdx-jsx-element.js'\nimport {mdxjsEsm} from './mdxjs-esm.js'\nimport {text} from './text.js'\nimport {root} from './root.js'\n\nexport const handlers = {\n  comment,\n  doctype: ignore,\n  element,\n  mdxFlowExpression: mdxExpression,\n  mdxTextExpression: mdxExpression,\n  mdxJsxFlowElement: mdxJsxElement,\n  mdxJsxTextElement: mdxJsxElement,\n  mdxjsEsm,\n  text,\n  root\n}\n\n/**\n * Handle a node that is ignored.\n *\n * @returns {void}\n *   Nothing.\n */\nfunction ignore() {}\n", "/**\n * @typedef {import('estree').Comment} Comment\n * @typedef {import('estree').Directive} Directive\n * @typedef {import('estree').ModuleDeclaration} ModuleDeclaration\n * @typedef {import('estree').Node} EstreeNode\n * @typedef {import('estree').Statement} Statement\n *\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXIdentifier} JsxIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JsxMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JsxNamespacedName\n *\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpression} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElement} MdxJsxTextElement\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Content | MdxJsxAttributeValueExpression | MdxJsxAttribute | MdxJsxExpressionAttribute | MdxJsxFlowElement | MdxJsxTextElement | MdxFlowExpression | MdxTextExpression | Root} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {JsxElement['openingElement']['name']} JsxElementName\n * @typedef {JsxAttribute['name']} JsxAttributeName\n * @typedef {JsxElement['children'][number]} JsxChild\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @callback Handle\n *   Turn a hast node into an estree node.\n * @param {any} node\n *   Expected hast node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxChild | null | undefined | void}\n *   estree node.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Specify casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef Options\n *   Configuration.\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names.\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {Record<string, Handle | null | undefined> | null | undefined} [handlers={}]\n *   Custom handlers.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects.\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {Array<Comment>} comments\n *   List of estree comments.\n * @property {Array<Directive | Statement | ModuleDeclaration>} esm\n *   List of top-level estree nodes.\n * @property {(node: any) => JsxChild | null | undefined | void} handle\n *   Transform a hast node to estree.\n * @property {(parent: Parent) => Array<JsxChild>} all\n *   Transform children of a hast parent to estree.\n * @property {(from: Node, to: EstreeNode | Comment) => void} patch\n *   Take positional info from `from` (use `inherit` if you also want data).\n * @property {(from: Node, to: EstreeNode | Comment) => void} inherit\n *   Take positional info and data from `from` (use `patch` if you don’t want data).\n * @property {(name: string) => JsxAttributeName} createJsxAttributeName\n *   Create a JSX attribute name.\n * @property {(name: string) => JsxElementName} createJsxElementName\n *   Create a JSX element name.\n */\n\nimport {html, svg} from 'property-information'\nimport {position} from 'unist-util-position'\nimport {zwitch} from 'zwitch'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n//\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\n// See: <https://github.com/mdx-js/mdx/issues/2000>\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * Create a state from options.\n *\n * @param {Options} options\n *   Configuration.\n * @returns {State}\n *   Info passed around about the current state.\n */\n\nexport function createState(options) {\n  /** @type {Handle} */\n  const one = zwitch('type', {\n    invalid,\n    unknown,\n    handlers: {...handlers, ...options.handlers}\n  })\n\n  return {\n    // Current space.\n    schema: options.space === 'svg' ? svg : html,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    // Results.\n    comments: [],\n    esm: [],\n    // Useful functions.\n    handle,\n    all,\n    patch,\n    inherit,\n    createJsxAttributeName,\n    createJsxElementName\n  }\n\n  /**\n   * @this {State}\n   * @param {any} node\n   * @returns {JsxChild | null | undefined | void}\n   */\n  function handle(node) {\n    return one(node, this)\n  }\n}\n\n/**\n * Crash on an invalid value.\n *\n * @param {unknown} value\n *   Non-node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node\n *   Unknown node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction unknown(node) {\n  // @ts-expect-error: JS guarantees there’s a `type`.\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/**\n * @this {State} state\n *   Info passed around about the current state.\n * @param {Parent | MdxJsxFlowElement | MdxJsxTextElement} parent\n *   hast node whose children to transform.\n * @returns {Array<JsxChild>}\n *   estree nodes.\n */\nfunction all(parent) {\n  const children = parent.children || []\n  let index = -1\n  /** @type {Array<JsxChild>} */\n  const results = []\n  const ignoreLineBreak =\n    this.schema.space === 'html' &&\n    parent.type === 'element' &&\n    tableElements.has(parent.tagName.toLowerCase())\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (ignoreLineBreak && child.type === 'text' && child.value === '\\n') {\n      continue\n    }\n\n    const result = this.handle(child)\n\n    if (Array.isArray(result)) {\n      results.push(...result)\n    } else if (result) {\n      results.push(result)\n    }\n  }\n\n  return results\n}\n\n/**\n * Take positional info and data from `hast`.\n *\n * Use `patch` if you don’t want data.\n *\n * @param {Node | MdxJsxAttributeValueExpression | MdxJsxAttribute | MdxJsxExpressionAttribute | MdxJsxFlowElement | MdxJsxTextElement | MdxFlowExpression | MdxTextExpression} from\n *   hast node to take positional info and data from.\n * @param {EstreeNode | Comment} to\n *   estree node to add positional info and data to.\n * @returns {void}\n *   Nothing.\n */\nfunction inherit(from, to) {\n  /** @type {Record<string, unknown> | undefined} */\n  const left = from.data\n  /** @type {Record<string, unknown> | undefined} */\n  let right\n  /** @type {string} */\n  let key\n\n  patch(from, to)\n\n  if (left) {\n    for (key in left) {\n      if (own.call(left, key) && key !== 'estree') {\n        if (!right) right = {}\n        right[key] = left[key]\n      }\n    }\n\n    if (right) {\n      // @ts-expect-error `esast` extension.\n      to.data = right\n    }\n  }\n}\n\n/**\n * Take positional info from `from`.\n *\n * Use `inherit` if you also want data.\n *\n * @param {Node | MdxJsxAttributeValueExpression | MdxJsxAttribute | MdxJsxExpressionAttribute | MdxJsxFlowElement | MdxJsxTextElement | MdxFlowExpression | MdxTextExpression} from\n *   hast node to take positional info from.\n * @param {EstreeNode | Comment} to\n *   estree node to add positional info to.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const p = position(from)\n\n  if (\n    p.start.line &&\n    p.start.offset !== undefined &&\n    p.end.offset !== undefined\n  ) {\n    // @ts-expect-error acorn-style.\n    to.start = p.start.offset\n    // @ts-expect-error acorn-style.\n    to.end = p.end.offset\n    to.loc = {\n      start: {line: p.start.line, column: p.start.column - 1},\n      end: {line: p.end.line, column: p.end.column - 1}\n    }\n    to.range = [p.start.offset, p.end.offset]\n  }\n}\n\n/**\n * Create a JSX attribute name.\n *\n * @param {string} name\n * @returns {JsxAttributeName}\n */\nfunction createJsxAttributeName(name) {\n  const node = createJsxNameFromString(name)\n\n  // MDX never generates this.\n  /* c8 ignore next 3 */\n  if (node.type === 'JSXMemberExpression') {\n    throw new Error('Member expressions in attribute names are not supported')\n  }\n\n  return node\n}\n\n/**\n * Create a JSX element name.\n *\n * @param {string} name\n * @returns {JsxElementName}\n */\nfunction createJsxElementName(name) {\n  return createJsxNameFromString(name)\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {string} name\n *   Name.\n * @returns {JsxMemberExpression | JsxNamespacedName | JsxIdentifier}\n *   Node.\n */\nfunction createJsxNameFromString(name) {\n  if (name.includes('.')) {\n    const names = name.split('.')\n    let part = names.shift()\n    /** @type {JsxMemberExpression} */\n    // @ts-expect-error: hush, the first is always defined.\n    let node = {type: 'JSXIdentifier', name: part}\n\n    while ((part = names.shift())) {\n      node = {\n        type: 'JSXMemberExpression',\n        object: node,\n        property: {type: 'JSXIdentifier', name: part}\n      }\n    }\n\n    return node\n  }\n\n  if (name.includes(':')) {\n    const parts = name.split(':')\n    return {\n      type: 'JSXNamespacedName',\n      namespace: {type: 'JSXIdentifier', name: parts[0]},\n      name: {type: 'JSXIdentifier', name: parts[1]}\n    }\n  }\n\n  return {type: 'JSXIdentifier', name}\n}\n", "/**\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('estree').ExpressionStatement} ExpressionStatement\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElement} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpression} MdxTextExpression\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {Root | Content | MdxJsxAttributeValueExpression | MdxJsxAttribute | MdxJsxExpressionAttribute | MdxJsxFlowElement | MdxJsxTextElement | MdxFlowExpression | MdxTextExpression} Node\n */\n\nimport {createState} from './state.js'\n\n/**\n * Transform a hast tree (with embedded MDX nodes) into an estree.\n *\n * ##### Notes\n *\n * ###### Comments\n *\n * Comments are attached to the tree in their neighbouring nodes (`recast`,\n * `babel` style) and also added as a `comments` array on the program node\n * (`espree` style).\n * You may have to do `program.comments = undefined` for certain compilers.\n *\n * ###### Frameworks\n *\n * There are differences between what JSX frameworks accept, such as whether they\n * accept `class` or `className`, or `background-color` or `backgroundColor`.\n *\n * For JSX components written in MDX, the author has to be aware of this\n * difference and write code accordingly.\n * For hast elements transformed by this project, this will be handled through\n * options.\n *\n * | Framework | `elementAttributeNameCase` | `stylePropertyNameCase` |\n * | --------- | -------------------------- | ----------------------- |\n * | Preact    | `'html'`                   | `'dom'`                 |\n * | React     | `'react'`                  | `'dom'`                 |\n * | Solid     | `'html'`                   | `'css'`                 |\n * | Vue       | `'html'`                   | `'dom'`                 |\n *\n * @param {Node} tree\n *   hast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Program}\n *   estree program node.\n *\n *   The program’s last child in `body` is most likely an `ExpressionStatement`,\n *   whose expression is a `JSXFragment` or a `JSXElement`.\n *\n *   Typically, there is only one node in `body`, however, this utility also\n *   supports embedded MDX nodes in the HTML (when `mdast-util-mdx` is used\n *   with mdast to parse markdown before passing its nodes through to hast).\n *   When MDX ESM import/exports are used, those nodes are added before the\n *   fragment or element in body.\n *\n *   There aren’t many great estree serializers out there that support JSX.\n *   To do that, you can use `estree-util-to-js`.\n *   Or, use `estree-util-build-jsx` to turn JSX into function calls, and then\n *   serialize with whatever (`astring`, `escodegen`).\n */\nexport function toEstree(tree, options) {\n  const state = createState(options || {})\n  let result = state.handle(tree)\n  const body = state.esm\n\n  if (result) {\n    if (result.type !== 'JSXFragment' && result.type !== 'JSXElement') {\n      result = {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children: [result]\n      }\n      state.patch(tree, result)\n    }\n\n    /** @type {ExpressionStatement} */\n    // @ts-expect-error Types are wrong (`expression` *can* be JSX).\n    const statement = {type: 'ExpressionStatement', expression: result}\n    state.patch(tree, statement)\n    body.push(statement)\n  }\n\n  /** @type {Program} */\n  const program = {\n    type: 'Program',\n    body,\n    sourceType: 'module',\n    comments: state.comments\n  }\n  state.patch(tree, program)\n  return program\n}\n", "/**\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Specify casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef Options\n *   Configuration for internal plugin `rehype-recma`.\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names.\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects.\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n */\n\nimport {toEstree} from 'hast-util-to-estree'\n\n/**\n * A plugin to transform an HTML (hast) tree to a JS (estree).\n * `hast-util-to-estree` does all the work for us!\n *\n * @type {import('unified').Plugin<[Options | null | undefined] | [], Root, Program>}\n */\nexport function rehypeRecma(options) {\n  return (tree) => toEstree(tree, options)\n}\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('mdast-util-to-hast')} DoNotRemoveUsedToAddRawToNodeType\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * A tiny plugin that removes raw HTML.\n *\n * This is needed if the format is `md` and `rehype-raw` was not used to parse\n * dangerous HTML into nodes.\n *\n * @type {import('unified').Plugin<[], Root>}\n */\nexport function rehypeRemoveRaw() {\n  return (tree) => {\n    visit(tree, 'raw', (_, index, parent) => {\n      if (parent && typeof index === 'number') {\n        parent.children.splice(index, 1)\n        return index\n      }\n    })\n  }\n}\n", "/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('remark-mdx')} DoNotTouchAsThisImportItIncludesMdxInTree\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * A tiny plugin that unravels `<p><h1>x</h1></p>` but also\n * `<p><Component /></p>` (so it has no knowledge of “HTML”).\n *\n * It also marks JSX as being explicitly JSX, so when a user passes a `h1`\n * component, it is used for `# heading` but not for `<h1>heading</h1>`.\n *\n * @type {import('unified').Plugin<[], Root>}\n */\nexport function remarkMarkAndUnravel() {\n  return (tree) => {\n    visit(tree, (node, index, parent) => {\n      let offset = -1\n      let all = true\n      let oneOrMore = false\n\n      if (parent && typeof index === 'number' && node.type === 'paragraph') {\n        const children = node.children\n\n        while (++offset < children.length) {\n          const child = children[offset]\n\n          if (\n            child.type === 'mdxJsxTextElement' ||\n            child.type === 'mdxTextExpression'\n          ) {\n            oneOrMore = true\n          } else if (\n            child.type === 'text' &&\n            /^[\\t\\r\\n ]+$/.test(String(child.value))\n          ) {\n            // Empty.\n          } else {\n            all = false\n            break\n          }\n        }\n\n        if (all && oneOrMore) {\n          offset = -1\n\n          /** @type {Array<Content>} */\n          const newChildren = []\n\n          while (++offset < children.length) {\n            const child = children[offset]\n\n            if (child.type === 'mdxJsxTextElement') {\n              // @ts-expect-error: content model is fine.\n              child.type = 'mdxJsxFlowElement'\n            }\n\n            if (child.type === 'mdxTextExpression') {\n              // @ts-expect-error: content model is fine.\n              child.type = 'mdxFlowExpression'\n            }\n\n            if (\n              child.type === 'text' &&\n              /^[\\t\\r\\n ]+$/.test(String(child.value))\n            ) {\n              // Empty.\n            } else {\n              newChildren.push(child)\n            }\n          }\n\n          parent.children.splice(index, 1, ...newChildren)\n          return index\n        }\n      }\n\n      if (\n        node.type === 'mdxJsxFlowElement' ||\n        node.type === 'mdxJsxTextElement'\n      ) {\n        const data = node.data || (node.data = {})\n        data._mdxExplicitJsx = true\n      }\n    })\n  }\n}\n", "/**\n * List of node types made by `mdast-util-mdx`, which have to be passed\n * through untouched from the mdast tree to the hast tree.\n */\nexport const nodeTypes = [\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n]\n", "export const development = false\n", "/**\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('./plugin/rehype-recma.js').Options} RehypeRecmaOptions\n * @typedef {import('./plugin/recma-document.js').RecmaDocumentOptions} RecmaDocumentOptions\n * @typedef {import('./plugin/recma-stringify.js').RecmaStringifyOptions} RecmaStringifyOptions\n * @typedef {import('./plugin/recma-jsx-rewrite.js').RecmaJsxRewriteOptions} RecmaJsxRewriteOptions\n */\n\n/**\n * @typedef BaseProcessorOptions\n *   Base configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Whether to keep JSX.\n * @property {'mdx' | 'md' | null | undefined} [format='mdx']\n *   Format of the files to be processed.\n * @property {'function-body' | 'program'} [outputFormat='program']\n *   Whether to compile to a whole program or a function body..\n * @property {Array<string> | null | undefined} [mdExtensions]\n *   Extensions (with `.`) for markdown.\n * @property {Array<string> | null | undefined} [mdxExtensions]\n *   Extensions (with `.`) for MDX.\n * @property {PluggableList | null | undefined} [recmaPlugins]\n *   List of recma (esast, JavaScript) plugins.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark (mdast, markdown) plugins.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype (hast, HTML) plugins.\n * @property {RemarkRehypeOptions | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n *\n * @typedef {Omit<RehypeRecmaOptions & RecmaDocumentOptions & RecmaStringifyOptions & RecmaJsxRewriteOptions, 'outputFormat'>} PluginOptions\n *   Configuration for internal plugins.\n *\n * @typedef {BaseProcessorOptions & PluginOptions} ProcessorOptions\n *   Configuration for processor.\n */\n\nimport {unified} from 'unified'\nimport remarkMdx from 'remark-mdx'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {recmaJsxBuild} from './plugin/recma-jsx-build.js'\nimport {recmaDocument} from './plugin/recma-document.js'\nimport {recmaJsxRewrite} from './plugin/recma-jsx-rewrite.js'\nimport {recmaStringify} from './plugin/recma-stringify.js'\nimport {rehypeRecma} from './plugin/rehype-recma.js'\nimport {rehypeRemoveRaw} from './plugin/rehype-remove-raw.js'\nimport {remarkMarkAndUnravel} from './plugin/remark-mark-and-unravel.js'\nimport {nodeTypes} from './node-types.js'\nimport {development as defaultDevelopment} from './condition.js'\n\nconst removedOptions = [\n  'filepath',\n  'compilers',\n  'hastPlugins',\n  'mdPlugins',\n  'skipExport',\n  'wrapExport'\n]\n\n/**\n * Pipeline to:\n *\n * 1. Parse MDX (serialized markdown with embedded JSX, ESM, and  expressions)\n * 2. Transform through remark (mdast), rehype (hast), and recma (esast)\n * 3. Serialize as JavaScript\n *\n * @param {ProcessorOptions | null | undefined} [options]\n *   Configuration.\n * @return {Processor}\n *   Processor.\n */\nexport function createProcessor(options) {\n  const {\n    development,\n    jsx,\n    format,\n    outputFormat,\n    providerImportSource,\n    recmaPlugins,\n    rehypePlugins,\n    remarkPlugins,\n    remarkRehypeOptions,\n    elementAttributeNameCase,\n    stylePropertyNameCase,\n    SourceMapGenerator,\n    ...rest\n  } = options || {}\n  const dev =\n    development === null || development === undefined\n      ? defaultDevelopment\n      : development\n  let index = -1\n\n  while (++index < removedOptions.length) {\n    const key = removedOptions[index]\n    if (options && key in options) {\n      throw new Error(\n        '`options.' +\n          key +\n          '` is no longer supported. Please see <https://mdxjs.com/migrating/v2/> for more information'\n      )\n    }\n  }\n\n  // @ts-expect-error runtime exception for disallowed field here, which is\n  // allowed in `compile`.\n  if (format === 'detect') {\n    throw new Error(\n      \"Incorrect `format: 'detect'`: `createProcessor` can support either `md` or `mdx`; it does not support detecting the format\"\n    )\n  }\n\n  const pipeline = unified().use(remarkParse)\n\n  if (format !== 'md') {\n    pipeline.use(remarkMdx)\n  }\n\n  const extraNodeTypes = remarkRehypeOptions\n    ? /* c8 ignore next */\n      remarkRehypeOptions.passThrough || []\n    : []\n\n  pipeline\n    .use(remarkMarkAndUnravel)\n    .use(remarkPlugins || [])\n    .use(remarkRehype, {\n      ...remarkRehypeOptions,\n      allowDangerousHtml: true,\n      passThrough: [...extraNodeTypes, ...nodeTypes]\n    })\n    .use(rehypePlugins || [])\n\n  if (format === 'md') {\n    pipeline.use(rehypeRemoveRaw)\n  }\n\n  pipeline\n    .use(rehypeRecma, {elementAttributeNameCase, stylePropertyNameCase})\n    .use(recmaDocument, {...rest, outputFormat})\n    .use(recmaJsxRewrite, {\n      development: dev,\n      providerImportSource,\n      outputFormat\n    })\n\n  if (!jsx) {\n    pipeline.use(recmaJsxBuild, {development: dev, outputFormat})\n  }\n\n  pipeline.use(recmaStringify, {SourceMapGenerator}).use(recmaPlugins || [])\n\n  return pipeline\n}\n", "// @ts-expect-error: untyped.\nimport markdownExtensions from 'markdown-extensions'\n\nexport const mdx = ['.mdx']\n/** @type {Array<string>} */\nexport const md = markdownExtensions.map((/** @type {string} */ d) => '.' + d)\n", "/**\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('../core.js').ProcessorOptions} ProcessorOptions\n * @typedef {import('../compile.js').CompileOptions} CompileOptions\n */\n\nimport {VFile} from 'vfile'\nimport {md} from './extnames.js'\n\n/**\n * Create a file and options from a given `vfileCompatible` and options that\n * might contain `format: 'detect'`.\n *\n * @param {VFileCompatible} vfileCompatible\n * @param {CompileOptions | null | undefined} [options]\n * @returns {{file: VFile, options: ProcessorOptions}}\n */\nexport function resolveFileAndOptions(vfileCompatible, options) {\n  const file = looksLikeAVFile(vfileCompatible)\n    ? vfileCompatible\n    : new VFile(vfileCompatible)\n  const {format, ...rest} = options || {}\n  return {\n    file,\n    options: {\n      format:\n        format === 'md' || format === 'mdx'\n          ? format\n          : file.extname && (rest.mdExtensions || md).includes(file.extname)\n          ? 'md'\n          : 'mdx',\n      ...rest\n    }\n  }\n}\n\n/**\n * @param {VFileCompatible | null | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n", "/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('./core.js').PluginOptions} PluginOptions\n * @typedef {import('./core.js').BaseProcessorOptions} BaseProcessorOptions\n */\n\n/**\n * @typedef {Omit<BaseProcessorOptions, 'format'>} CoreProcessorOptions\n *   Core configuration.\n *\n * @typedef ExtraOptions\n *   Extra configuration.\n * @property {'detect' | 'mdx' | 'md' | null | undefined} [format='detect']\n *   Format of `file`.\n *\n * @typedef {CoreProcessorOptions & PluginOptions & ExtraOptions} CompileOptions\n *   Configuration.\n */\n\nimport {createProcessor} from './core.js'\nimport {resolveFileAndOptions} from './util/resolve-file-and-options.js'\n\n/**\n * Compile MDX to JS.\n *\n * @param {VFileCompatible} vfileCompatible\n *   MDX document to parse (`string`, `Buffer`, `vfile`, anything that can be\n *   given to `vfile`).\n * @param {CompileOptions | null | undefined} [compileOptions]\n *   Compile configuration.\n * @return {Promise<VFile>}\n *   File.\n */\nexport function compile(vfileCompatible, compileOptions) {\n  const {file, options} = resolveFileAndOptions(vfileCompatible, compileOptions)\n  return createProcessor(options).process(file)\n}\n\n/**\n * Synchronously compile MDX to JS.\n *\n * @param {VFileCompatible} vfileCompatible\n *   MDX document to parse (`string`, `Buffer`, `vfile`, anything that can be\n *   given to `vfile`).\n * @param {CompileOptions | null | undefined} [compileOptions]\n *   Compile configuration.\n * @return {VFile}\n *   File.\n */\nexport function compileSync(vfileCompatible, compileOptions) {\n  const {file, options} = resolveFileAndOptions(vfileCompatible, compileOptions)\n  return createProcessor(options).processSync(file)\n}\n", "/** @type {new (code: string, ...args: Array<unknown>) => Function} **/\nconst AsyncFunction = Object.getPrototypeOf(run).constructor\n\n/**\n * Asynchronously run code.\n *\n * @param {{toString(): string}} file\n *   JS document to run.\n * @param {unknown} options\n *   Parameter.\n * @return {Promise<any>}\n *   Anthing.\n */\nexport async function run(file, options) {\n  return new AsyncFunction(String(file))(options)\n}\n\n/**\n * Synchronously run code.\n *\n * @param {{toString(): string}} file\n *   JS document to run.\n * @param {unknown} options\n *   Parameter.\n * @return {any}\n *   Anthing.\n */\nexport function runSync(file, options) {\n  // eslint-disable-next-line no-new-func\n  return new Function(String(file))(options)\n}\n", "/**\n * @typedef {import('@rollup/pluginutils').FilterPattern} FilterPattern\n * @typedef {import('rollup').Plugin} Plugin\n * @typedef {import('rollup').SourceDescription} SourceDescription\n */\n\n/**\n * @typedef {Omit<import('@mdx-js/mdx').CompileOptions, 'SourceMapGenerator'>} CompileOptions\n *   Default configuration.\n *\n * @typedef RollupPluginOptions\n *   Extra configuration.\n * @property {FilterPattern} [include]\n *   List of picomatch patterns to include\n * @property {FilterPattern} [exclude]\n *   List of picomatch patterns to exclude\n *\n * @typedef {CompileOptions & RollupPluginOptions} Options\n *   Configuration.\n */\n\nimport {SourceMapGenerator} from 'source-map'\nimport {VFile} from 'vfile'\nimport {createFilter} from '@rollup/pluginutils'\nimport {createFormatAwareProcessors} from '@mdx-js/mdx/lib/util/create-format-aware-processors.js'\n\n/**\n * Compile MDX w/ rollup.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @return {Plugin}\n *   Rollup plugin.\n */\nexport function rollup(options) {\n  const {include, exclude, ...rest} = options || {}\n  const {extnames, process} = createFormatAwareProcessors({\n    SourceMapGenerator,\n    ...rest\n  })\n  const filter = createFilter(include, exclude)\n\n  return {\n    name: '@mdx-js/rollup',\n    async transform(value, path) {\n      const file = new VFile({value, path})\n\n      if (\n        file.extname &&\n        filter(file.path) &&\n        extnames.includes(file.extname)\n      ) {\n        const compiled = await process(file)\n        const code = String(compiled.value)\n        /** @type {SourceDescription} */\n        // @ts-expect-error: a) `undefined` is fine, b) `sourceRoot: undefined` is fine too.\n        const result = {code, map: compiled.map}\n        return result\n      }\n    }\n  }\n}\n", "import { extname, win32, posix, isAbsolute, resolve } from 'path';\nimport { walk } from 'estree-walker';\nimport pm from 'picomatch';\n\nconst addExtension = function addExtension(filename, ext = '.js') {\n    let result = `${filename}`;\n    if (!extname(filename))\n        result += ext;\n    return result;\n};\n\nconst extractors = {\n    ArrayPattern(names, param) {\n        for (const element of param.elements) {\n            if (element)\n                extractors[element.type](names, element);\n        }\n    },\n    AssignmentPattern(names, param) {\n        extractors[param.left.type](names, param.left);\n    },\n    Identifier(names, param) {\n        names.push(param.name);\n    },\n    MemberExpression() { },\n    ObjectPattern(names, param) {\n        for (const prop of param.properties) {\n            // @ts-ignore Typescript reports that this is not a valid type\n            if (prop.type === 'RestElement') {\n                extractors.RestElement(names, prop);\n            }\n            else {\n                extractors[prop.value.type](names, prop.value);\n            }\n        }\n    },\n    RestElement(names, param) {\n        extractors[param.argument.type](names, param.argument);\n    }\n};\nconst extractAssignedNames = function extractAssignedNames(param) {\n    const names = [];\n    extractors[param.type](names, param);\n    return names;\n};\n\nconst blockDeclarations = {\n    const: true,\n    let: true\n};\nclass Scope {\n    constructor(options = {}) {\n        this.parent = options.parent;\n        this.isBlockScope = !!options.block;\n        this.declarations = Object.create(null);\n        if (options.params) {\n            options.params.forEach((param) => {\n                extractAssignedNames(param).forEach((name) => {\n                    this.declarations[name] = true;\n                });\n            });\n        }\n    }\n    addDeclaration(node, isBlockDeclaration, isVar) {\n        if (!isBlockDeclaration && this.isBlockScope) {\n            // it's a `var` or function node, and this\n            // is a block scope, so we need to go up\n            this.parent.addDeclaration(node, isBlockDeclaration, isVar);\n        }\n        else if (node.id) {\n            extractAssignedNames(node.id).forEach((name) => {\n                this.declarations[name] = true;\n            });\n        }\n    }\n    contains(name) {\n        return this.declarations[name] || (this.parent ? this.parent.contains(name) : false);\n    }\n}\nconst attachScopes = function attachScopes(ast, propertyName = 'scope') {\n    let scope = new Scope();\n    walk(ast, {\n        enter(n, parent) {\n            const node = n;\n            // function foo () {...}\n            // class Foo {...}\n            if (/(Function|Class)Declaration/.test(node.type)) {\n                scope.addDeclaration(node, false, false);\n            }\n            // var foo = 1\n            if (node.type === 'VariableDeclaration') {\n                const { kind } = node;\n                const isBlockDeclaration = blockDeclarations[kind];\n                node.declarations.forEach((declaration) => {\n                    scope.addDeclaration(declaration, isBlockDeclaration, true);\n                });\n            }\n            let newScope;\n            // create new function scope\n            if (/Function/.test(node.type)) {\n                const func = node;\n                newScope = new Scope({\n                    parent: scope,\n                    block: false,\n                    params: func.params\n                });\n                // named function expressions - the name is considered\n                // part of the function's scope\n                if (func.type === 'FunctionExpression' && func.id) {\n                    newScope.addDeclaration(func, false, false);\n                }\n            }\n            // create new for scope\n            if (/For(In|Of)?Statement/.test(node.type)) {\n                newScope = new Scope({\n                    parent: scope,\n                    block: true\n                });\n            }\n            // create new block scope\n            if (node.type === 'BlockStatement' && !/Function/.test(parent.type)) {\n                newScope = new Scope({\n                    parent: scope,\n                    block: true\n                });\n            }\n            // catch clause has its own block scope\n            if (node.type === 'CatchClause') {\n                newScope = new Scope({\n                    parent: scope,\n                    params: node.param ? [node.param] : [],\n                    block: true\n                });\n            }\n            if (newScope) {\n                Object.defineProperty(node, propertyName, {\n                    value: newScope,\n                    configurable: true\n                });\n                scope = newScope;\n            }\n        },\n        leave(n) {\n            const node = n;\n            if (node[propertyName])\n                scope = scope.parent;\n        }\n    });\n    return scope;\n};\n\n// Helper since Typescript can't detect readonly arrays with Array.isArray\nfunction isArray(arg) {\n    return Array.isArray(arg);\n}\nfunction ensureArray(thing) {\n    if (isArray(thing))\n        return thing;\n    if (thing == null)\n        return [];\n    return [thing];\n}\n\nconst normalizePath = function normalizePath(filename) {\n    return filename.split(win32.sep).join(posix.sep);\n};\n\nfunction getMatcherString(id, resolutionBase) {\n    if (resolutionBase === false || isAbsolute(id) || id.startsWith('*')) {\n        return normalizePath(id);\n    }\n    // resolve('') is valid and will default to process.cwd()\n    const basePath = normalizePath(resolve(resolutionBase || ''))\n        // escape all possible (posix + win) path characters that might interfere with regex\n        .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\n    // Note that we use posix.join because:\n    // 1. the basePath has been normalized to use /\n    // 2. the incoming glob (id) matcher, also uses /\n    // otherwise Node will force backslash (\\) on windows\n    return posix.join(basePath, normalizePath(id));\n}\nconst createFilter = function createFilter(include, exclude, options) {\n    const resolutionBase = options && options.resolve;\n    const getMatcher = (id) => id instanceof RegExp\n        ? id\n        : {\n            test: (what) => {\n                // this refactor is a tad overly verbose but makes for easy debugging\n                const pattern = getMatcherString(id, resolutionBase);\n                const fn = pm(pattern, { dot: true });\n                const result = fn(what);\n                return result;\n            }\n        };\n    const includeMatchers = ensureArray(include).map(getMatcher);\n    const excludeMatchers = ensureArray(exclude).map(getMatcher);\n    return function result(id) {\n        if (typeof id !== 'string')\n            return false;\n        if (/\\0/.test(id))\n            return false;\n        const pathId = normalizePath(id);\n        for (let i = 0; i < excludeMatchers.length; ++i) {\n            const matcher = excludeMatchers[i];\n            if (matcher.test(pathId))\n                return false;\n        }\n        for (let i = 0; i < includeMatchers.length; ++i) {\n            const matcher = includeMatchers[i];\n            if (matcher.test(pathId))\n                return true;\n        }\n        return !includeMatchers.length;\n    };\n};\n\nconst reservedWords = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\nconst builtins = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\nconst forbiddenIdentifiers = new Set(`${reservedWords} ${builtins}`.split(' '));\nforbiddenIdentifiers.add('');\nconst makeLegalIdentifier = function makeLegalIdentifier(str) {\n    let identifier = str\n        .replace(/-(\\w)/g, (_, letter) => letter.toUpperCase())\n        .replace(/[^$_a-zA-Z0-9]/g, '_');\n    if (/\\d/.test(identifier[0]) || forbiddenIdentifiers.has(identifier)) {\n        identifier = `_${identifier}`;\n    }\n    return identifier || '_';\n};\n\nfunction stringify(obj) {\n    return (JSON.stringify(obj) || 'undefined').replace(/[\\u2028\\u2029]/g, (char) => `\\\\u${`000${char.charCodeAt(0).toString(16)}`.slice(-4)}`);\n}\nfunction serializeArray(arr, indent, baseIndent) {\n    let output = '[';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    for (let i = 0; i < arr.length; i++) {\n        const key = arr[i];\n        output += `${i > 0 ? ',' : ''}${separator}${serialize(key, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}]`;\n}\nfunction serializeObject(obj, indent, baseIndent) {\n    let output = '{';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    const entries = Object.entries(obj);\n    for (let i = 0; i < entries.length; i++) {\n        const [key, value] = entries[i];\n        const stringKey = makeLegalIdentifier(key) === key ? key : stringify(key);\n        output += `${i > 0 ? ',' : ''}${separator}${stringKey}:${indent ? ' ' : ''}${serialize(value, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}}`;\n}\nfunction serialize(obj, indent, baseIndent) {\n    if (typeof obj === 'object' && obj !== null) {\n        if (Array.isArray(obj))\n            return serializeArray(obj, indent, baseIndent);\n        if (obj instanceof Date)\n            return `new Date(${obj.getTime()})`;\n        if (obj instanceof RegExp)\n            return obj.toString();\n        return serializeObject(obj, indent, baseIndent);\n    }\n    if (typeof obj === 'number') {\n        if (obj === Infinity)\n            return 'Infinity';\n        if (obj === -Infinity)\n            return '-Infinity';\n        if (obj === 0)\n            return 1 / obj === Infinity ? '0' : '-0';\n        if (obj !== obj)\n            return 'NaN'; // eslint-disable-line no-self-compare\n    }\n    if (typeof obj === 'symbol') {\n        const key = Symbol.keyFor(obj);\n        // eslint-disable-next-line no-undefined\n        if (key !== undefined)\n            return `Symbol.for(${stringify(key)})`;\n    }\n    if (typeof obj === 'bigint')\n        return `${obj}n`;\n    return stringify(obj);\n}\nconst dataToEsm = function dataToEsm(data, options = {}) {\n    const t = options.compact ? '' : 'indent' in options ? options.indent : '\\t';\n    const _ = options.compact ? '' : ' ';\n    const n = options.compact ? '' : '\\n';\n    const declarationType = options.preferConst ? 'const' : 'var';\n    if (options.namedExports === false ||\n        typeof data !== 'object' ||\n        Array.isArray(data) ||\n        data instanceof Date ||\n        data instanceof RegExp ||\n        data === null) {\n        const code = serialize(data, options.compact ? null : t, '');\n        const magic = _ || (/^[{[\\-\\/]/.test(code) ? '' : ' '); // eslint-disable-line no-useless-escape\n        return `export default${magic}${code};`;\n    }\n    let namedExportCode = '';\n    const defaultExportRows = [];\n    for (const [key, value] of Object.entries(data)) {\n        if (key === makeLegalIdentifier(key)) {\n            if (options.objectShorthand)\n                defaultExportRows.push(key);\n            else\n                defaultExportRows.push(`${key}:${_}${key}`);\n            namedExportCode += `export ${declarationType} ${key}${_}=${_}${serialize(value, options.compact ? null : t, '')};${n}`;\n        }\n        else {\n            defaultExportRows.push(`${stringify(key)}:${_}${serialize(value, options.compact ? null : t, '')}`);\n        }\n    }\n    return `${namedExportCode}export default${_}{${n}${t}${defaultExportRows.join(`,${n}${t}`)}${n}};${n}`;\n};\n\n// TODO: remove this in next major\nvar index = {\n    addExtension,\n    attachScopes,\n    createFilter,\n    dataToEsm,\n    extractAssignedNames,\n    makeLegalIdentifier,\n    normalizePath\n};\n\nexport { addExtension, attachScopes, createFilter, dataToEsm, index as default, extractAssignedNames, makeLegalIdentifier, normalizePath };\n//# sourceMappingURL=index.js.map\n", "/**\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('../compile.js').CompileOptions} CompileOptions\n */\n\nimport {createProcessor} from '../core.js'\nimport {md, mdx} from './extnames.js'\nimport {resolveFileAndOptions} from './resolve-file-and-options.js'\n\n/**\n * Create smart processors to handle different formats.\n *\n * @param {CompileOptions | null | undefined} [compileOptions]\n *   configuration.\n * @return {{extnames: Array<string>, process: process, processSync: processSync}}\n *   Smart processor.\n */\nexport function createFormatAwareProcessors(compileOptions) {\n  const compileOptions_ = compileOptions || {}\n  const mdExtensions = compileOptions_.mdExtensions || md\n  const mdxExtensions = compileOptions_.mdxExtensions || mdx\n  /** @type {Processor} */\n  let cachedMarkdown\n  /** @type {Processor} */\n  let cachedMdx\n\n  return {\n    extnames:\n      compileOptions_.format === 'md'\n        ? mdExtensions\n        : compileOptions_.format === 'mdx'\n        ? mdxExtensions\n        : mdExtensions.concat(mdxExtensions),\n    process,\n    processSync\n  }\n\n  /**\n   * Smart processor.\n   *\n   * @param {VFileCompatible} vfileCompatible\n   *   MDX or markdown document.\n   * @return {Promise<VFile>}\n   *   File.\n   */\n  function process(vfileCompatible) {\n    const {file, processor} = split(vfileCompatible)\n    return processor.process(file)\n  }\n\n  /**\n   * Sync smart processor.\n   *\n   * @param {VFileCompatible} vfileCompatible\n   *   MDX or markdown document.\n   * @return {VFile}\n   *   File.\n   */\n  // C8 does not cover `.cjs` files (this is only used for the require hook,\n  // which has to be CJS).\n  /* c8 ignore next 4 */\n  function processSync(vfileCompatible) {\n    const {file, processor} = split(vfileCompatible)\n    return processor.processSync(file)\n  }\n\n  /**\n   * Make a full vfile from what’s given, and figure out which processor\n   * should be used for it.\n   * This caches processors (one for markdown and one for MDX) so that they do\n   * not have to be reconstructed for each file.\n   *\n   * @param {VFileCompatible} vfileCompatible\n   *   MDX or markdown document.\n   * @return {{file: VFile, processor: Processor}}\n   *   File and corresponding processor.\n   */\n  function split(vfileCompatible) {\n    const {file, options} = resolveFileAndOptions(\n      vfileCompatible,\n      compileOptions_\n    )\n    const processor =\n      options.format === 'md'\n        ? cachedMarkdown || (cachedMarkdown = createProcessor(options))\n        : cachedMdx || (cachedMdx = createProcessor(options))\n    return {file, processor}\n  }\n}\n", "/* es-module-lexer 0.10.5 */\nconst A=1===new Uint8Array(new Uint16Array([1]).buffer)[0];export function parse(E,g=\"@\"){if(!C)return init.then((()=>parse(E)));const I=E.length+1,o=(C.__heap_base.value||C.__heap_base)+4*I-C.memory.buffer.byteLength;o>0&&C.memory.grow(Math.ceil(o/65536));const k=C.sa(I-1);if((A?B:Q)(E,new Uint16Array(C.memory.buffer,k,I)),!C.parse())throw Object.assign(new Error(`Parse error ${g}:${E.slice(0,C.e()).split(\"\\n\").length}:${C.e()-E.lastIndexOf(\"\\n\",C.e()-1)}`),{idx:C.e()});const J=[],i=[];for(;C.ri();){const A=C.is(),Q=C.ie(),B=C.ai(),g=C.id(),I=C.ss(),o=C.se();let k;C.ip()&&(k=w(E.slice(-1===g?A-1:A,-1===g?Q+1:Q))),J.push({n:k,s:A,e:Q,ss:I,se:o,d:g,a:B})}for(;C.re();){const A=E.slice(C.es(),C.ee()),Q=A[0];i.push('\"'===Q||\"'\"===Q?w(A):A)}function w(A){try{return(0,eval)(A)}catch(A){}}return[J,i,!!C.f()]}function Q(A,Q){const B=A.length;let C=0;for(;C<B;){const B=A.charCodeAt(C);Q[C++]=(255&B)<<8|B>>>8}}function B(A,Q){const B=A.length;let C=0;for(;C<B;)Q[C]=A.charCodeAt(C++)}let C;export const init=WebAssembly.compile((E=\"\",\"undefined\"!=typeof Buffer?Buffer.from(E,\"base64\"):Uint8Array.from(atob(E),(A=>A.charCodeAt(0))))).then(WebAssembly.instantiate).then((({exports:A})=>{C=A}));var E;", "import { markdownConfigDefaults } from \"@astrojs/markdown-remark\";\nimport { toRemarkInitializeAstroData } from \"@astrojs/markdown-remark/dist/internal.js\";\nimport { compile as mdxCompile } from \"@mdx-js/mdx\";\nimport mdxPlugin from \"@mdx-js/rollup\";\nimport { parse as parseESM } from \"es-module-lexer\";\nimport fs from \"node:fs/promises\";\nimport { VFile } from \"vfile\";\nimport { getRehypePlugins, getRemarkPlugins, recmaInjectImportMetaEnvPlugin } from \"./plugins.js\";\nimport { getFileInfo, parseFrontmatter } from \"./utils.js\";\nfunction mdx(partialMdxOptions = {}) {\n  return {\n    name: \"@astrojs/mdx\",\n    hooks: {\n      \"astro:config:setup\": async ({ updateConfig, config, addPageExtension, command }) => {\n        addPageExtension(\".mdx\");\n        const extendMarkdownConfig = partialMdxOptions.extendMarkdownConfig ?? defaultOptions.extendMarkdownConfig;\n        const mdxOptions = applyDefaultOptions({\n          options: partialMdxOptions,\n          defaults: extendMarkdownConfig ? config.markdown : defaultOptions\n        });\n        const mdxPluginOpts = {\n          remarkPlugins: await getRemarkPlugins(mdxOptions, config),\n          rehypePlugins: getRehypePlugins(mdxOptions),\n          recmaPlugins: mdxOptions.recmaPlugins,\n          remarkRehypeOptions: mdxOptions.remarkRehype,\n          jsx: true,\n          jsxImportSource: \"astro\",\n          format: \"mdx\",\n          mdExtensions: []\n        };\n        let importMetaEnv = {\n          SITE: config.site\n        };\n        updateConfig({\n          vite: {\n            plugins: [\n              {\n                enforce: \"pre\",\n                ...mdxPlugin(mdxPluginOpts),\n                configResolved(resolved) {\n                  importMetaEnv = { ...importMetaEnv, ...resolved.env };\n                },\n                async transform(_, id) {\n                  if (!id.endsWith(\"mdx\"))\n                    return;\n                  const { fileId } = getFileInfo(id, config);\n                  const code = await fs.readFile(fileId, \"utf-8\");\n                  const { data: frontmatter, content: pageContent } = parseFrontmatter(code, id);\n                  const compiled = await mdxCompile(new VFile({ value: pageContent, path: id }), {\n                    ...mdxPluginOpts,\n                    elementAttributeNameCase: \"html\",\n                    remarkPlugins: [\n                      toRemarkInitializeAstroData({ userFrontmatter: frontmatter }),\n                      ...mdxPluginOpts.remarkPlugins ?? []\n                    ],\n                    recmaPlugins: [\n                      ...mdxPluginOpts.recmaPlugins ?? [],\n                      () => recmaInjectImportMetaEnvPlugin({ importMetaEnv })\n                    ]\n                  });\n                  return {\n                    code: escapeViteEnvReferences(String(compiled.value)),\n                    map: compiled.map\n                  };\n                }\n              },\n              {\n                name: \"@astrojs/mdx-postprocess\",\n                transform(code, id) {\n                  if (!id.endsWith(\".mdx\"))\n                    return;\n                  const [moduleImports, moduleExports] = parseESM(code);\n                  const importsFromJSXRuntime = moduleImports.filter(({ n }) => n === \"astro/jsx-runtime\").map(({ ss, se }) => code.substring(ss, se));\n                  const hasFragmentImport = importsFromJSXRuntime.some(\n                    (statement) => /[\\s,{](Fragment,|Fragment\\s*})/.test(statement)\n                  );\n                  if (!hasFragmentImport) {\n                    code = 'import { Fragment } from \"astro/jsx-runtime\"\\n' + code;\n                  }\n                  const { fileUrl, fileId } = getFileInfo(id, config);\n                  if (!moduleExports.includes(\"url\")) {\n                    code += `\nexport const url = ${JSON.stringify(fileUrl)};`;\n                  }\n                  if (!moduleExports.includes(\"file\")) {\n                    code += `\nexport const file = ${JSON.stringify(fileId)};`;\n                  }\n                  if (!moduleExports.includes(\"Content\")) {\n                    code = code.replace(\"export default MDXContent;\", \"\");\n                    code += `\nexport const Content = (props = {}) => MDXContent({\n\t\t\t\t\t\t\t\t\t\t\t...props,\n\t\t\t\t\t\t\t\t\t\t\tcomponents: { Fragment, ...props.components },\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\texport default Content;`;\n                  }\n                  code += `\nContent[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter.layout);`;\n                  if (command === \"dev\") {\n                    code += `\nif (import.meta.hot) {\n\t\t\t\t\t\t\t\t\t\t\timport.meta.hot.decline();\n\t\t\t\t\t\t\t\t\t\t}`;\n                  }\n                  return escapeViteEnvReferences(code);\n                }\n              }\n            ]\n          }\n        });\n      }\n    }\n  };\n}\nconst defaultOptions = {\n  ...markdownConfigDefaults,\n  extendMarkdownConfig: true,\n  recmaPlugins: [],\n  remarkPlugins: [],\n  rehypePlugins: [],\n  remarkRehype: {}\n};\nfunction applyDefaultOptions({\n  options,\n  defaults\n}) {\n  return {\n    syntaxHighlight: options.syntaxHighlight ?? defaults.syntaxHighlight,\n    extendMarkdownConfig: options.extendMarkdownConfig ?? defaults.extendMarkdownConfig,\n    recmaPlugins: options.recmaPlugins ?? defaults.recmaPlugins,\n    remarkRehype: options.remarkRehype ?? defaults.remarkRehype,\n    gfm: options.gfm ?? defaults.gfm,\n    smartypants: options.smartypants ?? defaults.smartypants,\n    remarkPlugins: options.remarkPlugins ?? defaults.remarkPlugins,\n    rehypePlugins: options.rehypePlugins ?? defaults.rehypePlugins,\n    shikiConfig: options.shikiConfig ?? defaults.shikiConfig\n  };\n}\nfunction escapeViteEnvReferences(code) {\n  return code.replace(/import\\.meta\\.env/g, \"import\\\\u002Emeta.env\");\n}\nexport {\n  mdx as default\n};\n", "let FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nexport const $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t)\n}\n\nfunction init(x, y) {\n\tlet rgx = new RegExp(`\\\\x1b\\\\[${y}m`, 'g');\n\tlet open = `\\x1b[${x}m`, close = `\\x1b[${y}m`;\n\n\treturn function (txt) {\n\t\tif (!$.enabled || txt == null) return txt;\n\t\treturn open + (!!~(''+txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n\t};\n}\n\n// modifiers\nexport const reset = init(0, 0);\nexport const bold = init(1, 22);\nexport const dim = init(2, 22);\nexport const italic = init(3, 23);\nexport const underline = init(4, 24);\nexport const inverse = init(7, 27);\nexport const hidden = init(8, 28);\nexport const strikethrough = init(9, 29);\n\n// colors\nexport const black = init(30, 39);\nexport const red = init(31, 39);\nexport const green = init(32, 39);\nexport const yellow = init(33, 39);\nexport const blue = init(34, 39);\nexport const magenta = init(35, 39);\nexport const cyan = init(36, 39);\nexport const white = init(37, 39);\nexport const gray = init(90, 39);\nexport const grey = init(90, 39);\n\n// background colors\nexport const bgBlack = init(40, 49);\nexport const bgRed = init(41, 49);\nexport const bgGreen = init(42, 49);\nexport const bgYellow = init(43, 49);\nexport const bgBlue = init(44, 49);\nexport const bgMagenta = init(45, 49);\nexport const bgCyan = init(46, 49);\nexport const bgWhite = init(47, 49);\n", "import { rehypeHeadingIds } from \"@astrojs/markdown-remark\";\nimport {\n  InvalidAstroDataError,\n  safelyGetAstroData\n} from \"@astrojs/markdown-remark/dist/internal.js\";\nimport { nodeTypes } from \"@mdx-js/mdx\";\nimport { visit as estreeVisit } from \"estree-util-visit\";\nimport { bold, yellow } from \"kleur/colors\";\nimport { pathToFileURL } from \"node:url\";\nimport rehypeRaw from \"rehype-raw\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkSmartypants from \"remark-smartypants\";\nimport { visit } from \"unist-util-visit\";\nimport { rehypeInjectHeadingsExport } from \"./rehype-collect-headings.js\";\nimport rehypeMetaString from \"./rehype-meta-string.js\";\nimport remarkPrism from \"./remark-prism.js\";\nimport remarkShiki from \"./remark-shiki.js\";\nimport { isRelativePath, jsToTreeNode } from \"./utils.js\";\nfunction recmaInjectImportMetaEnvPlugin({\n  importMetaEnv\n}) {\n  return (tree) => {\n    estreeVisit(tree, (node) => {\n      if (node.type === \"MemberExpression\") {\n        const envVarName = getImportMetaEnvVariableName(node);\n        if (typeof envVarName === \"string\") {\n          for (const key in node) {\n            delete node[key];\n          }\n          const envVarLiteral = {\n            type: \"Literal\",\n            value: importMetaEnv[envVarName],\n            raw: JSON.stringify(importMetaEnv[envVarName])\n          };\n          Object.assign(node, envVarLiteral);\n        }\n      }\n    });\n  };\n}\nfunction rehypeApplyFrontmatterExport() {\n  return function(tree, vfile) {\n    const astroData = safelyGetAstroData(vfile.data);\n    if (astroData instanceof InvalidAstroDataError)\n      throw new Error(\n        '[MDX] A remark or rehype plugin attempted to inject invalid frontmatter. Ensure \"astro.frontmatter\" is set to a valid JSON object that is not `null` or `undefined`.'\n      );\n    const { frontmatter } = astroData;\n    const exportNodes = [\n      jsToTreeNode(`export const frontmatter = ${JSON.stringify(frontmatter)};`)\n    ];\n    if (frontmatter.layout) {\n      exportNodes.unshift(\n        jsToTreeNode(\n          `import { jsx as layoutJsx } from 'astro/jsx-runtime';\n\n\t\t\t\texport default async function ({ children }) {\n\t\t\t\t\tconst Layout = (await import(${JSON.stringify(frontmatter.layout)})).default;\n\t\t\t\t\tconst { layout, ...content } = frontmatter;\n\t\t\t\t\tcontent.file = file;\n\t\t\t\t\tcontent.url = url;\n\t\t\t\t\treturn layoutJsx(Layout, {\n\t\t\t\t\t\tfile,\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tfrontmatter: content,\n\t\t\t\t\t\theadings: getHeadings(),\n\t\t\t\t\t\t'server:root': true,\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t});\n\t\t\t\t};`\n        )\n      );\n    }\n    tree.children = exportNodes.concat(tree.children);\n  };\n}\nfunction toRemarkContentRelImageError({ srcDir }) {\n  const contentDir = new URL(\"content/\", srcDir);\n  return function remarkContentRelImageError() {\n    return (tree, vfile) => {\n      const isContentFile = pathToFileURL(vfile.path).href.startsWith(contentDir.href);\n      if (!isContentFile)\n        return;\n      const relImagePaths = /* @__PURE__ */ new Set();\n      visit(tree, \"image\", function raiseError(node) {\n        if (isRelativePath(node.url)) {\n          relImagePaths.add(node.url);\n        }\n      });\n      if (relImagePaths.size === 0)\n        return;\n      const errorMessage = `Relative image paths are not supported in the content/ directory. Place local images in the public/ directory and use absolute paths (see https://docs.astro.build/en/guides/images/#in-markdown-files):\n` + [...relImagePaths].map((path) => JSON.stringify(path)).join(\",\\n\");\n      throw new Error(errorMessage);\n    };\n  };\n}\nasync function getRemarkPlugins(mdxOptions, config) {\n  let remarkPlugins = [];\n  if (mdxOptions.gfm) {\n    remarkPlugins.push(remarkGfm);\n  }\n  if (mdxOptions.smartypants) {\n    remarkPlugins.push(remarkSmartypants);\n  }\n  remarkPlugins = [...remarkPlugins, ...ignoreStringPlugins(mdxOptions.remarkPlugins)];\n  if (mdxOptions.syntaxHighlight === \"shiki\") {\n    remarkPlugins.push([await remarkShiki(mdxOptions.shikiConfig)]);\n  }\n  if (mdxOptions.syntaxHighlight === \"prism\") {\n    remarkPlugins.push(remarkPrism);\n  }\n  remarkPlugins.push(toRemarkContentRelImageError(config));\n  return remarkPlugins;\n}\nfunction getRehypePlugins(mdxOptions) {\n  let rehypePlugins = [\n    rehypeMetaString,\n    [rehypeRaw, { passThrough: nodeTypes }]\n  ];\n  rehypePlugins = [\n    ...rehypePlugins,\n    ...ignoreStringPlugins(mdxOptions.rehypePlugins),\n    rehypeHeadingIds,\n    rehypeInjectHeadingsExport,\n    rehypeApplyFrontmatterExport\n  ];\n  return rehypePlugins;\n}\nfunction ignoreStringPlugins(plugins) {\n  let validPlugins = [];\n  let hasInvalidPlugin = false;\n  for (const plugin of plugins) {\n    if (typeof plugin === \"string\") {\n      console.warn(yellow(`[MDX] ${bold(plugin)} not applied.`));\n      hasInvalidPlugin = true;\n    } else if (Array.isArray(plugin) && typeof plugin[0] === \"string\") {\n      console.warn(yellow(`[MDX] ${bold(plugin[0])} not applied.`));\n      hasInvalidPlugin = true;\n    } else {\n      validPlugins.push(plugin);\n    }\n  }\n  if (hasInvalidPlugin) {\n    console.warn(\n      `To inherit Markdown plugins in MDX, please use explicit imports in your config instead of \"strings.\" See Markdown docs: https://docs.astro.build/en/guides/markdown-content/#markdown-plugins`\n    );\n  }\n  return validPlugins;\n}\nfunction getImportMetaEnvVariableName(node) {\n  try {\n    if (node.object.type !== \"MemberExpression\" || node.property.type !== \"Identifier\")\n      return new Error();\n    const nestedExpression = node.object;\n    if (nestedExpression.property.type !== \"Identifier\" || nestedExpression.property.name !== \"env\")\n      return new Error();\n    const envExpression = nestedExpression.object;\n    if (envExpression.type !== \"MetaProperty\" || envExpression.property.type !== \"Identifier\" || envExpression.property.name !== \"meta\")\n      return new Error();\n    if (envExpression.meta.name !== \"import\")\n      return new Error();\n    return node.property.name;\n  } catch (e) {\n    if (e instanceof Error) {\n      return e;\n    }\n    return new Error(\"Unknown parsing error\");\n  }\n}\nexport {\n  getRehypePlugins,\n  getRemarkPlugins,\n  recmaInjectImportMetaEnvPlugin,\n  rehypeApplyFrontmatterExport\n};\n", "import { parse } from \"acorn\";\nimport matter from \"gray-matter\";\nfunction appendForwardSlash(path) {\n  return path.endsWith(\"/\") ? path : path + \"/\";\n}\nfunction getFileInfo(id, config) {\n  const sitePathname = appendForwardSlash(\n    config.site ? new URL(config.base, config.site).pathname : config.base\n  );\n  let url = void 0;\n  try {\n    url = new URL(`file://${id}`);\n  } catch {\n  }\n  const fileId = id.split(\"?\")[0];\n  let fileUrl;\n  const isPage = fileId.includes(\"/pages/\");\n  if (isPage) {\n    fileUrl = fileId.replace(/^.*?\\/pages\\//, sitePathname).replace(/(\\/index)?\\.mdx$/, \"\");\n  } else if (url && url.pathname.startsWith(config.root.pathname)) {\n    fileUrl = url.pathname.slice(config.root.pathname.length);\n  } else {\n    fileUrl = fileId;\n  }\n  if (fileUrl && config.trailingSlash === \"always\") {\n    fileUrl = appendForwardSlash(fileUrl);\n  }\n  return { fileId, fileUrl };\n}\nfunction parseFrontmatter(code, id) {\n  try {\n    return matter(code);\n  } catch (e) {\n    if (e.name === \"YAMLException\") {\n      const err = e;\n      err.id = id;\n      err.loc = { file: e.id, line: e.mark.line + 1, column: e.mark.column };\n      err.message = e.reason;\n      throw err;\n    } else {\n      throw e;\n    }\n  }\n}\nfunction jsToTreeNode(jsString, acornOpts = {\n  ecmaVersion: \"latest\",\n  sourceType: \"module\"\n}) {\n  return {\n    type: \"mdxjsEsm\",\n    value: \"\",\n    data: {\n      estree: {\n        body: [],\n        ...parse(jsString, acornOpts),\n        type: \"Program\",\n        sourceType: \"module\"\n      }\n    }\n  };\n}\nfunction isRelativePath(path) {\n  return startsWithDotDotSlash(path) || startsWithDotSlash(path);\n}\nfunction startsWithDotDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  const c3 = path[2];\n  return c1 === \".\" && c2 === \".\" && c3 === \"/\";\n}\nfunction startsWithDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  return c1 === \".\" && c2 === \"/\";\n}\nexport {\n  getFileInfo,\n  isRelativePath,\n  jsToTreeNode,\n  parseFrontmatter\n};\n", "import { jsToTreeNode } from \"./utils.js\";\nfunction rehypeInjectHeadingsExport() {\n  return function(tree, file) {\n    const headings = file.data.__astroHeadings || [];\n    tree.children.unshift(\n      jsToTreeNode(`export function getHeadings() { return ${JSON.stringify(headings)} }`)\n    );\n  };\n}\nexport {\n  rehypeInjectHeadingsExport\n};\n", "import { visit } from \"unist-util-visit\";\nfunction rehypeMetaString() {\n  return function(tree) {\n    visit(tree, (node) => {\n      var _a;\n      if (node.type === \"element\" && node.tagName === \"code\" && ((_a = node.data) == null ? void 0 : _a.meta)) {\n        node.properties ?? (node.properties = {});\n        node.properties.metastring = node.data.meta;\n      }\n    });\n  };\n}\nexport {\n  rehypeMetaString as default\n};\n", "import { runHighlighterWithAstro } from \"@astrojs/prism/dist/highlighter\";\nimport { visit } from \"unist-util-visit\";\nfunction remarkPrism() {\n  return (tree) => visit(tree, \"code\", (node) => {\n    let { lang, value } = node;\n    node.type = \"html\";\n    let { html, classLanguage } = runHighlighterWithAstro(lang, value);\n    let classes = [classLanguage];\n    node.value = `<pre class=\"${classes.join(\n      \" \"\n    )}\"><code class=\"${classLanguage}\">${html}</code></pre>`;\n    return node;\n  });\n}\nexport {\n  remarkPrism as default\n};\n", "import { getHighlighter } from \"shiki\";\nimport { visit } from \"unist-util-visit\";\nconst highlighterCacheAsync = /* @__PURE__ */ new Map();\nconst remarkShiki = async ({ langs = [], theme = \"github-dark\", wrap = false }) => {\n  const cacheID = typeof theme === \"string\" ? theme : theme.name;\n  let highlighterAsync = highlighterCacheAsync.get(cacheID);\n  if (!highlighterAsync) {\n    highlighterAsync = getHighlighter({ theme }).then((hl) => {\n      hl.setColorReplacements({\n        \"#000001\": \"var(--astro-code-color-text)\",\n        \"#000002\": \"var(--astro-code-color-background)\",\n        \"#000004\": \"var(--astro-code-token-constant)\",\n        \"#000005\": \"var(--astro-code-token-string)\",\n        \"#000006\": \"var(--astro-code-token-comment)\",\n        \"#000007\": \"var(--astro-code-token-keyword)\",\n        \"#000008\": \"var(--astro-code-token-parameter)\",\n        \"#000009\": \"var(--astro-code-token-function)\",\n        \"#000010\": \"var(--astro-code-token-string-expression)\",\n        \"#000011\": \"var(--astro-code-token-punctuation)\",\n        \"#000012\": \"var(--astro-code-token-link)\"\n      });\n      return hl;\n    });\n    highlighterCacheAsync.set(cacheID, highlighterAsync);\n  }\n  const highlighter = await highlighterAsync;\n  for (const lang of langs) {\n    await highlighter.loadLanguage(lang);\n  }\n  return () => (tree) => {\n    visit(tree, \"code\", (node) => {\n      let lang;\n      if (typeof node.lang === \"string\") {\n        const langExists = highlighter.getLoadedLanguages().includes(node.lang);\n        if (langExists) {\n          lang = node.lang;\n        } else {\n          console.warn(`The language \"${node.lang}\" doesn't exist, falling back to plaintext.`);\n          lang = \"plaintext\";\n        }\n      } else {\n        lang = \"plaintext\";\n      }\n      let html = highlighter.codeToHtml(node.value, { lang });\n      html = html.replace(/<pre class=\"(.*?)shiki(.*?)\"/, `<pre class=\"$1astro-code$2\"`);\n      if (node.lang === \"diff\") {\n        html = html.replace(\n          /<span class=\"line\"><span style=\"(.*?)\">([\\+|\\-])/g,\n          '<span class=\"line\"><span style=\"$1\"><span style=\"user-select: none;\">$2</span>'\n        );\n      }\n      if (wrap === false) {\n        html = html.replace(/style=\"(.*?)\"/, 'style=\"$1; overflow-x: auto;\"');\n      } else if (wrap === true) {\n        html = html.replace(\n          /style=\"(.*?)\"/,\n          'style=\"$1; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\"'\n        );\n      }\n      node.type = \"html\";\n      node.value = html;\n      node.children = [];\n    });\n  };\n};\nvar remark_shiki_default = remarkShiki;\nexport {\n  remark_shiki_default as default\n};\n"],
  "mappings": "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AAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,IAAI;AAG/7D,UAAI,0BAA0B;AAG9B,UAAI,+BAA+B;AAMnC,UAAIE,iBAAgB;AAAA,QAClB,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AAIA,UAAI,uBAAuB;AAE3B,UAAI,aAAa;AAAA,QACf,GAAG;AAAA,QACH,WAAW,uBAAuB;AAAA,QAClC,GAAG,uBAAuB;AAAA,MAC5B;AAEA,UAAI,4BAA4B;AAIhC,UAAI,0BAA0B,IAAI,OAAO,MAAM,+BAA+B,GAAG;AACjF,UAAI,qBAAqB,IAAI,OAAO,MAAM,+BAA+B,0BAA0B,GAAG;AAKtG,eAAS,cAAc,MAAM,KAAK;AAChC,YAAI,MAAM;AACV,iBAASC,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK,GAAG;AACtC,iBAAO,IAAIA,EAAC;AACZ,cAAI,MAAM,MAAM;AAAE,mBAAO;AAAA,UAAM;AAC/B,iBAAO,IAAIA,KAAI,CAAC;AAChB,cAAI,OAAO,MAAM;AAAE,mBAAO;AAAA,UAAK;AAAA,QACjC;AAAA,MACF;AAIA,eAAS,kBAAkB,MAAM,QAAQ;AACvC,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAK;AAC7B,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,KAAK;AAAE,iBAAO;AAAA,QAAK;AAC9B,YAAI,QAAQ,OAAQ;AAAE,iBAAO,QAAQ,OAAQ,wBAAwB,KAAK,OAAO,aAAa,IAAI,CAAC;AAAA,QAAE;AACrG,YAAI,WAAW,OAAO;AAAE,iBAAO;AAAA,QAAM;AACrC,eAAO,cAAc,MAAM,0BAA0B;AAAA,MACvD;AAIA,eAAS,iBAAiB,MAAM,QAAQ;AACtC,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAK;AAC7B,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAM;AAC9B,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAK;AAC7B,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,KAAK;AAAE,iBAAO;AAAA,QAAK;AAC9B,YAAI,QAAQ,OAAQ;AAAE,iBAAO,QAAQ,OAAQ,mBAAmB,KAAK,OAAO,aAAa,IAAI,CAAC;AAAA,QAAE;AAChG,YAAI,WAAW,OAAO;AAAE,iBAAO;AAAA,QAAM;AACrC,eAAO,cAAc,MAAM,0BAA0B,KAAK,cAAc,MAAM,qBAAqB;AAAA,MACrG;AAyBA,UAAI,YAAY,SAASC,WAAU,OAAO,MAAM;AAC9C,YAAK,SAAS;AAAS,iBAAO,CAAC;AAE/B,aAAK,QAAQ;AACb,aAAK,UAAU,KAAK;AACpB,aAAK,aAAa,CAAC,CAAC,KAAK;AACzB,aAAK,aAAa,CAAC,CAAC,KAAK;AACzB,aAAK,SAAS,CAAC,CAAC,KAAK;AACrB,aAAK,WAAW,CAAC,CAAC,KAAK;AACvB,aAAK,SAAS,CAAC,CAAC,KAAK;AACrB,aAAK,UAAU,CAAC,CAAC,KAAK;AACtB,aAAK,QAAQ,KAAK,SAAS;AAC3B,aAAK,gBAAgB;AAAA,MACvB;AAEA,eAAS,MAAMC,OAAM,MAAM;AACzB,eAAO,IAAI,UAAUA,OAAM,EAAC,YAAY,MAAM,OAAO,KAAI,CAAC;AAAA,MAC5D;AACA,UAAI,aAAa,EAAC,YAAY,KAAI,GAAG,aAAa,EAAC,YAAY,KAAI;AAInE,UAAI,WAAW,CAAC;AAGhB,eAAS,GAAGA,OAAMC,UAAS;AACzB,YAAKA,aAAY;AAAS,UAAAA,WAAU,CAAC;AAErC,QAAAA,SAAQ,UAAUD;AAClB,eAAO,SAASA,KAAI,IAAI,IAAI,UAAUA,OAAMC,QAAO;AAAA,MACrD;AAEA,UAAI,UAAU;AAAA,QACZ,KAAK,IAAI,UAAU,OAAO,UAAU;AAAA,QACpC,QAAQ,IAAI,UAAU,UAAU,UAAU;AAAA,QAC1C,QAAQ,IAAI,UAAU,UAAU,UAAU;AAAA,QAC1C,MAAM,IAAI,UAAU,QAAQ,UAAU;AAAA,QACtC,WAAW,IAAI,UAAU,aAAa,UAAU;AAAA,QAChD,KAAK,IAAI,UAAU,KAAK;AAAA;AAAA,QAGxB,UAAU,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QACjE,UAAU,IAAI,UAAU,GAAG;AAAA,QAC3B,QAAQ,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QAC/D,QAAQ,IAAI,UAAU,GAAG;AAAA,QACzB,QAAQ,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QAC/D,QAAQ,IAAI,UAAU,GAAG;AAAA,QACzB,OAAO,IAAI,UAAU,KAAK,UAAU;AAAA,QACpC,MAAM,IAAI,UAAU,KAAK,UAAU;AAAA,QACnC,OAAO,IAAI,UAAU,KAAK,UAAU;AAAA,QACpC,KAAK,IAAI,UAAU,GAAG;AAAA,QACtB,UAAU,IAAI,UAAU,KAAK,UAAU;AAAA,QACvC,aAAa,IAAI,UAAU,IAAI;AAAA,QAC/B,OAAO,IAAI,UAAU,MAAM,UAAU;AAAA,QACrC,UAAU,IAAI,UAAU,UAAU;AAAA,QAClC,iBAAiB,IAAI,UAAU,iBAAiB;AAAA,QAChD,UAAU,IAAI,UAAU,OAAO,UAAU;AAAA,QACzC,WAAW,IAAI,UAAU,KAAK,UAAU;AAAA,QACxC,cAAc,IAAI,UAAU,MAAM,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBtE,IAAI,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,UAAU,KAAI,CAAC;AAAA,QACzD,QAAQ,IAAI,UAAU,MAAM,EAAC,YAAY,MAAM,UAAU,KAAI,CAAC;AAAA,QAC9D,QAAQ,IAAI,UAAU,SAAS,EAAC,QAAQ,MAAM,SAAS,MAAM,YAAY,KAAI,CAAC;AAAA,QAC9E,QAAQ,IAAI,UAAU,OAAO,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QAC/E,WAAW,MAAM,MAAM,CAAC;AAAA,QACxB,YAAY,MAAM,MAAM,CAAC;AAAA,QACzB,WAAW,MAAM,KAAK,CAAC;AAAA,QACvB,YAAY,MAAM,KAAK,CAAC;AAAA,QACxB,YAAY,MAAM,KAAK,CAAC;AAAA,QACxB,UAAU,MAAM,iBAAiB,CAAC;AAAA,QAClC,YAAY,MAAM,aAAa,CAAC;AAAA,QAChC,UAAU,MAAM,aAAa,CAAC;AAAA,QAC9B,SAAS,IAAI,UAAU,OAAO,EAAC,YAAY,MAAM,OAAO,GAAG,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QAC1F,QAAQ,MAAM,KAAK,EAAE;AAAA,QACrB,MAAM,MAAM,KAAK,EAAE;AAAA,QACnB,OAAO,MAAM,KAAK,EAAE;AAAA,QACpB,UAAU,IAAI,UAAU,MAAM,EAAC,YAAY,KAAI,CAAC;AAAA,QAChD,UAAU,MAAM,MAAM,CAAC;AAAA;AAAA,QAGvB,QAAQ,GAAG,OAAO;AAAA,QAClB,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,QAAQ,GAAG,OAAO;AAAA,QAClB,WAAW,GAAG,UAAU;AAAA,QACxB,WAAW,GAAG,UAAU;AAAA,QACxB,UAAU,GAAG,WAAW,UAAU;AAAA,QAClC,KAAK,GAAG,MAAM,EAAC,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QAC9C,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,UAAU,GAAG,SAAS;AAAA,QACtB,MAAM,GAAG,OAAO,EAAC,QAAQ,KAAI,CAAC;AAAA,QAC9B,WAAW,GAAG,YAAY,UAAU;AAAA,QACpC,KAAK,GAAG,IAAI;AAAA,QACZ,SAAS,GAAG,UAAU,UAAU;AAAA,QAChC,SAAS,GAAG,QAAQ;AAAA,QACpB,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,MAAM,GAAG,KAAK;AAAA,QACd,MAAM,GAAG,KAAK;AAAA,QACd,QAAQ,GAAG,OAAO;AAAA,QAClB,QAAQ,GAAG,SAAS,EAAC,QAAQ,KAAI,CAAC;AAAA,QAClC,OAAO,GAAG,MAAM;AAAA,QAChB,MAAM,GAAG,OAAO,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QACpD,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,UAAU,GAAG,WAAW,UAAU;AAAA,QAClC,SAAS,GAAG,QAAQ;AAAA,QACpB,SAAS,GAAG,UAAU,UAAU;AAAA,QAChC,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,KAAK,GAAG,MAAM,EAAC,YAAY,MAAM,OAAO,EAAC,CAAC;AAAA,QAC1C,aAAa,GAAG,cAAc,EAAC,YAAY,MAAM,OAAO,EAAC,CAAC;AAAA,QAC1D,SAAS,GAAG,UAAU,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QACxE,OAAO,GAAG,QAAQ,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QACpE,SAAS,GAAG,UAAU,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,MAC1E;AAKA,UAAI,YAAY;AAChB,UAAI,aAAa,IAAI,OAAO,UAAU,QAAQ,GAAG;AAEjD,eAAS,UAAU,MAAM;AACvB,eAAO,SAAS,MAAM,SAAS,MAAM,SAAS,QAAU,SAAS;AAAA,MACnE;AAEA,eAAS,cAAc,MAAM,MAAM,KAAK;AACtC,YAAK,QAAQ;AAAS,gBAAM,KAAK;AAEjC,iBAASH,KAAI,MAAMA,KAAI,KAAKA,MAAK;AAC/B,cAAI,OAAO,KAAK,WAAWA,EAAC;AAC5B,cAAI,UAAU,IAAI,GAChB;AAAE,mBAAOA,KAAI,MAAM,KAAK,SAAS,MAAM,KAAK,WAAWA,KAAI,CAAC,MAAM,KAAKA,KAAI,IAAIA,KAAI;AAAA,UAAE;AAAA,QACzF;AACA,eAAO;AAAA,MACT;AAEA,UAAI,qBAAqB;AAEzB,UAAI,iBAAiB;AAErB,UAAI,MAAM,OAAO;AACjB,UAAI,iBAAiB,IAAI;AACzB,UAAI,WAAW,IAAI;AAEnB,UAAI,SAAS,OAAO,UAAW,SAAU,KAAK,UAAU;AAAE,eACxD,eAAe,KAAK,KAAK,QAAQ;AAAA,MAChC;AAEH,UAAII,WAAU,MAAM,WAAY,SAAU,KAAK;AAAE,eAC/C,SAAS,KAAK,GAAG,MAAM;AAAA,MACtB;AAEH,eAAS,YAAY,OAAO;AAC1B,eAAO,IAAI,OAAO,SAAS,MAAM,QAAQ,MAAM,GAAG,IAAI,IAAI;AAAA,MAC5D;AAEA,eAAS,kBAAkB,MAAM;AAE/B,YAAI,QAAQ,OAAQ;AAAE,iBAAO,OAAO,aAAa,IAAI;AAAA,QAAE;AACvD,gBAAQ;AACR,eAAO,OAAO,cAAc,QAAQ,MAAM,QAAS,OAAO,QAAQ,KAAM;AAAA,MAC1E;AAEA,UAAI,gBAAgB;AAKpB,UAAI,WAAW,SAASC,UAAS,MAAM,KAAK;AAC1C,aAAK,OAAO;AACZ,aAAK,SAAS;AAAA,MAChB;AAEA,eAAS,UAAU,SAAS,SAAS,OAAQ,GAAG;AAC9C,eAAO,IAAI,SAAS,KAAK,MAAM,KAAK,SAAS,CAAC;AAAA,MAChD;AAEA,UAAI,iBAAiB,SAASC,gBAAe,GAAGC,QAAO,KAAK;AAC1D,aAAK,QAAQA;AACb,aAAK,MAAM;AACX,YAAI,EAAE,eAAe,MAAM;AAAE,eAAK,SAAS,EAAE;AAAA,QAAY;AAAA,MAC3D;AAQA,eAAS,YAAY,OAAO,QAAQ;AAClC,iBAAS,OAAO,GAAG,MAAM,OAAK;AAC5B,cAAI,YAAY,cAAc,OAAO,KAAK,MAAM;AAChD,cAAI,YAAY,GAAG;AAAE,mBAAO,IAAI,SAAS,MAAM,SAAS,GAAG;AAAA,UAAE;AAC7D,YAAE;AACF,gBAAM;AAAA,QACR;AAAA,MACF;AAKA,UAAIC,kBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOnB,aAAa;AAAA;AAAA;AAAA;AAAA,QAIb,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMZ,qBAAqB;AAAA;AAAA;AAAA,QAGrB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKjB,eAAe;AAAA;AAAA;AAAA,QAGf,4BAA4B;AAAA;AAAA;AAAA;AAAA,QAI5B,6BAA6B;AAAA;AAAA;AAAA;AAAA,QAI7B,2BAA2B;AAAA;AAAA;AAAA,QAG3B,yBAAyB;AAAA;AAAA;AAAA;AAAA,QAIzB,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,QAKf,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMX,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWT,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASX,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMR,SAAS;AAAA;AAAA;AAAA,QAGT,YAAY;AAAA;AAAA;AAAA,QAGZ,kBAAkB;AAAA;AAAA;AAAA,QAGlB,gBAAgB;AAAA,MAClB;AAIA,UAAI,yBAAyB;AAE7B,eAAS,WAAW,MAAM;AACxB,YAAIL,WAAU,CAAC;AAEf,iBAAS,OAAOK,iBACd;AAAE,UAAAL,SAAQ,GAAG,IAAI,QAAQ,OAAO,MAAM,GAAG,IAAI,KAAK,GAAG,IAAIK,gBAAe,GAAG;AAAA,QAAG;AAEhF,YAAIL,SAAQ,gBAAgB,UAAU;AACpC,UAAAA,SAAQ,cAAc;AAAA,QACxB,WAAWA,SAAQ,eAAe,MAAM;AACtC,cAAI,CAAC,0BAA0B,OAAO,YAAY,YAAY,QAAQ,MAAM;AAC1E,qCAAyB;AACzB,oBAAQ,KAAK,oHAAoH;AAAA,UACnI;AACA,UAAAA,SAAQ,cAAc;AAAA,QACxB,WAAWA,SAAQ,eAAe,MAAM;AACtC,UAAAA,SAAQ,eAAe;AAAA,QACzB;AAEA,YAAIA,SAAQ,iBAAiB,MAC3B;AAAE,UAAAA,SAAQ,gBAAgBA,SAAQ,cAAc;AAAA,QAAG;AAErD,YAAI,KAAK,iBAAiB,MACxB;AAAE,UAAAA,SAAQ,gBAAgBA,SAAQ,eAAe;AAAA,QAAI;AAEvD,YAAIC,SAAQD,SAAQ,OAAO,GAAG;AAC5B,cAAI,SAASA,SAAQ;AACrB,UAAAA,SAAQ,UAAU,SAAU,OAAO;AAAE,mBAAO,OAAO,KAAK,KAAK;AAAA,UAAG;AAAA,QAClE;AACA,YAAIC,SAAQD,SAAQ,SAAS,GAC3B;AAAE,UAAAA,SAAQ,YAAY,YAAYA,UAASA,SAAQ,SAAS;AAAA,QAAG;AAEjE,eAAOA;AAAA,MACT;AAEA,eAAS,YAAYA,UAAS,OAAO;AACnC,eAAO,SAAS,OAAOM,OAAMF,QAAO,KAAK,UAAU,QAAQ;AACzD,cAAIG,WAAU;AAAA,YACZ,MAAM,QAAQ,UAAU;AAAA,YACxB,OAAOD;AAAA,YACP,OAAOF;AAAA,YACP;AAAA,UACF;AACA,cAAIJ,SAAQ,WACV;AAAE,YAAAO,SAAQ,MAAM,IAAI,eAAe,MAAM,UAAU,MAAM;AAAA,UAAG;AAC9D,cAAIP,SAAQ,QACV;AAAE,YAAAO,SAAQ,QAAQ,CAACH,QAAO,GAAG;AAAA,UAAG;AAClC,gBAAM,KAAKG,QAAO;AAAA,QACpB;AAAA,MACF;AAGA,UACI,YAAY,GACZ,iBAAiB,GACjB,cAAc,GACd,kBAAkB,GAClB,cAAc,IACd,qBAAqB,IACrB,cAAc,IACd,qBAAqB,KACrB,2BAA2B,KAC3B,YAAY,YAAY,iBAAiB;AAE7C,eAAS,cAAc,OAAO,WAAW;AACvC,eAAO,kBAAkB,QAAQ,cAAc,MAAM,YAAY,kBAAkB;AAAA,MACrF;AAGA,UACI,YAAY,GACZ,WAAW,GACX,eAAe,GACf,gBAAgB,GAChB,oBAAoB,GACpB,eAAe;AAEnB,UAAIC,UAAS,SAASA,QAAOR,UAAS,OAAO,UAAU;AACrD,aAAK,UAAUA,WAAU,WAAWA,QAAO;AAC3C,aAAK,aAAaA,SAAQ;AAC1B,aAAK,WAAW,YAAY,WAAWA,SAAQ,eAAe,IAAI,IAAIA,SAAQ,eAAe,WAAW,YAAY,CAAC,CAAC;AACtH,YAAI,WAAW;AACf,YAAIA,SAAQ,kBAAkB,MAAM;AAClC,qBAAWJ,eAAcI,SAAQ,eAAe,IAAI,IAAIA,SAAQ,gBAAgB,IAAI,IAAI,CAAC;AACzF,cAAIA,SAAQ,eAAe,UAAU;AAAE,wBAAY;AAAA,UAAU;AAAA,QAC/D;AACA,aAAK,gBAAgB,YAAY,QAAQ;AACzC,YAAI,kBAAkB,WAAW,WAAW,MAAM,MAAMJ,eAAc;AACtE,aAAK,sBAAsB,YAAY,cAAc;AACrD,aAAK,0BAA0B,YAAY,iBAAiB,MAAMA,eAAc,UAAU;AAC1F,aAAK,QAAQ,OAAO,KAAK;AAKzB,aAAK,cAAc;AAKnB,YAAI,UAAU;AACZ,eAAK,MAAM;AACX,eAAK,YAAY,KAAK,MAAM,YAAY,MAAM,WAAW,CAAC,IAAI;AAC9D,eAAK,UAAU,KAAK,MAAM,MAAM,GAAG,KAAK,SAAS,EAAE,MAAM,SAAS,EAAE;AAAA,QACtE,OAAO;AACL,eAAK,MAAM,KAAK,YAAY;AAC5B,eAAK,UAAU;AAAA,QACjB;AAIA,aAAK,OAAO,QAAQ;AAEpB,aAAK,QAAQ;AAEb,aAAK,QAAQ,KAAK,MAAM,KAAK;AAG7B,aAAK,WAAW,KAAK,SAAS,KAAK,YAAY;AAG/C,aAAK,gBAAgB,KAAK,kBAAkB;AAC5C,aAAK,eAAe,KAAK,aAAa,KAAK;AAK3C,aAAK,UAAU,KAAK,eAAe;AACnC,aAAK,cAAc;AAGnB,aAAK,WAAWI,SAAQ,eAAe;AACvC,aAAK,SAAS,KAAK,YAAY,KAAK,gBAAgB,KAAK,GAAG;AAG5D,aAAK,mBAAmB;AACxB,aAAK,2BAA2B;AAGhC,aAAK,WAAW,KAAK,WAAW,KAAK,gBAAgB;AAErD,aAAK,SAAS,CAAC;AAEf,aAAK,mBAAmB,uBAAO,OAAO,IAAI;AAG1C,YAAI,KAAK,QAAQ,KAAKA,SAAQ,iBAAiB,KAAK,MAAM,MAAM,GAAG,CAAC,MAAM,MACxE;AAAE,eAAK,gBAAgB,CAAC;AAAA,QAAG;AAG7B,aAAK,aAAa,CAAC;AACnB,aAAK,WAAW,SAAS;AAGzB,aAAK,cAAc;AAKnB,aAAK,mBAAmB,CAAC;AAAA,MAC3B;AAEA,UAAI,qBAAqB,EAAE,YAAY,EAAE,cAAc,KAAK,GAAE,aAAa,EAAE,cAAc,KAAK,GAAE,SAAS,EAAE,cAAc,KAAK,GAAE,UAAU,EAAE,cAAc,KAAK,GAAE,YAAY,EAAE,cAAc,KAAK,GAAE,kBAAkB,EAAE,cAAc,KAAK,GAAE,qBAAqB,EAAE,cAAc,KAAK,GAAE,mBAAmB,EAAE,cAAc,KAAK,GAAE,oBAAoB,EAAE,cAAc,KAAK,EAAE;AAEhX,MAAAQ,QAAO,UAAU,QAAQ,SAASC,SAAS;AACzC,YAAI,OAAO,KAAK,QAAQ,WAAW,KAAK,UAAU;AAClD,aAAK,UAAU;AACf,eAAO,KAAK,cAAc,IAAI;AAAA,MAChC;AAEA,yBAAmB,WAAW,MAAM,WAAY;AAAE,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,kBAAkB;AAAA,MAAE;AAE7G,yBAAmB,YAAY,MAAM,WAAY;AAAE,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,mBAAmB,KAAK,CAAC,KAAK,gBAAgB,EAAE;AAAA,MAAiB;AAE3J,yBAAmB,QAAQ,MAAM,WAAY;AAAE,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,eAAe,KAAK,CAAC,KAAK,gBAAgB,EAAE;AAAA,MAAiB;AAEnJ,yBAAmB,SAAS,MAAM,WAAY;AAC5C,iBAASZ,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAGA,MAAK;AACpD,cAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,cAAI,MAAM,oBAAoB,MAAM,QAAQ,0BAA0B;AAAE,mBAAO;AAAA,UAAM;AACrF,cAAI,MAAM,QAAQ,gBAAgB;AAAE,oBAAQ,MAAM,QAAQ,eAAe;AAAA,UAAE;AAAA,QAC7E;AACA,eAAQ,KAAK,YAAY,KAAK,QAAQ,eAAe,MAAO,KAAK,QAAQ;AAAA,MAC3E;AAEA,yBAAmB,WAAW,MAAM,WAAY;AAC9C,YAAIa,OAAM,KAAK,iBAAiB;AAC9B,YAAI,QAAQA,KAAI;AAChB,YAAI,mBAAmBA,KAAI;AAC7B,gBAAQ,QAAQ,eAAe,KAAK,oBAAoB,KAAK,QAAQ;AAAA,MACvE;AAEA,yBAAmB,iBAAiB,MAAM,WAAY;AAAE,gBAAQ,KAAK,iBAAiB,EAAE,QAAQ,sBAAsB;AAAA,MAAE;AAExH,yBAAmB,oBAAoB,MAAM,WAAY;AAAE,eAAO,KAAK,2BAA2B,KAAK,aAAa,CAAC;AAAA,MAAE;AAEvH,yBAAmB,kBAAkB,MAAM,WAAY;AACrD,YAAIA,OAAM,KAAK,iBAAiB;AAC9B,YAAI,QAAQA,KAAI;AAChB,YAAI,mBAAmBA,KAAI;AAC7B,gBAAQ,SAAS,iBAAiB,6BAA6B,KAAK;AAAA,MACtE;AAEA,yBAAmB,mBAAmB,MAAM,WAAY;AACtD,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,4BAA4B;AAAA,MACrE;AAEA,MAAAF,QAAO,SAAS,SAAS,SAAU;AAC/B,YAAI,UAAU,CAAC,GAAG,MAAM,UAAU;AAClC,eAAQ;AAAQ,kBAAS,GAAI,IAAI,UAAW,GAAI;AAElD,YAAI,MAAM;AACV,iBAASX,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AAAE,gBAAM,QAAQA,EAAC,EAAE,GAAG;AAAA,QAAG;AAClE,eAAO;AAAA,MACT;AAEA,MAAAW,QAAO,QAAQ,SAASC,OAAO,OAAOT,UAAS;AAC7C,eAAO,IAAI,KAAKA,UAAS,KAAK,EAAE,MAAM;AAAA,MACxC;AAEA,MAAAQ,QAAO,oBAAoB,SAASG,mBAAmB,OAAO,KAAKX,UAAS;AAC1E,YAAI,SAAS,IAAI,KAAKA,UAAS,OAAO,GAAG;AACzC,eAAO,UAAU;AACjB,eAAO,OAAO,gBAAgB;AAAA,MAChC;AAEA,MAAAQ,QAAO,YAAY,SAASI,WAAW,OAAOZ,UAAS;AACrD,eAAO,IAAI,KAAKA,UAAS,KAAK;AAAA,MAChC;AAEA,aAAO,iBAAkBQ,QAAO,WAAW,kBAAmB;AAE9D,UAAI,OAAOA,QAAO;AAIlB,UAAI,UAAU;AACd,WAAK,kBAAkB,SAASJ,QAAO;AACrC,YAAI,KAAK,QAAQ,cAAc,GAAG;AAAE,iBAAO;AAAA,QAAM;AACjD,mBAAS;AAEP,yBAAe,YAAYA;AAC3B,UAAAA,UAAS,eAAe,KAAK,KAAK,KAAK,EAAE,CAAC,EAAE;AAC5C,cAAI,QAAQ,QAAQ,KAAK,KAAK,MAAM,MAAMA,MAAK,CAAC;AAChD,cAAI,CAAC,OAAO;AAAE,mBAAO;AAAA,UAAM;AAC3B,eAAK,MAAM,CAAC,KAAK,MAAM,CAAC,OAAO,cAAc;AAC3C,2BAAe,YAAYA,SAAQ,MAAM,CAAC,EAAE;AAC5C,gBAAI,aAAa,eAAe,KAAK,KAAK,KAAK,GAAG,MAAM,WAAW,QAAQ,WAAW,CAAC,EAAE;AACzF,gBAAI,OAAO,KAAK,MAAM,OAAO,GAAG;AAChC,mBAAO,SAAS,OAAO,SAAS,OAC7B,UAAU,KAAK,WAAW,CAAC,CAAC,KAC5B,EAAE,sBAAsB,KAAK,IAAI,KAAK,SAAS,OAAO,KAAK,MAAM,OAAO,MAAM,CAAC,MAAM;AAAA,UAC1F;AACA,UAAAA,UAAS,MAAM,CAAC,EAAE;AAGlB,yBAAe,YAAYA;AAC3B,UAAAA,UAAS,eAAe,KAAK,KAAK,KAAK,EAAE,CAAC,EAAE;AAC5C,cAAI,KAAK,MAAMA,MAAK,MAAM,KACxB;AAAE,YAAAA;AAAA,UAAS;AAAA,QACf;AAAA,MACF;AAKA,WAAK,MAAM,SAAS,MAAM;AACxB,YAAI,KAAK,SAAS,MAAM;AACtB,eAAK,KAAK;AACV,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAIA,WAAK,eAAe,SAASL,OAAM;AACjC,eAAO,KAAK,SAAS,QAAQ,QAAQ,KAAK,UAAUA,SAAQ,CAAC,KAAK;AAAA,MACpE;AAIA,WAAK,gBAAgB,SAASA,OAAM;AAClC,YAAI,CAAC,KAAK,aAAaA,KAAI,GAAG;AAAE,iBAAO;AAAA,QAAM;AAC7C,aAAK,KAAK;AACV,eAAO;AAAA,MACT;AAIA,WAAK,mBAAmB,SAASA,OAAM;AACrC,YAAI,CAAC,KAAK,cAAcA,KAAI,GAAG;AAAE,eAAK,WAAW;AAAA,QAAG;AAAA,MACtD;AAIA,WAAK,qBAAqB,WAAW;AACnC,eAAO,KAAK,SAAS,QAAQ,OAC3B,KAAK,SAAS,QAAQ,UACtB,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,MAChE;AAEA,WAAK,kBAAkB,WAAW;AAChC,YAAI,KAAK,mBAAmB,GAAG;AAC7B,cAAI,KAAK,QAAQ,qBACf;AAAE,iBAAK,QAAQ,oBAAoB,KAAK,YAAY,KAAK,aAAa;AAAA,UAAG;AAC3E,iBAAO;AAAA,QACT;AAAA,MACF;AAKA,WAAK,YAAY,WAAW;AAC1B,YAAI,CAAC,KAAK,IAAI,QAAQ,IAAI,KAAK,CAAC,KAAK,gBAAgB,GAAG;AAAE,eAAK,WAAW;AAAA,QAAG;AAAA,MAC/E;AAEA,WAAK,qBAAqB,SAAS,SAAS,SAAS;AACnD,YAAI,KAAK,SAAS,SAAS;AACzB,cAAI,KAAK,QAAQ,iBACf;AAAE,iBAAK,QAAQ,gBAAgB,KAAK,cAAc,KAAK,eAAe;AAAA,UAAG;AAC3E,cAAI,CAAC,SACH;AAAE,iBAAK,KAAK;AAAA,UAAG;AACjB,iBAAO;AAAA,QACT;AAAA,MACF;AAKA,WAAK,SAAS,SAAS,MAAM;AAC3B,aAAK,IAAI,IAAI,KAAK,KAAK,WAAW;AAAA,MACpC;AAIA,WAAK,aAAa,SAAS,KAAK;AAC9B,aAAK,MAAM,OAAO,OAAO,MAAM,KAAK,OAAO,kBAAkB;AAAA,MAC/D;AAEA,UAAI,sBAAsB,SAASc,uBAAsB;AACvD,aAAK,kBACL,KAAK,gBACL,KAAK,sBACL,KAAK,oBACL,KAAK,cACH;AAAA,MACJ;AAEA,WAAK,qBAAqB,SAAS,wBAAwB,UAAU;AACnE,YAAI,CAAC,wBAAwB;AAAE;AAAA,QAAO;AACtC,YAAI,uBAAuB,gBAAgB,IACzC;AAAE,eAAK,iBAAiB,uBAAuB,eAAe,+CAA+C;AAAA,QAAG;AAClH,YAAI,SAAS,WAAW,uBAAuB,sBAAsB,uBAAuB;AAC5F,YAAI,SAAS,IAAI;AAAE,eAAK,iBAAiB,QAAQ,WAAW,wBAAwB,uBAAuB;AAAA,QAAG;AAAA,MAChH;AAEA,WAAK,wBAAwB,SAAS,wBAAwB,UAAU;AACtE,YAAI,CAAC,wBAAwB;AAAE,iBAAO;AAAA,QAAM;AAC5C,YAAI,kBAAkB,uBAAuB;AAC7C,YAAI,cAAc,uBAAuB;AACzC,YAAI,CAAC,UAAU;AAAE,iBAAO,mBAAmB,KAAK,eAAe;AAAA,QAAE;AACjE,YAAI,mBAAmB,GACrB;AAAE,eAAK,MAAM,iBAAiB,yEAAyE;AAAA,QAAG;AAC5G,YAAI,eAAe,GACjB;AAAE,eAAK,iBAAiB,aAAa,oCAAoC;AAAA,QAAG;AAAA,MAChF;AAEA,WAAK,iCAAiC,WAAW;AAC/C,YAAI,KAAK,aAAa,CAAC,KAAK,YAAY,KAAK,WAAW,KAAK,WAC3D;AAAE,eAAK,MAAM,KAAK,UAAU,4CAA4C;AAAA,QAAG;AAC7E,YAAI,KAAK,UACP;AAAE,eAAK,MAAM,KAAK,UAAU,4CAA4C;AAAA,QAAG;AAAA,MAC/E;AAEA,WAAK,uBAAuB,SAAS,MAAM;AACzC,YAAI,KAAK,SAAS,2BAChB;AAAE,iBAAO,KAAK,qBAAqB,KAAK,UAAU;AAAA,QAAE;AACtD,eAAO,KAAK,SAAS,gBAAgB,KAAK,SAAS;AAAA,MACrD;AAEA,UAAI,OAAOL,QAAO;AASlB,WAAK,gBAAgB,SAAS,MAAM;AAClC,YAAId,WAAU,uBAAO,OAAO,IAAI;AAChC,YAAI,CAAC,KAAK,MAAM;AAAE,eAAK,OAAO,CAAC;AAAA,QAAG;AAClC,eAAO,KAAK,SAAS,QAAQ,KAAK;AAChC,cAAI,OAAO,KAAK,eAAe,MAAM,MAAMA,QAAO;AAClD,eAAK,KAAK,KAAK,IAAI;AAAA,QACrB;AACA,YAAI,KAAK,UACP;AAAE,mBAASG,KAAI,GAAGiB,QAAO,OAAO,KAAK,KAAK,gBAAgB,GAAGjB,KAAIiB,MAAK,QAAQjB,MAAK,GACjF;AACE,gBAAIE,QAAOe,MAAKjB,EAAC;AAEjB,iBAAK,iBAAiB,KAAK,iBAAiBE,KAAI,EAAE,OAAQ,aAAaA,QAAO,kBAAmB;AAAA,UACnG;AAAA,QAAE;AACN,aAAK,uBAAuB,KAAK,IAAI;AACrC,aAAK,KAAK;AACV,aAAK,aAAa,KAAK,QAAQ;AAC/B,eAAO,KAAK,WAAW,MAAM,SAAS;AAAA,MACxC;AAEA,UAAI,YAAY,EAAC,MAAM,OAAM,GAAG,cAAc,EAAC,MAAM,SAAQ;AAE7D,WAAK,QAAQ,SAAS,SAAS;AAC7B,YAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,aAAa,KAAK,GAAG;AAAE,iBAAO;AAAA,QAAM;AAC9E,uBAAe,YAAY,KAAK;AAChC,YAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,YAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ,SAAS,KAAK,MAAM,WAAW,IAAI;AAKzE,YAAI,WAAW,MAAM,WAAW,MAAM,SAAS,SAAU,SAAS,OAAQ;AAAE,iBAAO;AAAA,QAAK;AACxF,YAAI,SAAS;AAAE,iBAAO;AAAA,QAAM;AAE5B,YAAI,WAAW,KAAK;AAAE,iBAAO;AAAA,QAAK;AAClC,YAAI,kBAAkB,QAAQ,IAAI,GAAG;AACnC,cAAI,MAAM,OAAO;AACjB,iBAAO,iBAAiB,SAAS,KAAK,MAAM,WAAW,GAAG,GAAG,IAAI,GAAG;AAAE,cAAE;AAAA,UAAK;AAC7E,cAAI,WAAW,MAAM,SAAS,SAAU,SAAS,OAAQ;AAAE,mBAAO;AAAA,UAAK;AACvE,cAAI,QAAQ,KAAK,MAAM,MAAM,MAAM,GAAG;AACtC,cAAI,CAAC,0BAA0B,KAAK,KAAK,GAAG;AAAE,mBAAO;AAAA,UAAK;AAAA,QAC5D;AACA,eAAO;AAAA,MACT;AAKA,WAAK,kBAAkB,WAAW;AAChC,YAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,aAAa,OAAO,GAC5D;AAAE,iBAAO;AAAA,QAAM;AAEjB,uBAAe,YAAY,KAAK;AAChC,YAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,YAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ;AACtC,eAAO,CAAC,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,IAAI,CAAC,KACrD,KAAK,MAAM,MAAM,MAAM,OAAO,CAAC,MAAM,eACpC,OAAO,MAAM,KAAK,MAAM,UACxB,EAAE,iBAAiB,QAAQ,KAAK,MAAM,WAAW,OAAO,CAAC,CAAC,KAAK,QAAQ,SAAU,QAAQ;AAAA,MAC9F;AASA,WAAK,iBAAiB,SAAS,SAAS,UAAUL,UAAS;AACzD,YAAI,YAAY,KAAK,MAAM,OAAO,KAAK,UAAU,GAAG;AAEpD,YAAI,KAAK,MAAM,OAAO,GAAG;AACvB,sBAAY,QAAQ;AACpB,iBAAO;AAAA,QACT;AAMA,gBAAQ,WAAW;AAAA,UACnB,KAAK,QAAQ;AAAA,UAAQ,KAAK,QAAQ;AAAW,mBAAO,KAAK,4BAA4B,MAAM,UAAU,OAAO;AAAA,UAC5G,KAAK,QAAQ;AAAW,mBAAO,KAAK,uBAAuB,IAAI;AAAA,UAC/D,KAAK,QAAQ;AAAK,mBAAO,KAAK,iBAAiB,IAAI;AAAA,UACnD,KAAK,QAAQ;AAAM,mBAAO,KAAK,kBAAkB,IAAI;AAAA,UACrD,KAAK,QAAQ;AAIX,gBAAK,YAAY,KAAK,UAAU,YAAY,QAAQ,YAAY,YAAa,KAAK,QAAQ,eAAe,GAAG;AAAE,mBAAK,WAAW;AAAA,YAAG;AACjI,mBAAO,KAAK,uBAAuB,MAAM,OAAO,CAAC,OAAO;AAAA,UAC1D,KAAK,QAAQ;AACX,gBAAI,SAAS;AAAE,mBAAK,WAAW;AAAA,YAAG;AAClC,mBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,UACnC,KAAK,QAAQ;AAAK,mBAAO,KAAK,iBAAiB,IAAI;AAAA,UACnD,KAAK,QAAQ;AAAS,mBAAO,KAAK,qBAAqB,IAAI;AAAA,UAC3D,KAAK,QAAQ;AAAS,mBAAO,KAAK,qBAAqB,IAAI;AAAA,UAC3D,KAAK,QAAQ;AAAQ,mBAAO,KAAK,oBAAoB,IAAI;AAAA,UACzD,KAAK,QAAQ;AAAM,mBAAO,KAAK,kBAAkB,IAAI;AAAA,UACrD,KAAK,QAAQ;AAAA,UAAQ,KAAK,QAAQ;AAChC,mBAAO,QAAQ,KAAK;AACpB,gBAAI,WAAW,SAAS,OAAO;AAAE,mBAAK,WAAW;AAAA,YAAG;AACpD,mBAAO,KAAK,kBAAkB,MAAM,IAAI;AAAA,UAC1C,KAAK,QAAQ;AAAQ,mBAAO,KAAK,oBAAoB,IAAI;AAAA,UACzD,KAAK,QAAQ;AAAO,mBAAO,KAAK,mBAAmB,IAAI;AAAA,UACvD,KAAK,QAAQ;AAAQ,mBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,UACtD,KAAK,QAAQ;AAAM,mBAAO,KAAK,oBAAoB,IAAI;AAAA,UACvD,KAAK,QAAQ;AAAA,UACb,KAAK,QAAQ;AACX,gBAAI,KAAK,QAAQ,cAAc,MAAM,cAAc,QAAQ,SAAS;AAClE,6BAAe,YAAY,KAAK;AAChC,kBAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,kBAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ,SAAS,KAAK,MAAM,WAAW,IAAI;AACzE,kBAAI,WAAW,MAAM,WAAW,IAC9B;AAAE,uBAAO,KAAK,yBAAyB,MAAM,KAAK,gBAAgB,CAAC;AAAA,cAAE;AAAA,YACzE;AAEA,gBAAI,CAAC,KAAK,QAAQ,6BAA6B;AAC7C,kBAAI,CAAC,UACH;AAAE,qBAAK,MAAM,KAAK,OAAO,wDAAwD;AAAA,cAAG;AACtF,kBAAI,CAAC,KAAK,UACR;AAAE,qBAAK,MAAM,KAAK,OAAO,iEAAiE;AAAA,cAAG;AAAA,YACjG;AACA,mBAAO,cAAc,QAAQ,UAAU,KAAK,YAAY,IAAI,IAAI,KAAK,YAAY,MAAMA,QAAO;AAAA,UAOhG;AACE,gBAAI,KAAK,gBAAgB,GAAG;AAC1B,kBAAI,SAAS;AAAE,qBAAK,WAAW;AAAA,cAAG;AAClC,mBAAK,KAAK;AACV,qBAAO,KAAK,uBAAuB,MAAM,MAAM,CAAC,OAAO;AAAA,YACzD;AAEA,gBAAI,YAAY,KAAK,OAAO,OAAO,KAAK,gBAAgB;AACxD,gBAAI,cAAc,QAAQ,QAAQ,KAAK,SAAS,gBAAgB,KAAK,IAAI,QAAQ,KAAK,GACpF;AAAE,qBAAO,KAAK,sBAAsB,MAAM,WAAW,MAAM,OAAO;AAAA,YAAE,OACjE;AAAE,qBAAO,KAAK,yBAAyB,MAAM,IAAI;AAAA,YAAE;AAAA,QAC1D;AAAA,MACF;AAEA,WAAK,8BAA8B,SAAS,MAAM,SAAS;AACzD,YAAI,UAAU,YAAY;AAC1B,aAAK,KAAK;AACV,YAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,gBAAgB,GAAG;AAAE,eAAK,QAAQ;AAAA,QAAM,WAClE,KAAK,SAAS,QAAQ,MAAM;AAAE,eAAK,WAAW;AAAA,QAAG,OACrD;AACH,eAAK,QAAQ,KAAK,WAAW;AAC7B,eAAK,UAAU;AAAA,QACjB;AAIA,YAAIG,KAAI;AACR,eAAOA,KAAI,KAAK,OAAO,QAAQ,EAAEA,IAAG;AAClC,cAAI,MAAM,KAAK,OAAOA,EAAC;AACvB,cAAI,KAAK,SAAS,QAAQ,IAAI,SAAS,KAAK,MAAM,MAAM;AACtD,gBAAI,IAAI,QAAQ,SAAS,WAAW,IAAI,SAAS,SAAS;AAAE;AAAA,YAAM;AAClE,gBAAI,KAAK,SAAS,SAAS;AAAE;AAAA,YAAM;AAAA,UACrC;AAAA,QACF;AACA,YAAIA,OAAM,KAAK,OAAO,QAAQ;AAAE,eAAK,MAAM,KAAK,OAAO,iBAAiB,OAAO;AAAA,QAAG;AAClF,eAAO,KAAK,WAAW,MAAM,UAAU,mBAAmB,mBAAmB;AAAA,MAC/E;AAEA,WAAK,yBAAyB,SAAS,MAAM;AAC3C,aAAK,KAAK;AACV,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,MAClD;AAEA,WAAK,mBAAmB,SAAS,MAAM;AACrC,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,OAAO,KAAK,eAAe,IAAI;AACpC,aAAK,OAAO,IAAI;AAChB,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,qBAAqB;AACtC,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,IAAI,QAAQ,IAAI;AAAA,QAAG,OAE1B;AAAE,eAAK,UAAU;AAAA,QAAG;AACtB,eAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,MACjD;AAUA,WAAK,oBAAoB,SAAS,MAAM;AACtC,aAAK,KAAK;AACV,YAAI,UAAW,KAAK,QAAQ,eAAe,KAAK,KAAK,YAAY,KAAK,cAAc,OAAO,IAAK,KAAK,eAAe;AACpH,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,WAAW,CAAC;AACjB,aAAK,OAAO,QAAQ,MAAM;AAC1B,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,cAAI,UAAU,IAAI;AAAE,iBAAK,WAAW,OAAO;AAAA,UAAG;AAC9C,iBAAO,KAAK,SAAS,MAAM,IAAI;AAAA,QACjC;AACA,YAAI,QAAQ,KAAK,MAAM;AACvB,YAAI,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS,QAAQ,UAAU,OAAO;AACvE,cAAI,SAAS,KAAK,UAAU,GAAG,OAAO,QAAQ,QAAQ,KAAK;AAC3D,eAAK,KAAK;AACV,eAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,eAAK,WAAW,QAAQ,qBAAqB;AAC7C,eAAK,KAAK,SAAS,QAAQ,OAAQ,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,MAAO,OAAO,aAAa,WAAW,GAAG;AACjI,gBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,kBAAI,KAAK,SAAS,QAAQ,KAAK;AAC7B,oBAAI,UAAU,IAAI;AAAE,uBAAK,WAAW,OAAO;AAAA,gBAAG;AAAA,cAChD,OAAO;AAAE,qBAAK,QAAQ,UAAU;AAAA,cAAI;AAAA,YACtC;AACA,mBAAO,KAAK,WAAW,MAAM,MAAM;AAAA,UACrC;AACA,cAAI,UAAU,IAAI;AAAE,iBAAK,WAAW,OAAO;AAAA,UAAG;AAC9C,iBAAO,KAAK,SAAS,MAAM,MAAM;AAAA,QACnC;AACA,YAAI,gBAAgB,KAAK,aAAa,KAAK,GAAG,UAAU;AACxD,YAAI,yBAAyB,IAAI;AACjC,YAAIkB,QAAO,KAAK,gBAAgB,UAAU,KAAK,UAAU,MAAM,sBAAsB;AACrF,YAAI,KAAK,SAAS,QAAQ,QAAQ,UAAU,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,IAAI;AACrG,cAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,gBAAI,KAAK,SAAS,QAAQ,KAAK;AAC7B,kBAAI,UAAU,IAAI;AAAE,qBAAK,WAAW,OAAO;AAAA,cAAG;AAAA,YAChD,OAAO;AAAE,mBAAK,QAAQ,UAAU;AAAA,YAAI;AAAA,UACtC;AACA,cAAI,iBAAiB,SAAS;AAAE,iBAAK,MAAMA,MAAK,OAAO,+DAA+D;AAAA,UAAG;AACzH,eAAK,aAAaA,OAAM,OAAO,sBAAsB;AACrD,eAAK,iBAAiBA,KAAI;AAC1B,iBAAO,KAAK,WAAW,MAAMA,KAAI;AAAA,QACnC,OAAO;AACL,eAAK,sBAAsB,wBAAwB,IAAI;AAAA,QACzD;AACA,YAAI,UAAU,IAAI;AAAE,eAAK,WAAW,OAAO;AAAA,QAAG;AAC9C,eAAO,KAAK,SAAS,MAAMA,KAAI;AAAA,MACjC;AAEA,WAAK,yBAAyB,SAAS,MAAM,SAAS,qBAAqB;AACzE,aAAK,KAAK;AACV,eAAO,KAAK,cAAc,MAAM,kBAAkB,sBAAsB,IAAI,yBAAyB,OAAO,OAAO;AAAA,MACrH;AAEA,WAAK,mBAAmB,SAAS,MAAM;AACrC,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,qBAAqB;AAEtC,aAAK,aAAa,KAAK,eAAe,IAAI;AAC1C,aAAK,YAAY,KAAK,IAAI,QAAQ,KAAK,IAAI,KAAK,eAAe,IAAI,IAAI;AACvE,eAAO,KAAK,WAAW,MAAM,aAAa;AAAA,MAC5C;AAEA,WAAK,uBAAuB,SAAS,MAAM;AACzC,YAAI,CAAC,KAAK,cAAc,CAAC,KAAK,QAAQ,4BACpC;AAAE,eAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,QAAG;AAC5D,aAAK,KAAK;AAMV,YAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,gBAAgB,GAAG;AAAE,eAAK,WAAW;AAAA,QAAM,OACzE;AAAE,eAAK,WAAW,KAAK,gBAAgB;AAAG,eAAK,UAAU;AAAA,QAAG;AACjE,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,uBAAuB,SAAS,MAAM;AACzC,aAAK,KAAK;AACV,aAAK,eAAe,KAAK,qBAAqB;AAC9C,aAAK,QAAQ,CAAC;AACd,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,WAAW;AAC5B,aAAK,WAAW,CAAC;AAMjB,YAAI;AACJ,iBAAS,aAAa,OAAO,KAAK,SAAS,QAAQ,UAAS;AAC1D,cAAI,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,QAAQ,UAAU;AACjE,gBAAI,SAAS,KAAK,SAAS,QAAQ;AACnC,gBAAI,KAAK;AAAE,mBAAK,WAAW,KAAK,YAAY;AAAA,YAAG;AAC/C,iBAAK,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC;AACtC,gBAAI,aAAa,CAAC;AAClB,iBAAK,KAAK;AACV,gBAAI,QAAQ;AACV,kBAAI,OAAO,KAAK,gBAAgB;AAAA,YAClC,OAAO;AACL,kBAAI,YAAY;AAAE,qBAAK,iBAAiB,KAAK,cAAc,0BAA0B;AAAA,cAAG;AACxF,2BAAa;AACb,kBAAI,OAAO;AAAA,YACb;AACA,iBAAK,OAAO,QAAQ,KAAK;AAAA,UAC3B,OAAO;AACL,gBAAI,CAAC,KAAK;AAAE,mBAAK,WAAW;AAAA,YAAG;AAC/B,gBAAI,WAAW,KAAK,KAAK,eAAe,IAAI,CAAC;AAAA,UAC/C;AAAA,QACF;AACA,aAAK,UAAU;AACf,YAAI,KAAK;AAAE,eAAK,WAAW,KAAK,YAAY;AAAA,QAAG;AAC/C,aAAK,KAAK;AACV,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,KAAK;AACV,YAAI,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC,GAC9D;AAAE,eAAK,MAAM,KAAK,YAAY,6BAA6B;AAAA,QAAG;AAChE,aAAK,WAAW,KAAK,gBAAgB;AACrC,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAIA,UAAI,UAAU,CAAC;AAEf,WAAK,oBAAoB,SAAS,MAAM;AACtC,aAAK,KAAK;AACV,aAAK,QAAQ,KAAK,WAAW;AAC7B,aAAK,UAAU;AACf,YAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,cAAI,SAAS,KAAK,UAAU;AAC5B,eAAK,KAAK;AACV,cAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC5B,mBAAO,QAAQ,KAAK,iBAAiB;AACrC,gBAAI,SAAS,OAAO,MAAM,SAAS;AACnC,iBAAK,WAAW,SAAS,qBAAqB,CAAC;AAC/C,iBAAK,iBAAiB,OAAO,OAAO,SAAS,oBAAoB,YAAY;AAC7E,iBAAK,OAAO,QAAQ,MAAM;AAAA,UAC5B,OAAO;AACL,gBAAI,KAAK,QAAQ,cAAc,IAAI;AAAE,mBAAK,WAAW;AAAA,YAAG;AACxD,mBAAO,QAAQ;AACf,iBAAK,WAAW,CAAC;AAAA,UACnB;AACA,iBAAO,OAAO,KAAK,WAAW,KAAK;AACnC,eAAK,UAAU;AACf,eAAK,UAAU,KAAK,WAAW,QAAQ,aAAa;AAAA,QACtD;AACA,aAAK,YAAY,KAAK,IAAI,QAAQ,QAAQ,IAAI,KAAK,WAAW,IAAI;AAClE,YAAI,CAAC,KAAK,WAAW,CAAC,KAAK,WACzB;AAAE,eAAK,MAAM,KAAK,OAAO,iCAAiC;AAAA,QAAG;AAC/D,eAAO,KAAK,WAAW,MAAM,cAAc;AAAA,MAC7C;AAEA,WAAK,oBAAoB,SAAS,MAAM,MAAM;AAC5C,aAAK,KAAK;AACV,aAAK,SAAS,MAAM,OAAO,IAAI;AAC/B,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,qBAAqB;AAAA,MACpD;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,qBAAqB;AACtC,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,OAAO,KAAK,eAAe,OAAO;AACvC,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAEA,WAAK,qBAAqB,SAAS,MAAM;AACvC,YAAI,KAAK,QAAQ;AAAE,eAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,QAAG;AACpE,aAAK,KAAK;AACV,aAAK,SAAS,KAAK,qBAAqB;AACxC,aAAK,OAAO,KAAK,eAAe,MAAM;AACtC,eAAO,KAAK,WAAW,MAAM,eAAe;AAAA,MAC9C;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,KAAK;AACV,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAEA,WAAK,wBAAwB,SAAS,MAAM,WAAW,MAAM,SAAS;AACpE,iBAAS,MAAM,GAAGD,QAAO,KAAK,QAAQ,MAAMA,MAAK,QAAQ,OAAO,GAC9D;AACA,cAAI,QAAQA,MAAK,GAAG;AAEpB,cAAI,MAAM,SAAS,WACjB;AAAE,iBAAK,MAAM,KAAK,OAAO,YAAY,YAAY,uBAAuB;AAAA,UAC5E;AAAA,QAAE;AACF,YAAI,OAAO,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,QAAQ,UAAU,WAAW;AAClF,iBAASjB,KAAI,KAAK,OAAO,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAChD,cAAI,UAAU,KAAK,OAAOA,EAAC;AAC3B,cAAI,QAAQ,mBAAmB,KAAK,OAAO;AAEzC,oBAAQ,iBAAiB,KAAK;AAC9B,oBAAQ,OAAO;AAAA,UACjB,OAAO;AAAE;AAAA,UAAM;AAAA,QACjB;AACA,aAAK,OAAO,KAAK,EAAC,MAAM,WAAW,MAAY,gBAAgB,KAAK,MAAK,CAAC;AAC1E,aAAK,OAAO,KAAK,eAAe,UAAU,QAAQ,QAAQ,OAAO,MAAM,KAAK,UAAU,UAAU,UAAU,OAAO;AACjH,aAAK,OAAO,IAAI;AAChB,aAAK,QAAQ;AACb,eAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,MACjD;AAEA,WAAK,2BAA2B,SAAS,MAAM,MAAM;AACnD,aAAK,aAAa;AAClB,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,qBAAqB;AAAA,MACpD;AAMA,WAAK,aAAa,SAAS,uBAAuB,MAAM,YAAY;AAClE,YAAK,0BAA0B;AAAS,kCAAwB;AAChE,YAAK,SAAS;AAAS,iBAAO,KAAK,UAAU;AAE7C,aAAK,OAAO,CAAC;AACb,aAAK,OAAO,QAAQ,MAAM;AAC1B,YAAI,uBAAuB;AAAE,eAAK,WAAW,CAAC;AAAA,QAAG;AACjD,eAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,cAAI,OAAO,KAAK,eAAe,IAAI;AACnC,eAAK,KAAK,KAAK,IAAI;AAAA,QACrB;AACA,YAAI,YAAY;AAAE,eAAK,SAAS;AAAA,QAAO;AACvC,aAAK,KAAK;AACV,YAAI,uBAAuB;AAAE,eAAK,UAAU;AAAA,QAAG;AAC/C,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAMA,WAAK,WAAW,SAAS,MAAMkB,OAAM;AACnC,aAAK,OAAOA;AACZ,aAAK,OAAO,QAAQ,IAAI;AACxB,aAAK,OAAO,KAAK,SAAS,QAAQ,OAAO,OAAO,KAAK,gBAAgB;AACrE,aAAK,OAAO,QAAQ,IAAI;AACxB,aAAK,SAAS,KAAK,SAAS,QAAQ,SAAS,OAAO,KAAK,gBAAgB;AACzE,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,eAAe,KAAK;AACrC,aAAK,UAAU;AACf,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,cAAc;AAAA,MAC7C;AAKA,WAAK,aAAa,SAAS,MAAMA,OAAM;AACrC,YAAI,UAAU,KAAK,SAAS,QAAQ;AACpC,aAAK,KAAK;AAEV,YACEA,MAAK,SAAS,yBACdA,MAAK,aAAa,CAAC,EAAE,QAAQ,SAE3B,CAAC,WACD,KAAK,QAAQ,cAAc,KAC3B,KAAK,UACLA,MAAK,SAAS,SACdA,MAAK,aAAa,CAAC,EAAE,GAAG,SAAS,eAEnC;AACA,eAAK;AAAA,YACHA,MAAK;AAAA,aACH,UAAU,WAAW,YAAY;AAAA,UACrC;AAAA,QACF;AACA,aAAK,OAAOA;AACZ,aAAK,QAAQ,UAAU,KAAK,gBAAgB,IAAI,KAAK,iBAAiB;AACtE,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,eAAe,KAAK;AACrC,aAAK,UAAU;AACf,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,UAAU,mBAAmB,gBAAgB;AAAA,MAC5E;AAIA,WAAK,WAAW,SAAS,MAAM,OAAO,MAAM;AAC1C,aAAK,eAAe,CAAC;AACrB,aAAK,OAAO;AACZ,mBAAS;AACP,cAAI,OAAO,KAAK,UAAU;AAC1B,eAAK,WAAW,MAAM,IAAI;AAC1B,cAAI,KAAK,IAAI,QAAQ,EAAE,GAAG;AACxB,iBAAK,OAAO,KAAK,iBAAiB,KAAK;AAAA,UACzC,WAAW,SAAS,WAAW,EAAE,KAAK,SAAS,QAAQ,OAAQ,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,IAAK;AACzH,iBAAK,WAAW;AAAA,UAClB,WAAW,KAAK,GAAG,SAAS,gBAAgB,EAAE,UAAU,KAAK,SAAS,QAAQ,OAAO,KAAK,aAAa,IAAI,KAAK;AAC9G,iBAAK,MAAM,KAAK,YAAY,0DAA0D;AAAA,UACxF,OAAO;AACL,iBAAK,OAAO;AAAA,UACd;AACA,eAAK,aAAa,KAAK,KAAK,WAAW,MAAM,oBAAoB,CAAC;AAClE,cAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE;AAAA,UAAM;AAAA,QACxC;AACA,eAAO;AAAA,MACT;AAEA,WAAK,aAAa,SAAS,MAAM,MAAM;AACrC,aAAK,KAAK,KAAK,iBAAiB;AAChC,aAAK,iBAAiB,KAAK,IAAI,SAAS,QAAQ,WAAW,cAAc,KAAK;AAAA,MAChF;AAEA,UAAI,iBAAiB,GAAG,yBAAyB,GAAG,mBAAmB;AAMvE,WAAK,gBAAgB,SAAS,MAAM,WAAW,qBAAqB,SAAS,SAAS;AACpF,aAAK,aAAa,IAAI;AACtB,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,QAAQ,eAAe,KAAK,CAAC,SAAS;AAC9E,cAAI,KAAK,SAAS,QAAQ,QAAS,YAAY,wBAC7C;AAAE,iBAAK,WAAW;AAAA,UAAG;AACvB,eAAK,YAAY,KAAK,IAAI,QAAQ,IAAI;AAAA,QACxC;AACA,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,QAAQ,CAAC,CAAC;AAAA,QAAS;AAE5B,YAAI,YAAY,gBAAgB;AAC9B,eAAK,KAAM,YAAY,oBAAqB,KAAK,SAAS,QAAQ,OAAO,OAAO,KAAK,WAAW;AAChG,cAAI,KAAK,MAAM,EAAE,YAAY,yBAK3B;AAAE,iBAAK,gBAAgB,KAAK,IAAK,KAAK,UAAU,KAAK,aAAa,KAAK,QAAS,KAAK,sBAAsB,WAAW,eAAe,aAAa;AAAA,UAAG;AAAA,QACzJ;AAEA,YAAI,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AACtF,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,aAAK,WAAW,cAAc,KAAK,OAAO,KAAK,SAAS,CAAC;AAEzD,YAAI,EAAE,YAAY,iBAChB;AAAE,eAAK,KAAK,KAAK,SAAS,QAAQ,OAAO,KAAK,WAAW,IAAI;AAAA,QAAM;AAErE,aAAK,oBAAoB,IAAI;AAC7B,aAAK,kBAAkB,MAAM,qBAAqB,OAAO,OAAO;AAEhE,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,eAAO,KAAK,WAAW,MAAO,YAAY,iBAAkB,wBAAwB,oBAAoB;AAAA,MAC1G;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,SAAS,KAAK,iBAAiB,QAAQ,QAAQ,OAAO,KAAK,QAAQ,eAAe,CAAC;AACxF,aAAK,+BAA+B;AAAA,MACtC;AAKA,WAAK,aAAa,SAAS,MAAM,aAAa;AAC5C,aAAK,KAAK;AAIV,YAAI,YAAY,KAAK;AACrB,aAAK,SAAS;AAEd,aAAK,aAAa,MAAM,WAAW;AACnC,aAAK,gBAAgB,IAAI;AACzB,YAAI,iBAAiB,KAAK,eAAe;AACzC,YAAI,YAAY,KAAK,UAAU;AAC/B,YAAI,iBAAiB;AACrB,kBAAU,OAAO,CAAC;AAClB,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,cAAIC,WAAU,KAAK,kBAAkB,KAAK,eAAe,IAAI;AAC7D,cAAIA,UAAS;AACX,sBAAU,KAAK,KAAKA,QAAO;AAC3B,gBAAIA,SAAQ,SAAS,sBAAsBA,SAAQ,SAAS,eAAe;AACzE,kBAAI,gBAAgB;AAAE,qBAAK,MAAMA,SAAQ,OAAO,yCAAyC;AAAA,cAAG;AAC5F,+BAAiB;AAAA,YACnB,WAAWA,SAAQ,OAAOA,SAAQ,IAAI,SAAS,uBAAuB,wBAAwB,gBAAgBA,QAAO,GAAG;AACtH,mBAAK,iBAAiBA,SAAQ,IAAI,OAAQ,kBAAmBA,SAAQ,IAAI,OAAQ,6BAA8B;AAAA,YACjH;AAAA,UACF;AAAA,QACF;AACA,aAAK,SAAS;AACd,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,WAAW,WAAW,WAAW;AAClD,aAAK,cAAc;AACnB,eAAO,KAAK,WAAW,MAAM,cAAc,qBAAqB,iBAAiB;AAAA,MACnF;AAEA,WAAK,oBAAoB,SAAS,wBAAwB;AACxD,YAAI,KAAK,IAAI,QAAQ,IAAI,GAAG;AAAE,iBAAO;AAAA,QAAK;AAE1C,YAAIC,eAAc,KAAK,QAAQ;AAC/B,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,UAAU;AACd,YAAI,cAAc;AAClB,YAAI,UAAU;AACd,YAAI,OAAO;AACX,YAAI,WAAW;AAEf,YAAI,KAAK,cAAc,QAAQ,GAAG;AAEhC,cAAIA,gBAAe,MAAM,KAAK,IAAI,QAAQ,MAAM,GAAG;AACjD,iBAAK,sBAAsB,IAAI;AAC/B,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,wBAAwB,KAAK,KAAK,SAAS,QAAQ,MAAM;AAChE,uBAAW;AAAA,UACb,OAAO;AACL,sBAAU;AAAA,UACZ;AAAA,QACF;AACA,aAAK,SAAS;AACd,YAAI,CAAC,WAAWA,gBAAe,KAAK,KAAK,cAAc,OAAO,GAAG;AAC/D,eAAK,KAAK,wBAAwB,KAAK,KAAK,SAAS,QAAQ,SAAS,CAAC,KAAK,mBAAmB,GAAG;AAChG,sBAAU;AAAA,UACZ,OAAO;AACL,sBAAU;AAAA,UACZ;AAAA,QACF;AACA,YAAI,CAAC,YAAYA,gBAAe,KAAK,CAAC,YAAY,KAAK,IAAI,QAAQ,IAAI,GAAG;AACxE,wBAAc;AAAA,QAChB;AACA,YAAI,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa;AACxC,cAAI,YAAY,KAAK;AACrB,cAAI,KAAK,cAAc,KAAK,KAAK,KAAK,cAAc,KAAK,GAAG;AAC1D,gBAAI,KAAK,wBAAwB,GAAG;AAClC,qBAAO;AAAA,YACT,OAAO;AACL,wBAAU;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAGA,YAAI,SAAS;AAGX,eAAK,WAAW;AAChB,eAAK,MAAM,KAAK,YAAY,KAAK,cAAc,KAAK,eAAe;AACnE,eAAK,IAAI,OAAO;AAChB,eAAK,WAAW,KAAK,KAAK,YAAY;AAAA,QACxC,OAAO;AACL,eAAK,sBAAsB,IAAI;AAAA,QACjC;AAGA,YAAIA,eAAc,MAAM,KAAK,SAAS,QAAQ,UAAU,SAAS,YAAY,eAAe,SAAS;AACnG,cAAI,gBAAgB,CAAC,KAAK,UAAU,aAAa,MAAM,aAAa;AACpE,cAAI,oBAAoB,iBAAiB;AAEzC,cAAI,iBAAiB,SAAS,UAAU;AAAE,iBAAK,MAAM,KAAK,IAAI,OAAO,yCAAyC;AAAA,UAAG;AACjH,eAAK,OAAO,gBAAgB,gBAAgB;AAC5C,eAAK,iBAAiB,MAAM,aAAa,SAAS,iBAAiB;AAAA,QACrE,OAAO;AACL,eAAK,gBAAgB,IAAI;AAAA,QAC3B;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,0BAA0B,WAAW;AACxC,eACE,KAAK,SAAS,QAAQ,QACtB,KAAK,SAAS,QAAQ,aACtB,KAAK,SAAS,QAAQ,OACtB,KAAK,SAAS,QAAQ,UACtB,KAAK,SAAS,QAAQ,YACtB,KAAK,KAAK;AAAA,MAEd;AAEA,WAAK,wBAAwB,SAASD,UAAS;AAC7C,YAAI,KAAK,SAAS,QAAQ,WAAW;AACnC,cAAI,KAAK,UAAU,eAAe;AAChC,iBAAK,MAAM,KAAK,OAAO,oDAAoD;AAAA,UAC7E;AACA,UAAAA,SAAQ,WAAW;AACnB,UAAAA,SAAQ,MAAM,KAAK,kBAAkB;AAAA,QACvC,OAAO;AACL,eAAK,kBAAkBA,QAAO;AAAA,QAChC;AAAA,MACF;AAEA,WAAK,mBAAmB,SAAS,QAAQ,aAAa,SAAS,mBAAmB;AAEhF,YAAI,MAAM,OAAO;AACjB,YAAI,OAAO,SAAS,eAAe;AACjC,cAAI,aAAa;AAAE,iBAAK,MAAM,IAAI,OAAO,kCAAkC;AAAA,UAAG;AAC9E,cAAI,SAAS;AAAE,iBAAK,MAAM,IAAI,OAAO,sCAAsC;AAAA,UAAG;AAAA,QAChF,WAAW,OAAO,UAAU,aAAa,QAAQ,WAAW,GAAG;AAC7D,eAAK,MAAM,IAAI,OAAO,wDAAwD;AAAA,QAChF;AAGA,YAAI,QAAQ,OAAO,QAAQ,KAAK,YAAY,aAAa,SAAS,iBAAiB;AAGnF,YAAI,OAAO,SAAS,SAAS,MAAM,OAAO,WAAW,GACnD;AAAE,eAAK,iBAAiB,MAAM,OAAO,8BAA8B;AAAA,QAAG;AACxE,YAAI,OAAO,SAAS,SAAS,MAAM,OAAO,WAAW,GACnD;AAAE,eAAK,iBAAiB,MAAM,OAAO,sCAAsC;AAAA,QAAG;AAChF,YAAI,OAAO,SAAS,SAAS,MAAM,OAAO,CAAC,EAAE,SAAS,eACpD;AAAE,eAAK,iBAAiB,MAAM,OAAO,CAAC,EAAE,OAAO,+BAA+B;AAAA,QAAG;AAEnF,eAAO,KAAK,WAAW,QAAQ,kBAAkB;AAAA,MACnD;AAEA,WAAK,kBAAkB,SAAS,OAAO;AACrC,YAAI,aAAa,OAAO,aAAa,GAAG;AACtC,eAAK,MAAM,MAAM,IAAI,OAAO,gDAAgD;AAAA,QAC9E,WAAW,MAAM,UAAU,aAAa,OAAO,WAAW,GAAG;AAC3D,eAAK,MAAM,MAAM,IAAI,OAAO,qDAAqD;AAAA,QACnF;AAEA,YAAI,KAAK,IAAI,QAAQ,EAAE,GAAG;AAExB,cAAI,QAAQ,KAAK,iBAAiB;AAClC,cAAI,mBAAmB,MAAM;AAC7B,gBAAM,mBAAmB;AACzB,gBAAM,QAAQ,KAAK,iBAAiB;AACpC,gBAAM,mBAAmB;AAAA,QAC3B,OAAO;AACL,gBAAM,QAAQ;AAAA,QAChB;AACA,aAAK,UAAU;AAEf,eAAO,KAAK,WAAW,OAAO,oBAAoB;AAAA,MACpD;AAEA,WAAK,wBAAwB,SAAS,MAAM;AAC1C,aAAK,OAAO,CAAC;AAEb,YAAI,YAAY,KAAK;AACrB,aAAK,SAAS,CAAC;AACf,aAAK,WAAW,2BAA2B,WAAW;AACtD,eAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,cAAI,OAAO,KAAK,eAAe,IAAI;AACnC,eAAK,KAAK,KAAK,IAAI;AAAA,QACrB;AACA,aAAK,KAAK;AACV,aAAK,UAAU;AACf,aAAK,SAAS;AAEd,eAAO,KAAK,WAAW,MAAM,aAAa;AAAA,MAC5C;AAEA,WAAK,eAAe,SAAS,MAAM,aAAa;AAC9C,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,eAAK,KAAK,KAAK,WAAW;AAC1B,cAAI,aACF;AAAE,iBAAK,gBAAgB,KAAK,IAAI,cAAc,KAAK;AAAA,UAAG;AAAA,QAC1D,OAAO;AACL,cAAI,gBAAgB,MAClB;AAAE,iBAAK,WAAW;AAAA,UAAG;AACvB,eAAK,KAAK;AAAA,QACZ;AAAA,MACF;AAEA,WAAK,kBAAkB,SAAS,MAAM;AACpC,aAAK,aAAa,KAAK,IAAI,QAAQ,QAAQ,IAAI,KAAK,oBAAoB,KAAK,IAAI;AAAA,MACnF;AAEA,WAAK,iBAAiB,WAAW;AAC/B,YAAIA,WAAU,EAAC,UAAU,uBAAO,OAAO,IAAI,GAAG,MAAM,CAAC,EAAC;AACtD,aAAK,iBAAiB,KAAKA,QAAO;AAClC,eAAOA,SAAQ;AAAA,MACjB;AAEA,WAAK,gBAAgB,WAAW;AAC9B,YAAIN,OAAM,KAAK,iBAAiB,IAAI;AACpC,YAAI,WAAWA,KAAI;AACnB,YAAI,OAAOA,KAAI;AACf,YAAI,MAAM,KAAK,iBAAiB;AAChC,YAAI,SAAS,QAAQ,IAAI,OAAO,KAAK,iBAAiB,MAAM,CAAC;AAC7D,iBAASb,KAAI,GAAGA,KAAI,KAAK,QAAQ,EAAEA,IAAG;AACpC,cAAI,KAAK,KAAKA,EAAC;AACf,cAAI,CAAC,OAAO,UAAU,GAAG,IAAI,GAAG;AAC9B,gBAAI,QAAQ;AACV,qBAAO,KAAK,KAAK,EAAE;AAAA,YACrB,OAAO;AACL,mBAAK,iBAAiB,GAAG,OAAQ,qBAAsB,GAAG,OAAQ,0CAA2C;AAAA,YAC/G;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,eAAS,wBAAwB,gBAAgBmB,UAAS;AACxD,YAAIjB,QAAOiB,SAAQ,IAAI;AACvB,YAAI,OAAO,eAAejB,KAAI;AAE9B,YAAI,OAAO;AACX,YAAIiB,SAAQ,SAAS,uBAAuBA,SAAQ,SAAS,SAASA,SAAQ,SAAS,QAAQ;AAC7F,kBAAQA,SAAQ,SAAS,MAAM,OAAOA,SAAQ;AAAA,QAChD;AAGA,YACE,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,QAC5B;AACA,yBAAejB,KAAI,IAAI;AACvB,iBAAO;AAAA,QACT,WAAW,CAAC,MAAM;AAChB,yBAAeA,KAAI,IAAI;AACvB,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,eAAS,aAAa,MAAMA,OAAM;AAChC,YAAI,WAAW,KAAK;AACpB,YAAI,MAAM,KAAK;AACf,eAAO,CAAC,aACN,IAAI,SAAS,gBAAgB,IAAI,SAASA,SAC1C,IAAI,SAAS,aAAa,IAAI,UAAUA;AAAA,MAE5C;AAIA,WAAK,cAAc,SAAS,MAAML,UAAS;AACzC,aAAK,KAAK;AAEV,YAAI,KAAK,IAAI,QAAQ,IAAI,GAAG;AAC1B,cAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,gBAAI,KAAK,cAAc,IAAI,GAAG;AAC5B,mBAAK,WAAW,KAAK,sBAAsB;AAC3C,mBAAK,YAAYA,UAAS,KAAK,UAAU,KAAK,YAAY;AAAA,YAC5D,OAAO;AACL,mBAAK,WAAW;AAAA,YAClB;AAAA,UACF;AACA,eAAK,iBAAiB,MAAM;AAC5B,cAAI,KAAK,SAAS,QAAQ,QAAQ;AAAE,iBAAK,WAAW;AAAA,UAAG;AACvD,eAAK,SAAS,KAAK,cAAc;AACjC,eAAK,UAAU;AACf,iBAAO,KAAK,WAAW,MAAM,sBAAsB;AAAA,QACrD;AACA,YAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,eAAK,YAAYA,UAAS,WAAW,KAAK,YAAY;AACtD,cAAI;AACJ,cAAI,KAAK,SAAS,QAAQ,cAAc,UAAU,KAAK,gBAAgB,IAAI;AACzE,gBAAI,QAAQ,KAAK,UAAU;AAC3B,iBAAK,KAAK;AACV,gBAAI,SAAS;AAAE,mBAAK,KAAK;AAAA,YAAG;AAC5B,iBAAK,cAAc,KAAK,cAAc,OAAO,iBAAiB,kBAAkB,OAAO,OAAO;AAAA,UAChG,WAAW,KAAK,SAAS,QAAQ,QAAQ;AACvC,gBAAI,QAAQ,KAAK,UAAU;AAC3B,iBAAK,cAAc,KAAK,WAAW,OAAO,YAAY;AAAA,UACxD,OAAO;AACL,iBAAK,cAAc,KAAK,iBAAiB;AACzC,iBAAK,UAAU;AAAA,UACjB;AACA,iBAAO,KAAK,WAAW,MAAM,0BAA0B;AAAA,QACzD;AAEA,YAAI,KAAK,2BAA2B,GAAG;AACrC,eAAK,cAAc,KAAK,eAAe,IAAI;AAC3C,cAAI,KAAK,YAAY,SAAS,uBAC5B;AAAE,iBAAK,oBAAoBA,UAAS,KAAK,YAAY,YAAY;AAAA,UAAG,OAEpE;AAAE,iBAAK,YAAYA,UAAS,KAAK,YAAY,IAAI,KAAK,YAAY,GAAG,KAAK;AAAA,UAAG;AAC/E,eAAK,aAAa,CAAC;AACnB,eAAK,SAAS;AAAA,QAChB,OAAO;AACL,eAAK,cAAc;AACnB,eAAK,aAAa,KAAK,sBAAsBA,QAAO;AACpD,cAAI,KAAK,cAAc,MAAM,GAAG;AAC9B,gBAAI,KAAK,SAAS,QAAQ,QAAQ;AAAE,mBAAK,WAAW;AAAA,YAAG;AACvD,iBAAK,SAAS,KAAK,cAAc;AAAA,UACnC,OAAO;AACL,qBAASG,KAAI,GAAGiB,QAAO,KAAK,YAAYjB,KAAIiB,MAAK,QAAQjB,MAAK,GAAG;AAE/D,kBAAI,OAAOiB,MAAKjB,EAAC;AAEjB,mBAAK,gBAAgB,KAAK,KAAK;AAE/B,mBAAK,iBAAiB,KAAK,KAAK;AAEhC,kBAAI,KAAK,MAAM,SAAS,WAAW;AACjC,qBAAK,MAAM,KAAK,MAAM,OAAO,wEAAwE;AAAA,cACvG;AAAA,YACF;AAEA,iBAAK,SAAS;AAAA,UAChB;AACA,eAAK,UAAU;AAAA,QACjB;AACA,eAAO,KAAK,WAAW,MAAM,wBAAwB;AAAA,MACvD;AAEA,WAAK,cAAc,SAASH,UAASK,OAAM,KAAK;AAC9C,YAAI,CAACL,UAAS;AAAE;AAAA,QAAO;AACvB,YAAI,OAAOK,UAAS,UAClB;AAAE,UAAAA,QAAOA,MAAK,SAAS,eAAeA,MAAK,OAAOA,MAAK;AAAA,QAAO;AAChE,YAAI,OAAOL,UAASK,KAAI,GACtB;AAAE,eAAK,iBAAiB,KAAK,uBAAuBA,QAAO,GAAG;AAAA,QAAG;AACnE,QAAAL,SAAQK,KAAI,IAAI;AAAA,MAClB;AAEA,WAAK,qBAAqB,SAASL,UAAS,KAAK;AAC/C,YAAI,OAAO,IAAI;AACf,YAAI,SAAS,cACX;AAAE,eAAK,YAAYA,UAAS,KAAK,IAAI,KAAK;AAAA,QAAG,WACtC,SAAS,iBAChB;AAAE,mBAASG,KAAI,GAAGiB,QAAO,IAAI,YAAYjB,KAAIiB,MAAK,QAAQjB,MAAK,GAC7D;AACE,gBAAI,OAAOiB,MAAKjB,EAAC;AAEjB,iBAAK,mBAAmBH,UAAS,IAAI;AAAA,UACvC;AAAA,QAAE,WACG,SAAS,gBAChB;AAAE,mBAAS,MAAM,GAAG,SAAS,IAAI,UAAU,MAAM,OAAO,QAAQ,OAAO,GAAG;AACxE,gBAAI,MAAM,OAAO,GAAG;AAElB,gBAAI,KAAK;AAAE,mBAAK,mBAAmBA,UAAS,GAAG;AAAA,YAAG;AAAA,UACtD;AAAA,QAAE,WACK,SAAS,YAChB;AAAE,eAAK,mBAAmBA,UAAS,IAAI,KAAK;AAAA,QAAG,WACxC,SAAS,qBAChB;AAAE,eAAK,mBAAmBA,UAAS,IAAI,IAAI;AAAA,QAAG,WACvC,SAAS,eAChB;AAAE,eAAK,mBAAmBA,UAAS,IAAI,QAAQ;AAAA,QAAG,WAC3C,SAAS,2BAChB;AAAE,eAAK,mBAAmBA,UAAS,IAAI,UAAU;AAAA,QAAG;AAAA,MACxD;AAEA,WAAK,sBAAsB,SAASA,UAAS,OAAO;AAClD,YAAI,CAACA,UAAS;AAAE;AAAA,QAAO;AACvB,iBAASG,KAAI,GAAGiB,QAAO,OAAOjB,KAAIiB,MAAK,QAAQjB,MAAK,GAClD;AACA,cAAI,OAAOiB,MAAKjB,EAAC;AAEjB,eAAK,mBAAmBH,UAAS,KAAK,EAAE;AAAA,QAC1C;AAAA,MACF;AAEA,WAAK,6BAA6B,WAAW;AAC3C,eAAO,KAAK,KAAK,YAAY,SAC3B,KAAK,KAAK,YAAY,WACtB,KAAK,KAAK,YAAY,WACtB,KAAK,KAAK,YAAY,cACtB,KAAK,MAAM,KACX,KAAK,gBAAgB;AAAA,MACzB;AAIA,WAAK,wBAAwB,SAASA,UAAS;AAC7C,YAAI,QAAQ,CAAC,GAAG,QAAQ;AAExB,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,YAAM;AAAA,UACvD,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,cAAI,OAAO,KAAK,UAAU;AAC1B,eAAK,QAAQ,KAAK,sBAAsB;AACxC,eAAK,WAAW,KAAK,cAAc,IAAI,IAAI,KAAK,sBAAsB,IAAI,KAAK;AAC/E,eAAK;AAAA,YACHA;AAAA,YACA,KAAK;AAAA,YACL,KAAK,SAAS;AAAA,UAChB;AACA,gBAAM,KAAK,KAAK,WAAW,MAAM,iBAAiB,CAAC;AAAA,QACrD;AACA,eAAO;AAAA,MACT;AAIA,WAAK,cAAc,SAAS,MAAM;AAChC,aAAK,KAAK;AAEV,YAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,eAAK,aAAa;AAClB,eAAK,SAAS,KAAK,cAAc;AAAA,QACnC,OAAO;AACL,eAAK,aAAa,KAAK,sBAAsB;AAC7C,eAAK,iBAAiB,MAAM;AAC5B,eAAK,SAAS,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAc,IAAI,KAAK,WAAW;AAAA,QACtF;AACA,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,MAClD;AAIA,WAAK,wBAAwB,WAAW;AACtC,YAAI,QAAQ,CAAC,GAAG,QAAQ;AACxB,YAAI,KAAK,SAAS,QAAQ,MAAM;AAE9B,cAAI,OAAO,KAAK,UAAU;AAC1B,eAAK,QAAQ,KAAK,WAAW;AAC7B,eAAK,gBAAgB,KAAK,OAAO,YAAY;AAC7C,gBAAM,KAAK,KAAK,WAAW,MAAM,wBAAwB,CAAC;AAC1D,cAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE,mBAAO;AAAA,UAAM;AAAA,QAC/C;AACA,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,cAAI,SAAS,KAAK,UAAU;AAC5B,eAAK,KAAK;AACV,eAAK,iBAAiB,IAAI;AAC1B,iBAAO,QAAQ,KAAK,WAAW;AAC/B,eAAK,gBAAgB,OAAO,OAAO,YAAY;AAC/C,gBAAM,KAAK,KAAK,WAAW,QAAQ,0BAA0B,CAAC;AAC9D,iBAAO;AAAA,QACT;AACA,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,YAAM;AAAA,UACvD,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,cAAI,SAAS,KAAK,UAAU;AAC5B,iBAAO,WAAW,KAAK,sBAAsB;AAC7C,cAAI,KAAK,cAAc,IAAI,GAAG;AAC5B,mBAAO,QAAQ,KAAK,WAAW;AAAA,UACjC,OAAO;AACL,iBAAK,gBAAgB,OAAO,QAAQ;AACpC,mBAAO,QAAQ,OAAO;AAAA,UACxB;AACA,eAAK,gBAAgB,OAAO,OAAO,YAAY;AAC/C,gBAAM,KAAK,KAAK,WAAW,QAAQ,iBAAiB,CAAC;AAAA,QACvD;AACA,eAAO;AAAA,MACT;AAEA,WAAK,wBAAwB,WAAW;AACtC,YAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,SAAS,QAAQ,QAAQ;AAClE,cAAI,gBAAgB,KAAK,aAAa,KAAK,KAAK;AAChD,cAAI,cAAc,KAAK,cAAc,KAAK,GAAG;AAC3C,iBAAK,MAAM,cAAc,OAAO,iDAAiD;AAAA,UACnF;AACA,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,WAAW,IAAI;AAAA,MAC7B;AAGA,WAAK,yBAAyB,SAAS,YAAY;AACjD,iBAASG,KAAI,GAAGA,KAAI,WAAW,UAAU,KAAK,qBAAqB,WAAWA,EAAC,CAAC,GAAG,EAAEA,IAAG;AACtF,qBAAWA,EAAC,EAAE,YAAY,WAAWA,EAAC,EAAE,WAAW,IAAI,MAAM,GAAG,EAAE;AAAA,QACpE;AAAA,MACF;AACA,WAAK,uBAAuB,SAAS,WAAW;AAC9C,eACE,KAAK,QAAQ,eAAe,KAC5B,UAAU,SAAS,yBACnB,UAAU,WAAW,SAAS,aAC9B,OAAO,UAAU,WAAW,UAAU;AAAA,SAErC,KAAK,MAAM,UAAU,KAAK,MAAM,OAAQ,KAAK,MAAM,UAAU,KAAK,MAAM;AAAA,MAE7E;AAEA,UAAI,OAAOW,QAAO;AAKlB,WAAK,eAAe,SAAS,MAAM,WAAW,wBAAwB;AACpE,YAAI,KAAK,QAAQ,eAAe,KAAK,MAAM;AACzC,kBAAQ,KAAK,MAAM;AAAA,YACnB,KAAK;AACH,kBAAI,KAAK,WAAW,KAAK,SAAS,SAChC;AAAE,qBAAK,MAAM,KAAK,OAAO,2DAA2D;AAAA,cAAG;AACzF;AAAA,YAEF,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH;AAAA,YAEF,KAAK;AACH,mBAAK,OAAO;AACZ,kBAAI,wBAAwB;AAAE,qBAAK,mBAAmB,wBAAwB,IAAI;AAAA,cAAG;AACrF,uBAASX,KAAI,GAAGiB,QAAO,KAAK,YAAYjB,KAAIiB,MAAK,QAAQjB,MAAK,GAAG;AAC/D,oBAAI,OAAOiB,MAAKjB,EAAC;AAEnB,qBAAK,aAAa,MAAM,SAAS;AAM/B,oBACE,KAAK,SAAS,kBACb,KAAK,SAAS,SAAS,kBAAkB,KAAK,SAAS,SAAS,kBACjE;AACA,uBAAK,MAAM,KAAK,SAAS,OAAO,kBAAkB;AAAA,gBACpD;AAAA,cACF;AACA;AAAA,YAEF,KAAK;AAEH,kBAAI,KAAK,SAAS,QAAQ;AAAE,qBAAK,MAAM,KAAK,IAAI,OAAO,+CAA+C;AAAA,cAAG;AACzG,mBAAK,aAAa,KAAK,OAAO,SAAS;AACvC;AAAA,YAEF,KAAK;AACH,mBAAK,OAAO;AACZ,kBAAI,wBAAwB;AAAE,qBAAK,mBAAmB,wBAAwB,IAAI;AAAA,cAAG;AACrF,mBAAK,iBAAiB,KAAK,UAAU,SAAS;AAC9C;AAAA,YAEF,KAAK;AACH,mBAAK,OAAO;AACZ,mBAAK,aAAa,KAAK,UAAU,SAAS;AAC1C,kBAAI,KAAK,SAAS,SAAS,qBACzB;AAAE,qBAAK,MAAM,KAAK,SAAS,OAAO,2CAA2C;AAAA,cAAG;AAClF;AAAA,YAEF,KAAK;AACH,kBAAI,KAAK,aAAa,KAAK;AAAE,qBAAK,MAAM,KAAK,KAAK,KAAK,6DAA6D;AAAA,cAAG;AACvH,mBAAK,OAAO;AACZ,qBAAO,KAAK;AACZ,mBAAK,aAAa,KAAK,MAAM,SAAS;AACtC;AAAA,YAEF,KAAK;AACH,mBAAK,aAAa,KAAK,YAAY,WAAW,sBAAsB;AACpE;AAAA,YAEF,KAAK;AACH,mBAAK,iBAAiB,KAAK,OAAO,mDAAmD;AACrF;AAAA,YAEF,KAAK;AACH,kBAAI,CAAC,WAAW;AAAE;AAAA,cAAM;AAAA,YAE1B;AACE,mBAAK,MAAM,KAAK,OAAO,qBAAqB;AAAA,UAC9C;AAAA,QACF,WAAW,wBAAwB;AAAE,eAAK,mBAAmB,wBAAwB,IAAI;AAAA,QAAG;AAC5F,eAAO;AAAA,MACT;AAIA,WAAK,mBAAmB,SAAS,UAAU,WAAW;AACpD,YAAI,MAAM,SAAS;AACnB,iBAASA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAC5B,cAAI,MAAM,SAASA,EAAC;AACpB,cAAI,KAAK;AAAE,iBAAK,aAAa,KAAK,SAAS;AAAA,UAAG;AAAA,QAChD;AACA,YAAI,KAAK;AACP,cAAI,OAAO,SAAS,MAAM,CAAC;AAC3B,cAAI,KAAK,QAAQ,gBAAgB,KAAK,aAAa,QAAQ,KAAK,SAAS,iBAAiB,KAAK,SAAS,SAAS,cAC/G;AAAE,iBAAK,WAAW,KAAK,SAAS,KAAK;AAAA,UAAG;AAAA,QAC5C;AACA,eAAO;AAAA,MACT;AAIA,WAAK,cAAc,SAAS,wBAAwB;AAClD,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,aAAK,WAAW,KAAK,iBAAiB,OAAO,sBAAsB;AACnE,eAAO,KAAK,WAAW,MAAM,eAAe;AAAA,MAC9C;AAEA,WAAK,mBAAmB,WAAW;AACjC,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AAGV,YAAI,KAAK,QAAQ,gBAAgB,KAAK,KAAK,SAAS,QAAQ,MAC1D;AAAE,eAAK,WAAW;AAAA,QAAG;AAEvB,aAAK,WAAW,KAAK,iBAAiB;AAEtC,eAAO,KAAK,WAAW,MAAM,aAAa;AAAA,MAC5C;AAIA,WAAK,mBAAmB,WAAW;AACjC,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,kBAAQ,KAAK,MAAM;AAAA,YACnB,KAAK,QAAQ;AACX,kBAAI,OAAO,KAAK,UAAU;AAC1B,mBAAK,KAAK;AACV,mBAAK,WAAW,KAAK,iBAAiB,QAAQ,UAAU,MAAM,IAAI;AAClE,qBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,YAE7C,KAAK,QAAQ;AACX,qBAAO,KAAK,SAAS,IAAI;AAAA,UAC3B;AAAA,QACF;AACA,eAAO,KAAK,WAAW;AAAA,MACzB;AAEA,WAAK,mBAAmB,SAAS,OAAO,YAAY,oBAAoB;AACtE,YAAI,OAAO,CAAC,GAAG,QAAQ;AACvB,eAAO,CAAC,KAAK,IAAI,KAAK,GAAG;AACvB,cAAI,OAAO;AAAE,oBAAQ;AAAA,UAAO,OACvB;AAAE,iBAAK,OAAO,QAAQ,KAAK;AAAA,UAAG;AACnC,cAAI,cAAc,KAAK,SAAS,QAAQ,OAAO;AAC7C,iBAAK,KAAK,IAAI;AAAA,UAChB,WAAW,sBAAsB,KAAK,mBAAmB,KAAK,GAAG;AAC/D;AAAA,UACF,WAAW,KAAK,SAAS,QAAQ,UAAU;AACzC,gBAAI,OAAO,KAAK,iBAAiB;AACjC,iBAAK,qBAAqB,IAAI;AAC9B,iBAAK,KAAK,IAAI;AACd,gBAAI,KAAK,SAAS,QAAQ,OAAO;AAAE,mBAAK,MAAM,KAAK,OAAO,+CAA+C;AAAA,YAAG;AAC5G,iBAAK,OAAO,KAAK;AACjB;AAAA,UACF,OAAO;AACL,gBAAI,OAAO,KAAK,kBAAkB,KAAK,OAAO,KAAK,QAAQ;AAC3D,iBAAK,qBAAqB,IAAI;AAC9B,iBAAK,KAAK,IAAI;AAAA,UAChB;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,eAAO;AAAA,MACT;AAIA,WAAK,oBAAoB,SAAS,UAAU,UAAU,MAAM;AAC1D,eAAO,QAAQ,KAAK,iBAAiB;AACrC,YAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,IAAI,QAAQ,EAAE,GAAG;AAAE,iBAAO;AAAA,QAAK;AACzE,YAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,aAAK,OAAO;AACZ,aAAK,QAAQ,KAAK,iBAAiB;AACnC,eAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,MAClD;AAkEA,WAAK,kBAAkB,SAAS,MAAM,aAAa,cAAc;AAC/D,YAAK,gBAAgB;AAAS,wBAAc;AAE5C,YAAI,SAAS,gBAAgB;AAE7B,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK;AACH,gBAAI,KAAK,UAAU,KAAK,wBAAwB,KAAK,KAAK,IAAI,GAC5D;AAAE,mBAAK,iBAAiB,KAAK,QAAQ,SAAS,aAAa,mBAAmB,KAAK,OAAO,iBAAiB;AAAA,YAAG;AAChH,gBAAI,QAAQ;AACV,kBAAI,gBAAgB,gBAAgB,KAAK,SAAS,OAChD;AAAE,qBAAK,iBAAiB,KAAK,OAAO,6CAA6C;AAAA,cAAG;AACtF,kBAAI,cAAc;AAChB,oBAAI,OAAO,cAAc,KAAK,IAAI,GAChC;AAAE,uBAAK,iBAAiB,KAAK,OAAO,qBAAqB;AAAA,gBAAG;AAC9D,6BAAa,KAAK,IAAI,IAAI;AAAA,cAC5B;AACA,kBAAI,gBAAgB,cAAc;AAAE,qBAAK,YAAY,KAAK,MAAM,aAAa,KAAK,KAAK;AAAA,cAAG;AAAA,YAC5F;AACA;AAAA,UAEF,KAAK;AACH,iBAAK,iBAAiB,KAAK,OAAO,mDAAmD;AACrF;AAAA,UAEF,KAAK;AACH,gBAAI,QAAQ;AAAE,mBAAK,iBAAiB,KAAK,OAAO,2BAA2B;AAAA,YAAG;AAC9E;AAAA,UAEF,KAAK;AACH,gBAAI,QAAQ;AAAE,mBAAK,iBAAiB,KAAK,OAAO,kCAAkC;AAAA,YAAG;AACrF,mBAAO,KAAK,gBAAgB,KAAK,YAAY,aAAa,YAAY;AAAA,UAExE;AACE,iBAAK,MAAM,KAAK,QAAQ,SAAS,YAAY,kBAAkB,SAAS;AAAA,QAC1E;AAAA,MACF;AAEA,WAAK,mBAAmB,SAAS,MAAM,aAAa,cAAc;AAChE,YAAK,gBAAgB;AAAS,wBAAc;AAE5C,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK;AACH,qBAASA,KAAI,GAAGiB,QAAO,KAAK,YAAYjB,KAAIiB,MAAK,QAAQjB,MAAK,GAAG;AAC/D,kBAAI,OAAOiB,MAAKjB,EAAC;AAEnB,mBAAK,sBAAsB,MAAM,aAAa,YAAY;AAAA,YAC1D;AACA;AAAA,UAEF,KAAK;AACH,qBAAS,MAAM,GAAG,SAAS,KAAK,UAAU,MAAM,OAAO,QAAQ,OAAO,GAAG;AACvE,kBAAI,OAAO,OAAO,GAAG;AAEvB,kBAAI,MAAM;AAAE,qBAAK,sBAAsB,MAAM,aAAa,YAAY;AAAA,cAAG;AAAA,YACzE;AACA;AAAA,UAEF;AACE,iBAAK,gBAAgB,MAAM,aAAa,YAAY;AAAA,QACtD;AAAA,MACF;AAEA,WAAK,wBAAwB,SAAS,MAAM,aAAa,cAAc;AACrE,YAAK,gBAAgB;AAAS,wBAAc;AAE5C,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK;AAEH,iBAAK,sBAAsB,KAAK,OAAO,aAAa,YAAY;AAChE;AAAA,UAEF,KAAK;AACH,iBAAK,iBAAiB,KAAK,MAAM,aAAa,YAAY;AAC1D;AAAA,UAEF,KAAK;AACH,iBAAK,iBAAiB,KAAK,UAAU,aAAa,YAAY;AAC9D;AAAA,UAEF;AACE,iBAAK,iBAAiB,MAAM,aAAa,YAAY;AAAA,QACvD;AAAA,MACF;AAIA,UAAI,aAAa,SAASqB,YAAW,OAAO,QAAQ,eAAe,UAAU,WAAW;AACtF,aAAK,QAAQ;AACb,aAAK,SAAS,CAAC,CAAC;AAChB,aAAK,gBAAgB,CAAC,CAAC;AACvB,aAAK,WAAW;AAChB,aAAK,YAAY,CAAC,CAAC;AAAA,MACrB;AAEA,UAAIC,SAAQ;AAAA,QACV,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,QACjC,QAAQ,IAAI,WAAW,KAAK,IAAI;AAAA,QAChC,QAAQ,IAAI,WAAW,MAAM,KAAK;AAAA,QAClC,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,QACjC,QAAQ,IAAI,WAAW,KAAK,IAAI;AAAA,QAChC,QAAQ,IAAI,WAAW,KAAK,MAAM,MAAM,SAAU,GAAG;AAAE,iBAAO,EAAE,qBAAqB;AAAA,QAAG,CAAC;AAAA,QACzF,QAAQ,IAAI,WAAW,YAAY,KAAK;AAAA,QACxC,QAAQ,IAAI,WAAW,YAAY,IAAI;AAAA,QACvC,YAAY,IAAI,WAAW,YAAY,MAAM,OAAO,MAAM,IAAI;AAAA,QAC9D,OAAO,IAAI,WAAW,YAAY,OAAO,OAAO,MAAM,IAAI;AAAA,MAC5D;AAEA,UAAI,OAAOX,QAAO;AAElB,WAAK,iBAAiB,WAAW;AAC/B,eAAO,CAACW,OAAM,MAAM;AAAA,MACtB;AAEA,WAAK,aAAa,WAAW;AAC3B,eAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC;AAAA,MAC7C;AAEA,WAAK,eAAe,SAAS,UAAU;AACrC,YAAI,SAAS,KAAK,WAAW;AAC7B,YAAI,WAAWA,OAAM,UAAU,WAAWA,OAAM,QAC9C;AAAE,iBAAO;AAAA,QAAK;AAChB,YAAI,aAAa,QAAQ,UAAU,WAAWA,OAAM,UAAU,WAAWA,OAAM,SAC7E;AAAE,iBAAO,CAAC,OAAO;AAAA,QAAO;AAK1B,YAAI,aAAa,QAAQ,WAAW,aAAa,QAAQ,QAAQ,KAAK,aACpE;AAAE,iBAAO,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,QAAE;AACzE,YAAI,aAAa,QAAQ,SAAS,aAAa,QAAQ,QAAQ,aAAa,QAAQ,OAAO,aAAa,QAAQ,UAAU,aAAa,QAAQ,OAC7I;AAAE,iBAAO;AAAA,QAAK;AAChB,YAAI,aAAa,QAAQ,QACvB;AAAE,iBAAO,WAAWA,OAAM;AAAA,QAAO;AACnC,YAAI,aAAa,QAAQ,QAAQ,aAAa,QAAQ,UAAU,aAAa,QAAQ,MACnF;AAAE,iBAAO;AAAA,QAAM;AACjB,eAAO,CAAC,KAAK;AAAA,MACf;AAEA,WAAK,qBAAqB,WAAW;AACnC,iBAAStB,KAAI,KAAK,QAAQ,SAAS,GAAGA,MAAK,GAAGA,MAAK;AACjD,cAAI,UAAU,KAAK,QAAQA,EAAC;AAC5B,cAAI,QAAQ,UAAU,YACpB;AAAE,mBAAO,QAAQ;AAAA,UAAU;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAEA,WAAK,gBAAgB,SAAS,UAAU;AACtC,YAAI,QAAQ,OAAO,KAAK;AACxB,YAAI,KAAK,WAAW,aAAa,QAAQ,KACvC;AAAE,eAAK,cAAc;AAAA,QAAO,WACrB,SAAS,KAAK,eACrB;AAAE,iBAAO,KAAK,MAAM,QAAQ;AAAA,QAAG,OAE/B;AAAE,eAAK,cAAc,KAAK;AAAA,QAAY;AAAA,MAC1C;AAIA,WAAK,kBAAkB,SAAS,UAAU;AACxC,YAAI,KAAK,WAAW,MAAM,UAAU;AAClC,eAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,IAAI;AAAA,QAC1C;AAAA,MACF;AAIA,cAAQ,OAAO,gBAAgB,QAAQ,OAAO,gBAAgB,WAAW;AACvE,YAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B,eAAK,cAAc;AACnB;AAAA,QACF;AACA,YAAI,MAAM,KAAK,QAAQ,IAAI;AAC3B,YAAI,QAAQsB,OAAM,UAAU,KAAK,WAAW,EAAE,UAAU,YAAY;AAClE,gBAAM,KAAK,QAAQ,IAAI;AAAA,QACzB;AACA,aAAK,cAAc,CAAC,IAAI;AAAA,MAC1B;AAEA,cAAQ,OAAO,gBAAgB,SAAS,UAAU;AAChD,aAAK,QAAQ,KAAK,KAAK,aAAa,QAAQ,IAAIA,OAAM,SAASA,OAAM,MAAM;AAC3E,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,aAAa,gBAAgB,WAAW;AAC9C,aAAK,QAAQ,KAAKA,OAAM,MAAM;AAC9B,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,OAAO,gBAAgB,SAAS,UAAU;AAChD,YAAI,kBAAkB,aAAa,QAAQ,OAAO,aAAa,QAAQ,QAAQ,aAAa,QAAQ,SAAS,aAAa,QAAQ;AAClI,aAAK,QAAQ,KAAK,kBAAkBA,OAAM,SAASA,OAAM,MAAM;AAC/D,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,OAAO,gBAAgB,WAAW;AAAA,MAE1C;AAEA,cAAQ,UAAU,gBAAgB,QAAQ,OAAO,gBAAgB,SAAS,UAAU;AAClF,YAAI,SAAS,cAAc,aAAa,QAAQ,SAC5C,EAAE,aAAa,QAAQ,QAAQ,KAAK,WAAW,MAAMA,OAAM,WAC3D,EAAE,aAAa,QAAQ,WAAW,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC,MAC9F,GAAG,aAAa,QAAQ,SAAS,aAAa,QAAQ,WAAW,KAAK,WAAW,MAAMA,OAAM,SAC/F;AAAE,eAAK,QAAQ,KAAKA,OAAM,MAAM;AAAA,QAAG,OAEnC;AAAE,eAAK,QAAQ,KAAKA,OAAM,MAAM;AAAA,QAAG;AACrC,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,UAAU,gBAAgB,WAAW;AAC3C,YAAI,KAAK,WAAW,MAAMA,OAAM,QAC9B;AAAE,eAAK,QAAQ,IAAI;AAAA,QAAG,OAEtB;AAAE,eAAK,QAAQ,KAAKA,OAAM,MAAM;AAAA,QAAG;AACrC,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,KAAK,gBAAgB,SAAS,UAAU;AAC9C,YAAI,aAAa,QAAQ,WAAW;AAClC,cAAIC,SAAQ,KAAK,QAAQ,SAAS;AAClC,cAAI,KAAK,QAAQA,MAAK,MAAMD,OAAM,QAChC;AAAE,iBAAK,QAAQC,MAAK,IAAID,OAAM;AAAA,UAAY,OAE1C;AAAE,iBAAK,QAAQC,MAAK,IAAID,OAAM;AAAA,UAAO;AAAA,QACzC;AACA,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,KAAK,gBAAgB,SAAS,UAAU;AAC9C,YAAI,UAAU;AACd,YAAI,KAAK,QAAQ,eAAe,KAAK,aAAa,QAAQ,KAAK;AAC7D,cAAI,KAAK,UAAU,QAAQ,CAAC,KAAK,eAC7B,KAAK,UAAU,WAAW,KAAK,mBAAmB,GACpD;AAAE,sBAAU;AAAA,UAAM;AAAA,QACtB;AACA,aAAK,cAAc;AAAA,MACrB;AAIA,UAAI,OAAOX,QAAO;AAOlB,WAAK,iBAAiB,SAAS,MAAM,UAAU,wBAAwB;AACrE,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,iBACjD;AAAE;AAAA,QAAO;AACX,YAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,YAAY,KAAK,UAAU,KAAK,YACzE;AAAE;AAAA,QAAO;AACX,YAAI,MAAM,KAAK;AACf,YAAIT;AACJ,gBAAQ,IAAI,MAAM;AAAA,UAClB,KAAK;AAAc,YAAAA,QAAO,IAAI;AAAM;AAAA,UACpC,KAAK;AAAW,YAAAA,QAAO,OAAO,IAAI,KAAK;AAAG;AAAA,UAC1C;AAAS;AAAA,QACT;AACA,YAAI,OAAO,KAAK;AAChB,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,cAAIA,UAAS,eAAe,SAAS,QAAQ;AAC3C,gBAAI,SAAS,OAAO;AAClB,kBAAI,wBAAwB;AAC1B,oBAAI,uBAAuB,cAAc,GAAG;AAC1C,yCAAuB,cAAc,IAAI;AAAA,gBAC3C;AAAA,cACF,OAAO;AACL,qBAAK,iBAAiB,IAAI,OAAO,oCAAoC;AAAA,cACvE;AAAA,YACF;AACA,qBAAS,QAAQ;AAAA,UACnB;AACA;AAAA,QACF;AACA,QAAAA,QAAO,MAAMA;AACb,YAAI,QAAQ,SAASA,KAAI;AACzB,YAAI,OAAO;AACT,cAAI;AACJ,cAAI,SAAS,QAAQ;AACnB,2BAAe,KAAK,UAAU,MAAM,QAAQ,MAAM,OAAO,MAAM;AAAA,UACjE,OAAO;AACL,2BAAe,MAAM,QAAQ,MAAM,IAAI;AAAA,UACzC;AACA,cAAI,cACF;AAAE,iBAAK,iBAAiB,IAAI,OAAO,0BAA0B;AAAA,UAAG;AAAA,QACpE,OAAO;AACL,kBAAQ,SAASA,KAAI,IAAI;AAAA,YACvB,MAAM;AAAA,YACN,KAAK;AAAA,YACL,KAAK;AAAA,UACP;AAAA,QACF;AACA,cAAM,IAAI,IAAI;AAAA,MAChB;AAiBA,WAAK,kBAAkB,SAAS,SAAS,wBAAwB;AAC/D,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,iBAAiB,SAAS,sBAAsB;AAChE,YAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,cAAc,CAAC,IAAI;AACxB,iBAAO,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE,iBAAK,YAAY,KAAK,KAAK,iBAAiB,SAAS,sBAAsB,CAAC;AAAA,UAAG;AACjH,iBAAO,KAAK,WAAW,MAAM,oBAAoB;AAAA,QACnD;AACA,eAAO;AAAA,MACT;AAKA,WAAK,mBAAmB,SAAS,SAAS,wBAAwB,gBAAgB;AAChF,YAAI,KAAK,aAAa,OAAO,GAAG;AAC9B,cAAI,KAAK,aAAa;AAAE,mBAAO,KAAK,WAAW,OAAO;AAAA,UAAE,OAGnD;AAAE,iBAAK,cAAc;AAAA,UAAO;AAAA,QACnC;AAEA,YAAI,yBAAyB,OAAO,iBAAiB,IAAI,mBAAmB,IAAI,iBAAiB;AACjG,YAAI,wBAAwB;AAC1B,2BAAiB,uBAAuB;AACxC,6BAAmB,uBAAuB;AAC1C,2BAAiB,uBAAuB;AACxC,iCAAuB,sBAAsB,uBAAuB,gBAAgB;AAAA,QACtF,OAAO;AACL,mCAAyB,IAAI;AAC7B,mCAAyB;AAAA,QAC3B;AAEA,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,MAAM;AAC9D,eAAK,mBAAmB,KAAK;AAC7B,eAAK,2BAA2B,YAAY;AAAA,QAC9C;AACA,YAAI,OAAO,KAAK,sBAAsB,SAAS,sBAAsB;AACrE,YAAI,gBAAgB;AAAE,iBAAO,eAAe,KAAK,MAAM,MAAM,UAAU,QAAQ;AAAA,QAAG;AAClF,YAAI,KAAK,KAAK,UAAU;AACtB,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,WAAW,KAAK;AACrB,cAAI,KAAK,SAAS,QAAQ,IACxB;AAAE,mBAAO,KAAK,aAAa,MAAM,OAAO,sBAAsB;AAAA,UAAG;AACnE,cAAI,CAAC,wBAAwB;AAC3B,mCAAuB,sBAAsB,uBAAuB,gBAAgB,uBAAuB,cAAc;AAAA,UAC3H;AACA,cAAI,uBAAuB,mBAAmB,KAAK,OACjD;AAAE,mCAAuB,kBAAkB;AAAA,UAAI;AACjD,cAAI,KAAK,SAAS,QAAQ,IACxB;AAAE,iBAAK,iBAAiB,IAAI;AAAA,UAAG,OAE/B;AAAE,iBAAK,gBAAgB,IAAI;AAAA,UAAG;AAChC,eAAK,OAAO;AACZ,eAAK,KAAK;AACV,eAAK,QAAQ,KAAK,iBAAiB,OAAO;AAC1C,cAAI,iBAAiB,IAAI;AAAE,mCAAuB,cAAc;AAAA,UAAgB;AAChF,iBAAO,KAAK,WAAW,MAAM,sBAAsB;AAAA,QACrD,OAAO;AACL,cAAI,wBAAwB;AAAE,iBAAK,sBAAsB,wBAAwB,IAAI;AAAA,UAAG;AAAA,QAC1F;AACA,YAAI,iBAAiB,IAAI;AAAE,iCAAuB,sBAAsB;AAAA,QAAgB;AACxF,YAAI,mBAAmB,IAAI;AAAE,iCAAuB,gBAAgB;AAAA,QAAkB;AACtF,eAAO;AAAA,MACT;AAIA,WAAK,wBAAwB,SAAS,SAAS,wBAAwB;AACrE,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,aAAa,SAAS,sBAAsB;AAC5D,YAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,iBAAO;AAAA,QAAK;AACtE,YAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,OAAO;AACZ,eAAK,aAAa,KAAK,iBAAiB;AACxC,eAAK,OAAO,QAAQ,KAAK;AACzB,eAAK,YAAY,KAAK,iBAAiB,OAAO;AAC9C,iBAAO,KAAK,WAAW,MAAM,uBAAuB;AAAA,QACtD;AACA,eAAO;AAAA,MACT;AAIA,WAAK,eAAe,SAAS,SAAS,wBAAwB;AAC5D,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,gBAAgB,wBAAwB,OAAO,OAAO,OAAO;AAC7E,YAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,iBAAO;AAAA,QAAK;AACtE,eAAO,KAAK,UAAU,YAAY,KAAK,SAAS,4BAA4B,OAAO,KAAK,YAAY,MAAM,UAAU,UAAU,IAAI,OAAO;AAAA,MAC3I;AAQA,WAAK,cAAc,SAAS,MAAM,cAAc,cAAc,SAAS,SAAS;AAC9E,YAAI,OAAO,KAAK,KAAK;AACrB,YAAI,QAAQ,SAAS,CAAC,WAAW,KAAK,SAAS,QAAQ,MAAM;AAC3D,cAAI,OAAO,SAAS;AAClB,gBAAI,UAAU,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,QAAQ;AACvE,gBAAI,WAAW,KAAK,SAAS,QAAQ;AACrC,gBAAI,UAAU;AAGZ,qBAAO,QAAQ,WAAW;AAAA,YAC5B;AACA,gBAAI,KAAK,KAAK;AACd,iBAAK,KAAK;AACV,gBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,gBAAI,QAAQ,KAAK,YAAY,KAAK,gBAAgB,MAAM,OAAO,OAAO,OAAO,GAAG,UAAU,UAAU,MAAM,OAAO;AACjH,gBAAI,OAAO,KAAK,YAAY,cAAc,cAAc,MAAM,OAAO,IAAI,WAAW,QAAQ;AAC5F,gBAAK,WAAW,KAAK,SAAS,QAAQ,YAAc,aAAa,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,QAAQ,aAAc;AACtI,mBAAK,iBAAiB,KAAK,OAAO,0FAA0F;AAAA,YAC9H;AACA,mBAAO,KAAK,YAAY,MAAM,cAAc,cAAc,SAAS,OAAO;AAAA,UAC5E;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,WAAK,cAAc,SAAS,UAAU,UAAU,MAAM,OAAO,IAAI,SAAS;AACxE,YAAI,MAAM,SAAS,qBAAqB;AAAE,eAAK,MAAM,MAAM,OAAO,+DAA+D;AAAA,QAAG;AACpI,YAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,aAAK,OAAO;AACZ,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,eAAO,KAAK,WAAW,MAAM,UAAU,sBAAsB,kBAAkB;AAAA,MACjF;AAIA,WAAK,kBAAkB,SAAS,wBAAwB,UAAU,QAAQ,SAAS;AACjF,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU;AACrD,YAAI,KAAK,aAAa,OAAO,KAAK,KAAK,UAAU;AAC/C,iBAAO,KAAK,WAAW,OAAO;AAC9B,qBAAW;AAAA,QACb,WAAW,KAAK,KAAK,QAAQ;AAC3B,cAAI,OAAO,KAAK,UAAU,GAAG,SAAS,KAAK,SAAS,QAAQ;AAC5D,eAAK,WAAW,KAAK;AACrB,eAAK,SAAS;AACd,eAAK,KAAK;AACV,eAAK,WAAW,KAAK,gBAAgB,MAAM,MAAM,QAAQ,OAAO;AAChE,eAAK,sBAAsB,wBAAwB,IAAI;AACvD,cAAI,QAAQ;AAAE,iBAAK,gBAAgB,KAAK,QAAQ;AAAA,UAAG,WAC1C,KAAK,UAAU,KAAK,aAAa,YACjC,KAAK,SAAS,SAAS,cAC9B;AAAE,iBAAK,iBAAiB,KAAK,OAAO,wCAAwC;AAAA,UAAG,WACxE,KAAK,aAAa,YAAY,qBAAqB,KAAK,QAAQ,GACvE;AAAE,iBAAK,iBAAiB,KAAK,OAAO,mCAAmC;AAAA,UAAG,OACvE;AAAE,uBAAW;AAAA,UAAM;AACxB,iBAAO,KAAK,WAAW,MAAM,SAAS,qBAAqB,iBAAiB;AAAA,QAC9E,WAAW,CAAC,YAAY,KAAK,SAAS,QAAQ,WAAW;AACvD,cAAI,WAAW,KAAK,iBAAiB,WAAW,GAAG;AAAE,iBAAK,WAAW;AAAA,UAAG;AACxE,iBAAO,KAAK,kBAAkB;AAE9B,cAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,iBAAK,WAAW;AAAA,UAAG;AAAA,QACtD,OAAO;AACL,iBAAO,KAAK,oBAAoB,wBAAwB,OAAO;AAC/D,cAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,mBAAO;AAAA,UAAK;AACtE,iBAAO,KAAK,KAAK,WAAW,CAAC,KAAK,mBAAmB,GAAG;AACtD,gBAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,mBAAO,WAAW,KAAK;AACvB,mBAAO,SAAS;AAChB,mBAAO,WAAW;AAClB,iBAAK,gBAAgB,IAAI;AACzB,iBAAK,KAAK;AACV,mBAAO,KAAK,WAAW,QAAQ,kBAAkB;AAAA,UACnD;AAAA,QACF;AAEA,YAAI,CAAC,UAAU,KAAK,IAAI,QAAQ,QAAQ,GAAG;AACzC,cAAI,UACF;AAAE,iBAAK,WAAW,KAAK,YAAY;AAAA,UAAG,OAEtC;AAAE,mBAAO,KAAK,YAAY,UAAU,UAAU,MAAM,KAAK,gBAAgB,MAAM,OAAO,OAAO,OAAO,GAAG,MAAM,KAAK;AAAA,UAAE;AAAA,QACxH,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,eAAS,qBAAqB,MAAM;AAClC,eACE,KAAK,SAAS,sBAAsB,KAAK,SAAS,SAAS,uBAC3D,KAAK,SAAS,qBAAqB,qBAAqB,KAAK,UAAU;AAAA,MAE3E;AAIA,WAAK,sBAAsB,SAAS,wBAAwB,SAAS;AACnE,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,cAAc,wBAAwB,OAAO;AAC7D,YAAI,KAAK,SAAS,6BAA6B,KAAK,MAAM,MAAM,KAAK,cAAc,KAAK,UAAU,MAAM,KACtG;AAAE,iBAAO;AAAA,QAAK;AAChB,YAAI,SAAS,KAAK,gBAAgB,MAAM,UAAU,UAAU,OAAO,OAAO;AAC1E,YAAI,0BAA0B,OAAO,SAAS,oBAAoB;AAChE,cAAI,uBAAuB,uBAAuB,OAAO,OAAO;AAAE,mCAAuB,sBAAsB;AAAA,UAAI;AACnH,cAAI,uBAAuB,qBAAqB,OAAO,OAAO;AAAE,mCAAuB,oBAAoB;AAAA,UAAI;AAC/G,cAAI,uBAAuB,iBAAiB,OAAO,OAAO;AAAE,mCAAuB,gBAAgB;AAAA,UAAI;AAAA,QACzG;AACA,eAAO;AAAA,MACT;AAEA,WAAK,kBAAkB,SAAS,MAAM,UAAU,UAAU,SAAS,SAAS;AAC1E,YAAI,kBAAkB,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,gBAAgB,KAAK,SAAS,WAC/F,KAAK,eAAe,KAAK,OAAO,CAAC,KAAK,mBAAmB,KAAK,KAAK,MAAM,KAAK,UAAU,KACxF,KAAK,qBAAqB,KAAK;AACnC,YAAI,kBAAkB;AAEtB,eAAO,MAAM;AACX,cAAIiB,WAAU,KAAK,eAAe,MAAM,UAAU,UAAU,SAAS,iBAAiB,iBAAiB,OAAO;AAE9G,cAAIA,SAAQ,UAAU;AAAE,8BAAkB;AAAA,UAAM;AAChD,cAAIA,aAAY,QAAQA,SAAQ,SAAS,2BAA2B;AAClE,gBAAI,iBAAiB;AACnB,kBAAI,YAAY,KAAK,YAAY,UAAU,QAAQ;AACnD,wBAAU,aAAaA;AACvB,cAAAA,WAAU,KAAK,WAAW,WAAW,iBAAiB;AAAA,YACxD;AACA,mBAAOA;AAAA,UACT;AAEA,iBAAOA;AAAA,QACT;AAAA,MACF;AAEA,WAAK,iBAAiB,SAAS,MAAM,UAAU,UAAU,SAAS,iBAAiB,iBAAiB,SAAS;AAC3G,YAAI,oBAAoB,KAAK,QAAQ,eAAe;AACpD,YAAI,WAAW,qBAAqB,KAAK,IAAI,QAAQ,WAAW;AAChE,YAAI,WAAW,UAAU;AAAE,eAAK,MAAM,KAAK,cAAc,kEAAkE;AAAA,QAAG;AAE9H,YAAI,WAAW,KAAK,IAAI,QAAQ,QAAQ;AACxC,YAAI,YAAa,YAAY,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,aAAc,KAAK,IAAI,QAAQ,GAAG,GAAG;AACtH,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,SAAS;AACd,cAAI,UAAU;AACZ,iBAAK,WAAW,KAAK,gBAAgB;AACrC,iBAAK,OAAO,QAAQ,QAAQ;AAAA,UAC9B,WAAW,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,SAAS;AACnE,iBAAK,WAAW,KAAK,kBAAkB;AAAA,UACzC,OAAO;AACL,iBAAK,WAAW,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AAAA,UACxE;AACA,eAAK,WAAW,CAAC,CAAC;AAClB,cAAI,mBAAmB;AACrB,iBAAK,WAAW;AAAA,UAClB;AACA,iBAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,QACjD,WAAW,CAAC,WAAW,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC/C,cAAI,yBAAyB,IAAI,uBAAqB,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AACxI,eAAK,WAAW;AAChB,eAAK,WAAW;AAChB,eAAK,gBAAgB;AACrB,cAAI,WAAW,KAAK,cAAc,QAAQ,QAAQ,KAAK,QAAQ,eAAe,GAAG,OAAO,sBAAsB;AAC9G,cAAI,mBAAmB,CAAC,YAAY,CAAC,KAAK,mBAAmB,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;AACzF,iBAAK,mBAAmB,wBAAwB,KAAK;AACrD,iBAAK,+BAA+B;AACpC,gBAAI,KAAK,gBAAgB,GACvB;AAAE,mBAAK,MAAM,KAAK,eAAe,2DAA2D;AAAA,YAAG;AACjG,iBAAK,WAAW;AAChB,iBAAK,WAAW;AAChB,iBAAK,gBAAgB;AACrB,mBAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,UAAU,MAAM,OAAO;AAAA,UAChG;AACA,eAAK,sBAAsB,wBAAwB,IAAI;AACvD,eAAK,WAAW,eAAe,KAAK;AACpC,eAAK,WAAW,eAAe,KAAK;AACpC,eAAK,gBAAgB,oBAAoB,KAAK;AAC9C,cAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,iBAAO,SAAS;AAChB,iBAAO,YAAY;AACnB,cAAI,mBAAmB;AACrB,mBAAO,WAAW;AAAA,UACpB;AACA,iBAAO,KAAK,WAAW,QAAQ,gBAAgB;AAAA,QACjD,WAAW,KAAK,SAAS,QAAQ,WAAW;AAC1C,cAAI,YAAY,iBAAiB;AAC/B,iBAAK,MAAM,KAAK,OAAO,2EAA2E;AAAA,UACpG;AACA,cAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,iBAAO,MAAM;AACb,iBAAO,QAAQ,KAAK,cAAc,EAAC,UAAU,KAAI,CAAC;AAClD,iBAAO,KAAK,WAAW,QAAQ,0BAA0B;AAAA,QAC3D;AACA,eAAO;AAAA,MACT;AAOA,WAAK,gBAAgB,SAAS,wBAAwB,SAAS;AAG7D,YAAI,KAAK,SAAS,QAAQ,OAAO;AAAE,eAAK,WAAW;AAAA,QAAG;AAEtD,YAAI,MAAM,aAAa,KAAK,qBAAqB,KAAK;AACtD,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK,QAAQ;AACX,gBAAI,CAAC,KAAK,YACR;AAAE,mBAAK,MAAM,KAAK,OAAO,kCAAkC;AAAA,YAAG;AAChE,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,gBAAI,KAAK,SAAS,QAAQ,UAAU,CAAC,KAAK,kBACxC;AAAE,mBAAK,MAAM,KAAK,OAAO,gDAAgD;AAAA,YAAG;AAO9E,gBAAI,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,QAAQ,QACvF;AAAE,mBAAK,WAAW;AAAA,YAAG;AACvB,mBAAO,KAAK,WAAW,MAAM,OAAO;AAAA,UAEtC,KAAK,QAAQ;AACX,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,mBAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,UAE/C,KAAK,QAAQ;AACX,gBAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU,cAAc,KAAK;AACxE,gBAAI,KAAK,KAAK,WAAW,KAAK;AAC9B,gBAAI,KAAK,QAAQ,eAAe,KAAK,CAAC,eAAe,GAAG,SAAS,WAAW,CAAC,KAAK,mBAAmB,KAAK,KAAK,IAAI,QAAQ,SAAS,GAAG;AACrI,mBAAK,gBAAgBG,OAAM,MAAM;AACjC,qBAAO,KAAK,cAAc,KAAK,YAAY,UAAU,QAAQ,GAAG,GAAG,OAAO,MAAM,OAAO;AAAA,YACzF;AACA,gBAAI,cAAc,CAAC,KAAK,mBAAmB,GAAG;AAC5C,kBAAI,KAAK,IAAI,QAAQ,KAAK,GACxB;AAAE,uBAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,CAAC,EAAE,GAAG,OAAO,OAAO;AAAA,cAAE;AACjG,kBAAI,KAAK,QAAQ,eAAe,KAAK,GAAG,SAAS,WAAW,KAAK,SAAS,QAAQ,QAAQ,CAAC,gBACtF,CAAC,KAAK,4BAA4B,KAAK,UAAU,QAAQ,KAAK,cAAc;AAC/E,qBAAK,KAAK,WAAW,KAAK;AAC1B,oBAAI,KAAK,mBAAmB,KAAK,CAAC,KAAK,IAAI,QAAQ,KAAK,GACtD;AAAE,uBAAK,WAAW;AAAA,gBAAG;AACvB,uBAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,OAAO;AAAA,cAC5F;AAAA,YACF;AACA,mBAAO;AAAA,UAET,KAAK,QAAQ;AACX,gBAAI,QAAQ,KAAK;AACjB,mBAAO,KAAK,aAAa,MAAM,KAAK;AACpC,iBAAK,QAAQ,EAAC,SAAS,MAAM,SAAS,OAAO,MAAM,MAAK;AACxD,mBAAO;AAAA,UAET,KAAK,QAAQ;AAAA,UAAK,KAAK,QAAQ;AAC7B,mBAAO,KAAK,aAAa,KAAK,KAAK;AAAA,UAErC,KAAK,QAAQ;AAAA,UAAO,KAAK,QAAQ;AAAA,UAAO,KAAK,QAAQ;AACnD,mBAAO,KAAK,UAAU;AACtB,iBAAK,QAAQ,KAAK,SAAS,QAAQ,QAAQ,OAAO,KAAK,SAAS,QAAQ;AACxE,iBAAK,MAAM,KAAK,KAAK;AACrB,iBAAK,KAAK;AACV,mBAAO,KAAK,WAAW,MAAM,SAAS;AAAA,UAExC,KAAK,QAAQ;AACX,gBAAIf,SAAQ,KAAK,OAAO,OAAO,KAAK,mCAAmC,YAAY,OAAO;AAC1F,gBAAI,wBAAwB;AAC1B,kBAAI,uBAAuB,sBAAsB,KAAK,CAAC,KAAK,qBAAqB,IAAI,GACnF;AAAE,uCAAuB,sBAAsBA;AAAA,cAAO;AACxD,kBAAI,uBAAuB,oBAAoB,GAC7C;AAAE,uCAAuB,oBAAoBA;AAAA,cAAO;AAAA,YACxD;AACA,mBAAO;AAAA,UAET,KAAK,QAAQ;AACX,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,iBAAK,WAAW,KAAK,cAAc,QAAQ,UAAU,MAAM,MAAM,sBAAsB;AACvF,mBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,UAEhD,KAAK,QAAQ;AACX,iBAAK,gBAAgBe,OAAM,MAAM;AACjC,mBAAO,KAAK,SAAS,OAAO,sBAAsB;AAAA,UAEpD,KAAK,QAAQ;AACX,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,mBAAO,KAAK,cAAc,MAAM,CAAC;AAAA,UAEnC,KAAK,QAAQ;AACX,mBAAO,KAAK,WAAW,KAAK,UAAU,GAAG,KAAK;AAAA,UAEhD,KAAK,QAAQ;AACX,mBAAO,KAAK,SAAS;AAAA,UAEvB,KAAK,QAAQ;AACX,mBAAO,KAAK,cAAc;AAAA,UAE5B,KAAK,QAAQ;AACX,gBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,qBAAO,KAAK,gBAAgB;AAAA,YAC9B,OAAO;AACL,qBAAO,KAAK,WAAW;AAAA,YACzB;AAAA,UAEF;AACE,iBAAK,WAAW;AAAA,QAClB;AAAA,MACF;AAEA,WAAK,kBAAkB,WAAW;AAChC,YAAI,OAAO,KAAK,UAAU;AAI1B,YAAI,KAAK,aAAa;AAAE,eAAK,iBAAiB,KAAK,OAAO,mCAAmC;AAAA,QAAG;AAChG,YAAI,OAAO,KAAK,WAAW,IAAI;AAE/B,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK,QAAQ;AACX,mBAAO,KAAK,mBAAmB,IAAI;AAAA,UACrC,KAAK,QAAQ;AACX,iBAAK,OAAO;AACZ,mBAAO,KAAK,gBAAgB,IAAI;AAAA,UAClC;AACE,iBAAK,WAAW;AAAA,QAClB;AAAA,MACF;AAEA,WAAK,qBAAqB,SAAS,MAAM;AACvC,aAAK,KAAK;AAGV,aAAK,SAAS,KAAK,iBAAiB;AAGpC,YAAI,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC7B,cAAI,WAAW,KAAK;AACpB,cAAI,KAAK,IAAI,QAAQ,KAAK,KAAK,KAAK,IAAI,QAAQ,MAAM,GAAG;AACvD,iBAAK,iBAAiB,UAAU,2CAA2C;AAAA,UAC7E,OAAO;AACL,iBAAK,WAAW,QAAQ;AAAA,UAC1B;AAAA,QACF;AAEA,eAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,MACjD;AAEA,WAAK,kBAAkB,SAAS,MAAM;AACpC,aAAK,KAAK;AAEV,YAAI,cAAc,KAAK;AACvB,aAAK,WAAW,KAAK,WAAW,IAAI;AAEpC,YAAI,KAAK,SAAS,SAAS,QACzB;AAAE,eAAK,iBAAiB,KAAK,SAAS,OAAO,0DAA0D;AAAA,QAAG;AAC5G,YAAI,aACF;AAAE,eAAK,iBAAiB,KAAK,OAAO,mDAAmD;AAAA,QAAG;AAC5F,YAAI,KAAK,QAAQ,eAAe,YAAY,CAAC,KAAK,QAAQ,6BACxD;AAAE,eAAK,iBAAiB,KAAK,OAAO,2CAA2C;AAAA,QAAG;AAEpF,eAAO,KAAK,WAAW,MAAM,cAAc;AAAA,MAC7C;AAEA,WAAK,eAAe,SAAS,OAAO;AAClC,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,QAAQ;AACb,aAAK,MAAM,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG;AAChD,YAAI,KAAK,IAAI,WAAW,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK;AAAE,eAAK,SAAS,KAAK,IAAI,MAAM,GAAG,EAAE,EAAE,QAAQ,MAAM,EAAE;AAAA,QAAG;AAC/G,aAAK,KAAK;AACV,eAAO,KAAK,WAAW,MAAM,SAAS;AAAA,MACxC;AAEA,WAAK,uBAAuB,WAAW;AACrC,aAAK,OAAO,QAAQ,MAAM;AAC1B,YAAI,MAAM,KAAK,gBAAgB;AAC/B,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO;AAAA,MACT;AAEA,WAAK,qCAAqC,SAAS,YAAY,SAAS;AACtE,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU,KAAK,qBAAqB,KAAK,QAAQ,eAAe;AAC3G,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,eAAK,KAAK;AAEV,cAAI,gBAAgB,KAAK,OAAO,gBAAgB,KAAK;AACrD,cAAI,WAAW,CAAC,GAAG,QAAQ,MAAM,cAAc;AAC/C,cAAI,yBAAyB,IAAI,uBAAqB,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU;AAChH,eAAK,WAAW;AAChB,eAAK,WAAW;AAEhB,iBAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,oBAAQ,QAAQ,QAAQ,KAAK,OAAO,QAAQ,KAAK;AACjD,gBAAI,sBAAsB,KAAK,mBAAmB,QAAQ,QAAQ,IAAI,GAAG;AACvE,4BAAc;AACd;AAAA,YACF,WAAW,KAAK,SAAS,QAAQ,UAAU;AACzC,4BAAc,KAAK;AACnB,uBAAS,KAAK,KAAK,eAAe,KAAK,iBAAiB,CAAC,CAAC;AAC1D,kBAAI,KAAK,SAAS,QAAQ,OAAO;AAAE,qBAAK,MAAM,KAAK,OAAO,+CAA+C;AAAA,cAAG;AAC5G;AAAA,YACF,OAAO;AACL,uBAAS,KAAK,KAAK,iBAAiB,OAAO,wBAAwB,KAAK,cAAc,CAAC;AAAA,YACzF;AAAA,UACF;AACA,cAAI,cAAc,KAAK,YAAY,cAAc,KAAK;AACtD,eAAK,OAAO,QAAQ,MAAM;AAE1B,cAAI,cAAc,CAAC,KAAK,mBAAmB,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;AACvE,iBAAK,mBAAmB,wBAAwB,KAAK;AACrD,iBAAK,+BAA+B;AACpC,iBAAK,WAAW;AAChB,iBAAK,WAAW;AAChB,mBAAO,KAAK,oBAAoB,UAAU,UAAU,UAAU,OAAO;AAAA,UACvE;AAEA,cAAI,CAAC,SAAS,UAAU,aAAa;AAAE,iBAAK,WAAW,KAAK,YAAY;AAAA,UAAG;AAC3E,cAAI,aAAa;AAAE,iBAAK,WAAW,WAAW;AAAA,UAAG;AACjD,eAAK,sBAAsB,wBAAwB,IAAI;AACvD,eAAK,WAAW,eAAe,KAAK;AACpC,eAAK,WAAW,eAAe,KAAK;AAEpC,cAAI,SAAS,SAAS,GAAG;AACvB,kBAAM,KAAK,YAAY,eAAe,aAAa;AACnD,gBAAI,cAAc;AAClB,iBAAK,aAAa,KAAK,sBAAsB,aAAa,WAAW;AAAA,UACvE,OAAO;AACL,kBAAM,SAAS,CAAC;AAAA,UAClB;AAAA,QACF,OAAO;AACL,gBAAM,KAAK,qBAAqB;AAAA,QAClC;AAEA,YAAI,KAAK,QAAQ,gBAAgB;AAC/B,cAAI,MAAM,KAAK,YAAY,UAAU,QAAQ;AAC7C,cAAI,aAAa;AACjB,iBAAO,KAAK,WAAW,KAAK,yBAAyB;AAAA,QACvD,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,WAAK,iBAAiB,SAAS,MAAM;AACnC,eAAO;AAAA,MACT;AAEA,WAAK,sBAAsB,SAAS,UAAU,UAAU,UAAU,SAAS;AACzE,eAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,UAAU,OAAO,OAAO;AAAA,MACjG;AAQA,UAAIE,SAAQ,CAAC;AAEb,WAAK,WAAW,WAAW;AACzB,YAAI,KAAK,aAAa;AAAE,eAAK,iBAAiB,KAAK,OAAO,gCAAgC;AAAA,QAAG;AAC7F,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,OAAO,KAAK,WAAW,IAAI;AAC/B,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI,QAAQ,GAAG,GAAG;AAC1D,eAAK,OAAO;AACZ,cAAI,cAAc,KAAK;AACvB,eAAK,WAAW,KAAK,WAAW,IAAI;AACpC,cAAI,KAAK,SAAS,SAAS,UACzB;AAAE,iBAAK,iBAAiB,KAAK,SAAS,OAAO,sDAAsD;AAAA,UAAG;AACxG,cAAI,aACF;AAAE,iBAAK,iBAAiB,KAAK,OAAO,kDAAkD;AAAA,UAAG;AAC3F,cAAI,CAAC,KAAK,mBACR;AAAE,iBAAK,iBAAiB,KAAK,OAAO,mEAAmE;AAAA,UAAG;AAC5G,iBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,QAC7C;AACA,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU,WAAW,KAAK,SAAS,QAAQ;AACtF,aAAK,SAAS,KAAK,gBAAgB,KAAK,cAAc,GAAG,UAAU,UAAU,MAAM,KAAK;AACxF,YAAI,YAAY,KAAK,OAAO,SAAS,oBAAoB;AACvD,eAAK,MAAM,UAAU,8BAA8B;AAAA,QACrD;AACA,YAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AAAE,eAAK,YAAY,KAAK,cAAc,QAAQ,QAAQ,KAAK,QAAQ,eAAe,GAAG,KAAK;AAAA,QAAG,OACtH;AAAE,eAAK,YAAYA;AAAA,QAAO;AAC/B,eAAO,KAAK,WAAW,MAAM,eAAe;AAAA,MAC9C;AAIA,WAAK,uBAAuB,SAASX,MAAK;AACxC,YAAI,WAAWA,KAAI;AAEnB,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,KAAK,SAAS,QAAQ,iBAAiB;AACzC,cAAI,CAAC,UAAU;AACb,iBAAK,iBAAiB,KAAK,OAAO,kDAAkD;AAAA,UACtF;AACA,eAAK,QAAQ;AAAA,YACX,KAAK,KAAK;AAAA,YACV,QAAQ;AAAA,UACV;AAAA,QACF,OAAO;AACL,eAAK,QAAQ;AAAA,YACX,KAAK,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG,EAAE,QAAQ,UAAU,IAAI;AAAA,YAClE,QAAQ,KAAK;AAAA,UACf;AAAA,QACF;AACA,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,SAAS,QAAQ;AAClC,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,gBAAgB,SAASA,MAAK;AACjC,YAAKA,SAAQ;AAAS,UAAAA,OAAM,CAAC;AAC7B,YAAI,WAAWA,KAAI;AAAU,YAAK,aAAa;AAAS,qBAAW;AAEnE,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,aAAK,cAAc,CAAC;AACpB,YAAI,SAAS,KAAK,qBAAqB,EAAC,SAAkB,CAAC;AAC3D,aAAK,SAAS,CAAC,MAAM;AACrB,eAAO,CAAC,OAAO,MAAM;AACnB,cAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,iBAAK,MAAM,KAAK,KAAK,+BAA+B;AAAA,UAAG;AACxF,eAAK,OAAO,QAAQ,YAAY;AAChC,eAAK,YAAY,KAAK,KAAK,gBAAgB,CAAC;AAC5C,eAAK,OAAO,QAAQ,MAAM;AAC1B,eAAK,OAAO,KAAK,SAAS,KAAK,qBAAqB,EAAC,SAAkB,CAAC,CAAC;AAAA,QAC3E;AACA,aAAK,KAAK;AACV,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,cAAc,SAAS,MAAM;AAChC,eAAO,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,gBAAgB,KAAK,IAAI,SAAS,YAC1E,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,YAAY,KAAK,KAAK,WAAY,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,SAC3M,CAAC,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,MACjE;AAIA,WAAK,WAAW,SAAS,WAAW,wBAAwB;AAC1D,YAAI,OAAO,KAAK,UAAU,GAAG,QAAQ,MAAM,WAAW,CAAC;AACvD,aAAK,aAAa,CAAC;AACnB,aAAK,KAAK;AACV,eAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,YAAM;AAAA,UACxF,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,cAAI,OAAO,KAAK,cAAc,WAAW,sBAAsB;AAC/D,cAAI,CAAC,WAAW;AAAE,iBAAK,eAAe,MAAM,UAAU,sBAAsB;AAAA,UAAG;AAC/E,eAAK,WAAW,KAAK,IAAI;AAAA,QAC3B;AACA,eAAO,KAAK,WAAW,MAAM,YAAY,kBAAkB,kBAAkB;AAAA,MAC/E;AAEA,WAAK,gBAAgB,SAAS,WAAW,wBAAwB;AAC/D,YAAI,OAAO,KAAK,UAAU,GAAG,aAAa,SAAS,UAAU;AAC7D,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC/D,cAAI,WAAW;AACb,iBAAK,WAAW,KAAK,WAAW,KAAK;AACrC,gBAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,mBAAK,MAAM,KAAK,OAAO,+CAA+C;AAAA,YACxE;AACA,mBAAO,KAAK,WAAW,MAAM,aAAa;AAAA,UAC5C;AAEA,eAAK,WAAW,KAAK,iBAAiB,OAAO,sBAAsB;AAEnE,cAAI,KAAK,SAAS,QAAQ,SAAS,0BAA0B,uBAAuB,gBAAgB,GAAG;AACrG,mCAAuB,gBAAgB,KAAK;AAAA,UAC9C;AAEA,iBAAO,KAAK,WAAW,MAAM,eAAe;AAAA,QAC9C;AACA,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,eAAK,SAAS;AACd,eAAK,YAAY;AACjB,cAAI,aAAa,wBAAwB;AACvC,uBAAW,KAAK;AAChB,uBAAW,KAAK;AAAA,UAClB;AACA,cAAI,CAAC,WACH;AAAE,0BAAc,KAAK,IAAI,QAAQ,IAAI;AAAA,UAAG;AAAA,QAC5C;AACA,YAAI,cAAc,KAAK;AACvB,aAAK,kBAAkB,IAAI;AAC3B,YAAI,CAAC,aAAa,CAAC,eAAe,KAAK,QAAQ,eAAe,KAAK,CAAC,eAAe,KAAK,YAAY,IAAI,GAAG;AACzG,oBAAU;AACV,wBAAc,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI,QAAQ,IAAI;AACpE,eAAK,kBAAkB,MAAM,sBAAsB;AAAA,QACrD,OAAO;AACL,oBAAU;AAAA,QACZ;AACA,aAAK,mBAAmB,MAAM,WAAW,aAAa,SAAS,UAAU,UAAU,wBAAwB,WAAW;AACtH,eAAO,KAAK,WAAW,MAAM,UAAU;AAAA,MACzC;AAEA,WAAK,qBAAqB,SAAS,MAAM,WAAW,aAAa,SAAS,UAAU,UAAU,wBAAwB,aAAa;AACjI,aAAK,eAAe,YAAY,KAAK,SAAS,QAAQ,OACpD;AAAE,eAAK,WAAW;AAAA,QAAG;AAEvB,YAAI,KAAK,IAAI,QAAQ,KAAK,GAAG;AAC3B,eAAK,QAAQ,YAAY,KAAK,kBAAkB,KAAK,OAAO,KAAK,QAAQ,IAAI,KAAK,iBAAiB,OAAO,sBAAsB;AAChI,eAAK,OAAO;AAAA,QACd,WAAW,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,QAAQ;AACxE,cAAI,WAAW;AAAE,iBAAK,WAAW;AAAA,UAAG;AACpC,eAAK,OAAO;AACZ,eAAK,SAAS;AACd,eAAK,QAAQ,KAAK,YAAY,aAAa,OAAO;AAAA,QACpD,WAAW,CAAC,aAAa,CAAC,eACf,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,iBACpE,KAAK,IAAI,SAAS,SAAS,KAAK,IAAI,SAAS,WAC7C,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,KAAK;AACpG,cAAI,eAAe,SAAS;AAAE,iBAAK,WAAW;AAAA,UAAG;AACjD,eAAK,OAAO,KAAK,IAAI;AACrB,eAAK,kBAAkB,IAAI;AAC3B,eAAK,QAAQ,KAAK,YAAY,KAAK;AACnC,cAAI,aAAa,KAAK,SAAS,QAAQ,IAAI;AAC3C,cAAI,KAAK,MAAM,OAAO,WAAW,YAAY;AAC3C,gBAAIN,SAAQ,KAAK,MAAM;AACvB,gBAAI,KAAK,SAAS,OAChB;AAAE,mBAAK,iBAAiBA,QAAO,8BAA8B;AAAA,YAAG,OAEhE;AAAE,mBAAK,iBAAiBA,QAAO,sCAAsC;AAAA,YAAG;AAAA,UAC5E,OAAO;AACL,gBAAI,KAAK,SAAS,SAAS,KAAK,MAAM,OAAO,CAAC,EAAE,SAAS,eACvD;AAAE,mBAAK,iBAAiB,KAAK,MAAM,OAAO,CAAC,EAAE,OAAO,+BAA+B;AAAA,YAAG;AAAA,UAC1F;AAAA,QACF,WAAW,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,cAAc;AAC5F,cAAI,eAAe,SAAS;AAAE,iBAAK,WAAW;AAAA,UAAG;AACjD,eAAK,gBAAgB,KAAK,GAAG;AAC7B,cAAI,KAAK,IAAI,SAAS,WAAW,CAAC,KAAK,eACrC;AAAE,iBAAK,gBAAgB;AAAA,UAAU;AACnC,eAAK,OAAO;AACZ,cAAI,WAAW;AACb,iBAAK,QAAQ,KAAK,kBAAkB,UAAU,UAAU,KAAK,SAAS,KAAK,GAAG,CAAC;AAAA,UACjF,WAAW,KAAK,SAAS,QAAQ,MAAM,wBAAwB;AAC7D,gBAAI,uBAAuB,kBAAkB,GAC3C;AAAE,qCAAuB,kBAAkB,KAAK;AAAA,YAAO;AACzD,iBAAK,QAAQ,KAAK,kBAAkB,UAAU,UAAU,KAAK,SAAS,KAAK,GAAG,CAAC;AAAA,UACjF,OAAO;AACL,iBAAK,QAAQ,KAAK,SAAS,KAAK,GAAG;AAAA,UACrC;AACA,eAAK,YAAY;AAAA,QACnB,OAAO;AAAE,eAAK,WAAW;AAAA,QAAG;AAAA,MAC9B;AAEA,WAAK,oBAAoB,SAAS,MAAM;AACtC,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,cAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,iBAAK,WAAW;AAChB,iBAAK,MAAM,KAAK,iBAAiB;AACjC,iBAAK,OAAO,QAAQ,QAAQ;AAC5B,mBAAO,KAAK;AAAA,UACd,OAAO;AACL,iBAAK,WAAW;AAAA,UAClB;AAAA,QACF;AACA,eAAO,KAAK,MAAM,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAc,IAAI,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AAAA,MAC7J;AAIA,WAAK,eAAe,SAAS,MAAM;AACjC,aAAK,KAAK;AACV,YAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,eAAK,YAAY,KAAK,aAAa;AAAA,QAAO;AAC/E,YAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,eAAK,QAAQ;AAAA,QAAO;AAAA,MAC3D;AAIA,WAAK,cAAc,SAAS,aAAa,SAAS,kBAAkB;AAClE,YAAI,OAAO,KAAK,UAAU,GAAG,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AAE/G,aAAK,aAAa,IAAI;AACtB,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,YAAY;AAAA,QAAa;AAClC,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,QAAQ,CAAC,CAAC;AAAA,QAAS;AAE5B,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,aAAK,WAAW,cAAc,SAAS,KAAK,SAAS,IAAI,eAAe,mBAAmB,qBAAqB,EAAE;AAElH,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,SAAS,KAAK,iBAAiB,QAAQ,QAAQ,OAAO,KAAK,QAAQ,eAAe,CAAC;AACxF,aAAK,+BAA+B;AACpC,aAAK,kBAAkB,MAAM,OAAO,MAAM,KAAK;AAE/C,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,eAAO,KAAK,WAAW,MAAM,oBAAoB;AAAA,MACnD;AAIA,WAAK,uBAAuB,SAAS,MAAM,QAAQ,SAAS,SAAS;AACnE,YAAI,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AAEtF,aAAK,WAAW,cAAc,SAAS,KAAK,IAAI,WAAW;AAC3D,aAAK,aAAa,IAAI;AACtB,YAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,eAAK,QAAQ,CAAC,CAAC;AAAA,QAAS;AAE7D,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AAErB,aAAK,SAAS,KAAK,iBAAiB,QAAQ,IAAI;AAChD,aAAK,kBAAkB,MAAM,MAAM,OAAO,OAAO;AAEjD,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,eAAO,KAAK,WAAW,MAAM,yBAAyB;AAAA,MACxD;AAIA,WAAK,oBAAoB,SAAS,MAAM,iBAAiB,UAAU,SAAS;AAC1E,YAAI,eAAe,mBAAmB,KAAK,SAAS,QAAQ;AAC5D,YAAI,YAAY,KAAK,QAAQ,YAAY;AAEzC,YAAI,cAAc;AAChB,eAAK,OAAO,KAAK,iBAAiB,OAAO;AACzC,eAAK,aAAa;AAClB,eAAK,YAAY,MAAM,KAAK;AAAA,QAC9B,OAAO;AACL,cAAI,YAAY,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,kBAAkB,KAAK,MAAM;AACpF,cAAI,CAAC,aAAa,WAAW;AAC3B,wBAAY,KAAK,gBAAgB,KAAK,GAAG;AAIzC,gBAAI,aAAa,WACf;AAAE,mBAAK,iBAAiB,KAAK,OAAO,2EAA2E;AAAA,YAAG;AAAA,UACtH;AAGA,cAAI,YAAY,KAAK;AACrB,eAAK,SAAS,CAAC;AACf,cAAI,WAAW;AAAE,iBAAK,SAAS;AAAA,UAAM;AAIrC,eAAK,YAAY,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,KAAK,kBAAkB,KAAK,MAAM,CAAC;AAEvH,cAAI,KAAK,UAAU,KAAK,IAAI;AAAE,iBAAK,gBAAgB,KAAK,IAAI,YAAY;AAAA,UAAG;AAC3E,eAAK,OAAO,KAAK,WAAW,OAAO,QAAW,aAAa,CAAC,SAAS;AACrE,eAAK,aAAa;AAClB,eAAK,uBAAuB,KAAK,KAAK,IAAI;AAC1C,eAAK,SAAS;AAAA,QAChB;AACA,aAAK,UAAU;AAAA,MACjB;AAEA,WAAK,oBAAoB,SAAS,QAAQ;AACxC,iBAASP,KAAI,GAAGiB,QAAO,QAAQjB,KAAIiB,MAAK,QAAQjB,MAAK,GACnD;AACA,cAAI,QAAQiB,MAAKjB,EAAC;AAElB,cAAI,MAAM,SAAS,cAAc;AAAE,mBAAO;AAAA,UAC5C;AAAA,QAAE;AACF,eAAO;AAAA,MACT;AAKA,WAAK,cAAc,SAAS,MAAM,iBAAiB;AACjD,YAAI,WAAW,uBAAO,OAAO,IAAI;AACjC,iBAASA,KAAI,GAAGiB,QAAO,KAAK,QAAQjB,KAAIiB,MAAK,QAAQjB,MAAK,GACxD;AACA,cAAI,QAAQiB,MAAKjB,EAAC;AAElB,eAAK,sBAAsB,OAAO,UAAU,kBAAkB,OAAO,QAAQ;AAAA,QAC/E;AAAA,MACF;AAQA,WAAK,gBAAgB,SAAS,OAAO,oBAAoB,YAAY,wBAAwB;AAC3F,YAAI,OAAO,CAAC,GAAG,QAAQ;AACvB,eAAO,CAAC,KAAK,IAAI,KAAK,GAAG;AACvB,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,sBAAsB,KAAK,mBAAmB,KAAK,GAAG;AAAE;AAAA,YAAM;AAAA,UACpE,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,cAAI,MAAO;AACX,cAAI,cAAc,KAAK,SAAS,QAAQ,OACtC;AAAE,kBAAM;AAAA,UAAM,WACP,KAAK,SAAS,QAAQ,UAAU;AACvC,kBAAM,KAAK,YAAY,sBAAsB;AAC7C,gBAAI,0BAA0B,KAAK,SAAS,QAAQ,SAAS,uBAAuB,gBAAgB,GAClG;AAAE,qCAAuB,gBAAgB,KAAK;AAAA,YAAO;AAAA,UACzD,OAAO;AACL,kBAAM,KAAK,iBAAiB,OAAO,sBAAsB;AAAA,UAC3D;AACA,eAAK,KAAK,GAAG;AAAA,QACf;AACA,eAAO;AAAA,MACT;AAEA,WAAK,kBAAkB,SAASa,MAAK;AACnC,YAAIN,SAAQM,KAAI;AAChB,YAAI,MAAMA,KAAI;AACd,YAAIX,QAAOW,KAAI;AAEf,YAAI,KAAK,eAAeX,UAAS,SAC/B;AAAE,eAAK,iBAAiBK,QAAO,qDAAqD;AAAA,QAAG;AACzF,YAAI,KAAK,WAAWL,UAAS,SAC3B;AAAE,eAAK,iBAAiBK,QAAO,2DAA2D;AAAA,QAAG;AAC/F,YAAI,KAAK,iBAAiB,EAAE,oBAAoBL,UAAS,aACvD;AAAE,eAAK,iBAAiBK,QAAO,mDAAmD;AAAA,QAAG;AACvF,YAAI,KAAK,uBAAuBL,UAAS,eAAeA,UAAS,UAC/D;AAAE,eAAK,MAAMK,QAAQ,gBAAgBL,QAAO,uCAAwC;AAAA,QAAG;AACzF,YAAI,KAAK,SAAS,KAAKA,KAAI,GACzB;AAAE,eAAK,MAAMK,QAAQ,yBAAyBL,QAAO,GAAI;AAAA,QAAG;AAC9D,YAAI,KAAK,QAAQ,cAAc,KAC7B,KAAK,MAAM,MAAMK,QAAO,GAAG,EAAE,QAAQ,IAAI,MAAM,IAAI;AAAE;AAAA,QAAO;AAC9D,YAAI,KAAK,KAAK,SAAS,KAAK,sBAAsB,KAAK;AACvD,YAAI,GAAG,KAAKL,KAAI,GAAG;AACjB,cAAI,CAAC,KAAK,WAAWA,UAAS,SAC5B;AAAE,iBAAK,iBAAiBK,QAAO,sDAAsD;AAAA,UAAG;AAC1F,eAAK,iBAAiBA,QAAQ,kBAAkBL,QAAO,eAAgB;AAAA,QACzE;AAAA,MACF;AAMA,WAAK,aAAa,SAAS,SAAS,WAAW;AAC7C,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,eAAK,OAAO,KAAK;AAAA,QACnB,WAAW,KAAK,KAAK,SAAS;AAC5B,eAAK,OAAO,KAAK,KAAK;AAMtB,eAAK,KAAK,SAAS,WAAW,KAAK,SAAS,gBACvC,KAAK,eAAe,KAAK,eAAe,KAAK,KAAK,MAAM,WAAW,KAAK,YAAY,MAAM,KAAK;AAClG,iBAAK,QAAQ,IAAI;AAAA,UACnB;AAAA,QACF,OAAO;AACL,eAAK,WAAW;AAAA,QAClB;AACA,aAAK,KAAK,CAAC,CAAC,OAAO;AACnB,aAAK,WAAW,MAAM,YAAY;AAClC,YAAI,CAAC,SAAS;AACZ,eAAK,gBAAgB,IAAI;AACzB,cAAI,KAAK,SAAS,WAAW,CAAC,KAAK,eACjC;AAAE,iBAAK,gBAAgB,KAAK;AAAA,UAAO;AAAA,QACvC;AACA,eAAO;AAAA,MACT;AAEA,WAAK,oBAAoB,WAAW;AAClC,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,KAAK,SAAS,QAAQ,WAAW;AACnC,eAAK,OAAO,KAAK;AAAA,QACnB,OAAO;AACL,eAAK,WAAW;AAAA,QAClB;AACA,aAAK,KAAK;AACV,aAAK,WAAW,MAAM,mBAAmB;AAGzC,YAAI,KAAK,iBAAiB,WAAW,GAAG;AACtC,eAAK,MAAM,KAAK,OAAQ,qBAAsB,KAAK,OAAQ,0CAA2C;AAAA,QACxG,OAAO;AACL,eAAK,iBAAiB,KAAK,iBAAiB,SAAS,CAAC,EAAE,KAAK,KAAK,IAAI;AAAA,QACxE;AAEA,eAAO;AAAA,MACT;AAIA,WAAK,aAAa,SAAS,SAAS;AAClC,YAAI,CAAC,KAAK,UAAU;AAAE,eAAK,WAAW,KAAK;AAAA,QAAO;AAElD,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,YAAI,KAAK,SAAS,QAAQ,QAAQ,KAAK,mBAAmB,KAAM,KAAK,SAAS,QAAQ,QAAQ,CAAC,KAAK,KAAK,YAAa;AACpH,eAAK,WAAW;AAChB,eAAK,WAAW;AAAA,QAClB,OAAO;AACL,eAAK,WAAW,KAAK,IAAI,QAAQ,IAAI;AACrC,eAAK,WAAW,KAAK,iBAAiB,OAAO;AAAA,QAC/C;AACA,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,aAAa,SAAS,SAAS;AAClC,YAAI,CAAC,KAAK,UAAU;AAAE,eAAK,WAAW,KAAK;AAAA,QAAO;AAElD,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,aAAK,WAAW,KAAK,gBAAgB,MAAM,MAAM,OAAO,OAAO;AAC/D,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,UAAI,OAAOS,QAAO;AAQlB,WAAK,QAAQ,SAAS,KAAK,SAAS;AAClC,YAAI,MAAM,YAAY,KAAK,OAAO,GAAG;AACrC,mBAAW,OAAO,IAAI,OAAO,MAAM,IAAI,SAAS;AAChD,YAAI,MAAM,IAAI,YAAY,OAAO;AACjC,YAAI,MAAM;AAAK,YAAI,MAAM;AAAK,YAAI,WAAW,KAAK;AAClD,cAAM;AAAA,MACR;AAEA,WAAK,mBAAmB,KAAK;AAE7B,WAAK,cAAc,WAAW;AAC5B,YAAI,KAAK,QAAQ,WAAW;AAC1B,iBAAO,IAAI,SAAS,KAAK,SAAS,KAAK,MAAM,KAAK,SAAS;AAAA,QAC7D;AAAA,MACF;AAEA,UAAI,OAAOA,QAAO;AAElB,UAAIc,SAAQ,SAASA,OAAM,OAAO;AAChC,aAAK,QAAQ;AAEb,aAAK,MAAM,CAAC;AAEZ,aAAK,UAAU,CAAC;AAEhB,aAAK,YAAY,CAAC;AAElB,aAAK,mBAAmB;AAAA,MAC1B;AAIA,WAAK,aAAa,SAAS,OAAO;AAChC,aAAK,WAAW,KAAK,IAAIA,OAAM,KAAK,CAAC;AAAA,MACvC;AAEA,WAAK,YAAY,WAAW;AAC1B,aAAK,WAAW,IAAI;AAAA,MACtB;AAKA,WAAK,6BAA6B,SAAS,OAAO;AAChD,eAAQ,MAAM,QAAQ,kBAAmB,CAAC,KAAK,YAAa,MAAM,QAAQ;AAAA,MAC5E;AAEA,WAAK,cAAc,SAASvB,OAAM,aAAa,KAAK;AAClD,YAAI,aAAa;AACjB,YAAI,gBAAgB,cAAc;AAChC,cAAI,QAAQ,KAAK,aAAa;AAC9B,uBAAa,MAAM,QAAQ,QAAQA,KAAI,IAAI,MAAM,MAAM,UAAU,QAAQA,KAAI,IAAI,MAAM,MAAM,IAAI,QAAQA,KAAI,IAAI;AACjH,gBAAM,QAAQ,KAAKA,KAAI;AACvB,cAAI,KAAK,YAAa,MAAM,QAAQ,WAClC;AAAE,mBAAO,KAAK,iBAAiBA,KAAI;AAAA,UAAG;AAAA,QAC1C,WAAW,gBAAgB,mBAAmB;AAC5C,cAAI,UAAU,KAAK,aAAa;AAChC,kBAAQ,QAAQ,KAAKA,KAAI;AAAA,QAC3B,WAAW,gBAAgB,eAAe;AACxC,cAAI,UAAU,KAAK,aAAa;AAChC,cAAI,KAAK,qBACP;AAAE,yBAAa,QAAQ,QAAQ,QAAQA,KAAI,IAAI;AAAA,UAAI,OAEnD;AAAE,yBAAa,QAAQ,QAAQ,QAAQA,KAAI,IAAI,MAAM,QAAQ,IAAI,QAAQA,KAAI,IAAI;AAAA,UAAI;AACvF,kBAAQ,UAAU,KAAKA,KAAI;AAAA,QAC7B,OAAO;AACL,mBAASF,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAI,UAAU,KAAK,WAAWA,EAAC;AAC/B,gBAAI,QAAQ,QAAQ,QAAQE,KAAI,IAAI,MAAM,EAAG,QAAQ,QAAQ,sBAAuB,QAAQ,QAAQ,CAAC,MAAMA,UACvG,CAAC,KAAK,2BAA2B,OAAO,KAAK,QAAQ,UAAU,QAAQA,KAAI,IAAI,IAAI;AACrF,2BAAa;AACb;AAAA,YACF;AACA,oBAAQ,IAAI,KAAKA,KAAI;AACrB,gBAAI,KAAK,YAAa,QAAQ,QAAQ,WACpC;AAAE,qBAAO,KAAK,iBAAiBA,KAAI;AAAA,YAAG;AACxC,gBAAI,QAAQ,QAAQ,WAAW;AAAE;AAAA,YAAM;AAAA,UACzC;AAAA,QACF;AACA,YAAI,YAAY;AAAE,eAAK,iBAAiB,KAAM,iBAAiBA,QAAO,6BAA8B;AAAA,QAAG;AAAA,MACzG;AAEA,WAAK,mBAAmB,SAAS,IAAI;AAEnC,YAAI,KAAK,WAAW,CAAC,EAAE,QAAQ,QAAQ,GAAG,IAAI,MAAM,MAChD,KAAK,WAAW,CAAC,EAAE,IAAI,QAAQ,GAAG,IAAI,MAAM,IAAI;AAClD,eAAK,iBAAiB,GAAG,IAAI,IAAI;AAAA,QACnC;AAAA,MACF;AAEA,WAAK,eAAe,WAAW;AAC7B,eAAO,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AAAA,MACnD;AAEA,WAAK,kBAAkB,WAAW;AAChC,iBAASF,KAAI,KAAK,WAAW,SAAS,KAAIA,MAAK;AAC7C,cAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,cAAI,MAAM,QAAQ,WAAW;AAAE,mBAAO;AAAA,UAAM;AAAA,QAC9C;AAAA,MACF;AAGA,WAAK,mBAAmB,WAAW;AACjC,iBAASA,KAAI,KAAK,WAAW,SAAS,KAAIA,MAAK;AAC7C,cAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,cAAI,MAAM,QAAQ,aAAa,EAAE,MAAM,QAAQ,cAAc;AAAE,mBAAO;AAAA,UAAM;AAAA,QAC9E;AAAA,MACF;AAEA,UAAI,OAAO,SAAS0B,MAAK,QAAQ,KAAK,KAAK;AACzC,aAAK,OAAO;AACZ,aAAK,QAAQ;AACb,aAAK,MAAM;AACX,YAAI,OAAO,QAAQ,WACjB;AAAE,eAAK,MAAM,IAAI,eAAe,QAAQ,GAAG;AAAA,QAAG;AAChD,YAAI,OAAO,QAAQ,kBACjB;AAAE,eAAK,aAAa,OAAO,QAAQ;AAAA,QAAkB;AACvD,YAAI,OAAO,QAAQ,QACjB;AAAE,eAAK,QAAQ,CAAC,KAAK,CAAC;AAAA,QAAG;AAAA,MAC7B;AAIA,UAAI,OAAOf,QAAO;AAElB,WAAK,YAAY,WAAW;AAC1B,eAAO,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,QAAQ;AAAA,MACjD;AAEA,WAAK,cAAc,SAAS,KAAK,KAAK;AACpC,eAAO,IAAI,KAAK,MAAM,KAAK,GAAG;AAAA,MAChC;AAIA,eAAS,aAAa,MAAM,MAAM,KAAK,KAAK;AAC1C,aAAK,OAAO;AACZ,aAAK,MAAM;AACX,YAAI,KAAK,QAAQ,WACf;AAAE,eAAK,IAAI,MAAM;AAAA,QAAK;AACxB,YAAI,KAAK,QAAQ,QACf;AAAE,eAAK,MAAM,CAAC,IAAI;AAAA,QAAK;AACzB,eAAO;AAAA,MACT;AAEA,WAAK,aAAa,SAAS,MAAM,MAAM;AACrC,eAAO,aAAa,KAAK,MAAM,MAAM,MAAM,KAAK,YAAY,KAAK,aAAa;AAAA,MAChF;AAIA,WAAK,eAAe,SAAS,MAAM,MAAM,KAAK,KAAK;AACjD,eAAO,aAAa,KAAK,MAAM,MAAM,MAAM,KAAK,GAAG;AAAA,MACrD;AAEA,WAAK,WAAW,SAAS,MAAM;AAC7B,YAAI,UAAU,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,QAAQ;AACtD,iBAAS,QAAQ,MAAM;AAAE,kBAAQ,IAAI,IAAI,KAAK,IAAI;AAAA,QAAG;AACrD,eAAO;AAAA,MACT;AAOA,UAAI,wBAAwB;AAC5B,UAAI,yBAAyB,wBAAwB;AACrD,UAAI,yBAAyB;AAC7B,UAAI,yBAAyB,yBAAyB;AACtD,UAAI,yBAAyB;AAC7B,UAAI,0BAA0B;AAAA,QAC5B,GAAG;AAAA,QACH,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AAGA,UAAI,+BAA+B;AAGnC,UAAI,oBAAoB;AACxB,UAAI,qBAAqB,oBAAoB;AAC7C,UAAI,qBAAqB,qBAAqB;AAC9C,UAAI,qBAAqB,qBAAqB;AAC9C,UAAI,qBAAqB,qBAAqB;AAC9C,UAAI,sBAAsB;AAAA,QACxB,GAAG;AAAA,QACH,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AAEA,UAAI,OAAO,CAAC;AACZ,eAAS,iBAAiBS,cAAa;AACrC,YAAI,IAAI,KAAKA,YAAW,IAAI;AAAA,UAC1B,QAAQ,YAAY,wBAAwBA,YAAW,IAAI,MAAM,4BAA4B;AAAA,UAC7F,WAAW;AAAA,YACT,kBAAkB,YAAY,4BAA4B;AAAA,YAC1D,QAAQ,YAAY,oBAAoBA,YAAW,CAAC;AAAA,UACtD;AAAA,QACF;AACA,UAAE,UAAU,oBAAoB,EAAE,UAAU;AAE5C,UAAE,UAAU,KAAK,EAAE,UAAU;AAC7B,UAAE,UAAU,KAAK,EAAE,UAAU;AAC7B,UAAE,UAAU,MAAM,EAAE,UAAU;AAAA,MAChC;AAEA,eAAS,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACnE,YAAI,cAAc,KAAK,CAAC;AAExB,yBAAiB,WAAW;AAAA,MAC9B;AAEA,UAAI,OAAOT,QAAO;AAElB,UAAI,wBAAwB,SAASgB,uBAAsB,QAAQ;AACjE,aAAK,SAAS;AACd,aAAK,aAAa,SAAS,OAAO,QAAQ,eAAe,IAAI,OAAO,OAAO,OAAO,QAAQ,eAAe,IAAI,MAAM,OAAO,OAAO,QAAQ,eAAe,KAAK,MAAM;AACnK,aAAK,oBAAoB,KAAK,OAAO,QAAQ,eAAe,KAAK,KAAK,OAAO,QAAQ,WAAW;AAChG,aAAK,SAAS;AACd,aAAK,QAAQ;AACb,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,MAAM;AACX,aAAK,eAAe;AACpB,aAAK,kBAAkB;AACvB,aAAK,8BAA8B;AACnC,aAAK,qBAAqB;AAC1B,aAAK,mBAAmB;AACxB,aAAK,aAAa,CAAC;AACnB,aAAK,qBAAqB,CAAC;AAAA,MAC7B;AAEA,4BAAsB,UAAU,QAAQ,SAASC,OAAOrB,QAAO,SAAS,OAAO;AAC7E,YAAI,UAAU,MAAM,QAAQ,GAAG,MAAM;AACrC,aAAK,QAAQA,SAAQ;AACrB,aAAK,SAAS,UAAU;AACxB,aAAK,QAAQ;AACb,aAAK,UAAU,WAAW,KAAK,OAAO,QAAQ,eAAe;AAC7D,aAAK,UAAU,WAAW,KAAK,OAAO,QAAQ,eAAe;AAAA,MAC/D;AAEA,4BAAsB,UAAU,QAAQ,SAAS,MAAO,SAAS;AAC/D,aAAK,OAAO,iBAAiB,KAAK,OAAQ,kCAAmC,KAAK,SAAU,QAAQ,OAAQ;AAAA,MAC9G;AAIA,4BAAsB,UAAU,KAAK,SAAS,GAAIP,IAAG,QAAQ;AACzD,YAAK,WAAW;AAAS,mBAAS;AAEpC,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,EAAE;AACV,YAAIA,MAAK,GAAG;AACV,iBAAO;AAAA,QACT;AACA,YAAI,IAAI,EAAE,WAAWA,EAAC;AACtB,YAAI,EAAE,UAAU,KAAK,YAAY,KAAK,SAAU,KAAK,SAAUA,KAAI,KAAK,GAAG;AACzE,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,EAAE,WAAWA,KAAI,CAAC;AAC7B,eAAO,QAAQ,SAAU,QAAQ,SAAU,KAAK,MAAM,OAAO,WAAY;AAAA,MAC3E;AAEA,4BAAsB,UAAU,YAAY,SAAS,UAAWA,IAAG,QAAQ;AACvE,YAAK,WAAW;AAAS,mBAAS;AAEpC,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,EAAE;AACV,YAAIA,MAAK,GAAG;AACV,iBAAO;AAAA,QACT;AACA,YAAI,IAAI,EAAE,WAAWA,EAAC,GAAG;AACzB,YAAI,EAAE,UAAU,KAAK,YAAY,KAAK,SAAU,KAAK,SAAUA,KAAI,KAAK,MACnE,OAAO,EAAE,WAAWA,KAAI,CAAC,KAAK,SAAU,OAAO,OAAQ;AAC1D,iBAAOA,KAAI;AAAA,QACb;AACA,eAAOA,KAAI;AAAA,MACb;AAEA,4BAAsB,UAAU,UAAU,SAAS,QAAS,QAAQ;AAChE,YAAK,WAAW;AAAS,mBAAS;AAEpC,eAAO,KAAK,GAAG,KAAK,KAAK,MAAM;AAAA,MACjC;AAEA,4BAAsB,UAAU,YAAY,SAAS,UAAW,QAAQ;AACpE,YAAK,WAAW;AAAS,mBAAS;AAEpC,eAAO,KAAK,GAAG,KAAK,UAAU,KAAK,KAAK,MAAM,GAAG,MAAM;AAAA,MACzD;AAEA,4BAAsB,UAAU,UAAU,SAAS,QAAS,QAAQ;AAChE,YAAK,WAAW;AAAS,mBAAS;AAEpC,aAAK,MAAM,KAAK,UAAU,KAAK,KAAK,MAAM;AAAA,MAC5C;AAEA,4BAAsB,UAAU,MAAM,SAAS,IAAK,IAAI,QAAQ;AAC5D,YAAK,WAAW;AAAS,mBAAS;AAEpC,YAAI,KAAK,QAAQ,MAAM,MAAM,IAAI;AAC/B,eAAK,QAAQ,MAAM;AACnB,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAQA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAI,aAAa,MAAM;AACvB,YAAI,QAAQ,MAAM;AAElB,iBAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAI,OAAO,MAAM,OAAOA,EAAC;AACzB,cAAI,WAAW,QAAQ,IAAI,MAAM,IAAI;AACnC,iBAAK,MAAM,MAAM,OAAO,iCAAiC;AAAA,UAC3D;AACA,cAAI,MAAM,QAAQ,MAAMA,KAAI,CAAC,IAAI,IAAI;AACnC,iBAAK,MAAM,MAAM,OAAO,mCAAmC;AAAA,UAC7D;AAAA,QACF;AAAA,MACF;AAQA,WAAK,wBAAwB,SAAS,OAAO;AAC3C,aAAK,eAAe,KAAK;AAOzB,YAAI,CAAC,MAAM,WAAW,KAAK,QAAQ,eAAe,KAAK,MAAM,WAAW,SAAS,GAAG;AAClF,gBAAM,UAAU;AAChB,eAAK,eAAe,KAAK;AAAA,QAC3B;AAAA,MACF;AAGA,WAAK,iBAAiB,SAAS,OAAO;AACpC,cAAM,MAAM;AACZ,cAAM,eAAe;AACrB,cAAM,kBAAkB;AACxB,cAAM,8BAA8B;AACpC,cAAM,qBAAqB;AAC3B,cAAM,mBAAmB;AACzB,cAAM,WAAW,SAAS;AAC1B,cAAM,mBAAmB,SAAS;AAElC,aAAK,mBAAmB,KAAK;AAE7B,YAAI,MAAM,QAAQ,MAAM,OAAO,QAAQ;AAErC,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,kBAAM,MAAM,eAAe;AAAA,UAC7B;AACA,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACtD,kBAAM,MAAM,0BAA0B;AAAA,UACxC;AAAA,QACF;AACA,YAAI,MAAM,mBAAmB,MAAM,oBAAoB;AACrD,gBAAM,MAAM,gBAAgB;AAAA,QAC9B;AACA,iBAASA,KAAI,GAAGiB,QAAO,MAAM,oBAAoBjB,KAAIiB,MAAK,QAAQjB,MAAK,GAAG;AACxE,cAAIE,QAAOe,MAAKjB,EAAC;AAEjB,cAAI,MAAM,WAAW,QAAQE,KAAI,MAAM,IAAI;AACzC,kBAAM,MAAM,kCAAkC;AAAA,UAChD;AAAA,QACF;AAAA,MACF;AAGA,WAAK,qBAAqB,SAAS,OAAO;AACxC,aAAK,mBAAmB,KAAK;AAC7B,eAAO,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC9B,eAAK,mBAAmB,KAAK;AAAA,QAC/B;AAGA,YAAI,KAAK,qBAAqB,OAAO,IAAI,GAAG;AAC1C,gBAAM,MAAM,mBAAmB;AAAA,QACjC;AACA,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,gBAAM,MAAM,0BAA0B;AAAA,QACxC;AAAA,MACF;AAGA,WAAK,qBAAqB,SAAS,OAAO;AACxC,eAAO,MAAM,MAAM,MAAM,OAAO,UAAU,KAAK,eAAe,KAAK,GACjE;AAAA,QAAE;AAAA,MACN;AAGA,WAAK,iBAAiB,SAAS,OAAO;AACpC,YAAI,KAAK,oBAAoB,KAAK,GAAG;AAInC,cAAI,MAAM,+BAA+B,KAAK,qBAAqB,KAAK,GAAG;AAEzE,gBAAI,MAAM,SAAS;AACjB,oBAAM,MAAM,oBAAoB;AAAA,YAClC;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEA,YAAI,MAAM,UAAU,KAAK,eAAe,KAAK,IAAI,KAAK,uBAAuB,KAAK,GAAG;AACnF,eAAK,qBAAqB,KAAK;AAC/B,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAGA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAIK,SAAQ,MAAM;AAClB,cAAM,8BAA8B;AAGpC,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KAAK,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AACtD,iBAAO;AAAA,QACT;AAGA,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACtD,mBAAO;AAAA,UACT;AACA,gBAAM,MAAMA;AAAA,QACd;AAGA,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KAAK,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AACtD,cAAI,aAAa;AACjB,cAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,yBAAa,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY;AAAA,UACrC;AACA,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACtD,iBAAK,mBAAmB,KAAK;AAC7B,gBAAI,CAAC,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,GAAG;AAC5B,oBAAM,MAAM,oBAAoB;AAAA,YAClC;AACA,kBAAM,8BAA8B,CAAC;AACrC,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,cAAM,MAAMA;AACZ,eAAO;AAAA,MACT;AAGA,WAAK,uBAAuB,SAAS,OAAO,SAAS;AACnD,YAAK,YAAY;AAAS,oBAAU;AAEpC,YAAI,KAAK,2BAA2B,OAAO,OAAO,GAAG;AACnD,gBAAM;AAAA,YAAI;AAAA;AAAA,UAAY;AACtB,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,6BAA6B,SAAS,OAAO,SAAS;AACzD,eACE,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,KAAK,2BAA2B,OAAO,OAAO;AAAA,MAElD;AACA,WAAK,6BAA6B,SAAS,OAAO,SAAS;AACzD,YAAIA,SAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,MAAM,GAAG,MAAM;AACnB,cAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,kBAAM,MAAM;AACZ,gBAAI,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,KAAK,KAAK,wBAAwB,KAAK,GAAG;AAClE,oBAAM,MAAM;AAAA,YACd;AACA,gBAAI,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,GAAG;AAE3B,kBAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,SAAS;AACvC,sBAAM,MAAM,uCAAuC;AAAA,cACrD;AACA,qBAAO;AAAA,YACT;AAAA,UACF;AACA,cAAI,MAAM,WAAW,CAAC,SAAS;AAC7B,kBAAM,MAAM,uBAAuB;AAAA,UACrC;AACA,gBAAM,MAAMA;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAGA,WAAK,iBAAiB,SAAS,OAAO;AACpC,eACE,KAAK,4BAA4B,KAAK,KACtC,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,KAAK,mCAAmC,KAAK,KAC7C,KAAK,yBAAyB,KAAK,KACnC,KAAK,2BAA2B,KAAK,KACrC,KAAK,yBAAyB,KAAK;AAAA,MAEvC;AACA,WAAK,qCAAqC,SAAS,OAAO;AACxD,YAAIA,SAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,mBAAO;AAAA,UACT;AACA,gBAAM,MAAMA;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,6BAA6B,SAAS,OAAO;AAChD,YAAIA,SAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACtD,iBAAK,mBAAmB,KAAK;AAC7B,gBAAI,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,GAAG;AAC3B,qBAAO;AAAA,YACT;AACA,kBAAM,MAAM,oBAAoB;AAAA,UAClC;AACA,gBAAM,MAAMA;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,iBAAK,sBAAsB,KAAK;AAAA,UAClC,WAAW,MAAM,QAAQ,MAAM,IAAc;AAC3C,kBAAM,MAAM,eAAe;AAAA,UAC7B;AACA,eAAK,mBAAmB,KAAK;AAC7B,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,kBAAM,sBAAsB;AAC5B,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,oBAAoB;AAAA,QAClC;AACA,eAAO;AAAA,MACT;AAGA,WAAK,yBAAyB,SAAS,OAAO;AAC5C,eACE,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,KAAK,mCAAmC,KAAK,KAC7C,KAAK,yBAAyB,KAAK,KACnC,KAAK,2BAA2B,KAAK,KACrC,KAAK,yBAAyB,KAAK,KACnC,KAAK,kCAAkC,KAAK,KAC5C,KAAK,mCAAmC,KAAK;AAAA,MAEjD;AAGA,WAAK,oCAAoC,SAAS,OAAO;AACvD,YAAI,KAAK,2BAA2B,OAAO,IAAI,GAAG;AAChD,gBAAM,MAAM,mBAAmB;AAAA,QACjC;AACA,eAAO;AAAA,MACT;AAGA,WAAK,4BAA4B,SAAS,OAAO;AAC/C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,kBAAkB,EAAE,GAAG;AACzB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AACA,eAAS,kBAAkB,IAAI;AAC7B,eACE,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,OAAO,MACP,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,MAAM,OAAgB,MAAM;AAAA,MAEhC;AAIA,WAAK,8BAA8B,SAAS,OAAO;AACjD,YAAIA,SAAQ,MAAM;AAClB,YAAI,KAAK;AACT,gBAAQ,KAAK,MAAM,QAAQ,OAAO,MAAM,CAAC,kBAAkB,EAAE,GAAG;AAC9D,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,QAAQA;AAAA,MACvB;AAGA,WAAK,qCAAqC,SAAS,OAAO;AACxD,YAAI,KAAK,MAAM,QAAQ;AACvB,YACE,OAAO,MACP,OAAO,MACP,EAAE,MAAM,MAAgB,MAAM,OAC9B,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,KACP;AACA,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAKA,WAAK,wBAAwB,SAAS,OAAO;AAC3C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,oBAAoB,KAAK,GAAG;AACnC,gBAAI,MAAM,WAAW,QAAQ,MAAM,eAAe,MAAM,IAAI;AAC1D,oBAAM,MAAM,8BAA8B;AAAA,YAC5C;AACA,kBAAM,WAAW,KAAK,MAAM,eAAe;AAC3C;AAAA,UACF;AACA,gBAAM,MAAM,eAAe;AAAA,QAC7B;AAAA,MACF;AAKA,WAAK,sBAAsB,SAAS,OAAO;AACzC,cAAM,kBAAkB;AACxB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,+BAA+B,KAAK,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACzE,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,4BAA4B;AAAA,QAC1C;AACA,eAAO;AAAA,MACT;AAMA,WAAK,iCAAiC,SAAS,OAAO;AACpD,cAAM,kBAAkB;AACxB,YAAI,KAAK,gCAAgC,KAAK,GAAG;AAC/C,gBAAM,mBAAmB,kBAAkB,MAAM,YAAY;AAC7D,iBAAO,KAAK,+BAA+B,KAAK,GAAG;AACjD,kBAAM,mBAAmB,kBAAkB,MAAM,YAAY;AAAA,UAC/D;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAOA,WAAK,kCAAkC,SAAS,OAAO;AACrD,YAAIA,SAAQ,MAAM;AAClB,YAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,YAAI,KAAK,MAAM,QAAQ,MAAM;AAC7B,cAAM,QAAQ,MAAM;AAEpB,YAAI,OAAO,MAAgB,KAAK,sCAAsC,OAAO,MAAM,GAAG;AACpF,eAAK,MAAM;AAAA,QACb;AACA,YAAI,wBAAwB,EAAE,GAAG;AAC/B,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,cAAM,MAAMA;AACZ,eAAO;AAAA,MACT;AACA,eAAS,wBAAwB,IAAI;AACnC,eAAO,kBAAkB,IAAI,IAAI,KAAK,OAAO,MAAgB,OAAO;AAAA,MACtE;AASA,WAAK,iCAAiC,SAAS,OAAO;AACpD,YAAIA,SAAQ,MAAM;AAClB,YAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,YAAI,KAAK,MAAM,QAAQ,MAAM;AAC7B,cAAM,QAAQ,MAAM;AAEpB,YAAI,OAAO,MAAgB,KAAK,sCAAsC,OAAO,MAAM,GAAG;AACpF,eAAK,MAAM;AAAA,QACb;AACA,YAAI,uBAAuB,EAAE,GAAG;AAC9B,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,cAAM,MAAMA;AACZ,eAAO;AAAA,MACT;AACA,eAAS,uBAAuB,IAAI;AAClC,eAAO,iBAAiB,IAAI,IAAI,KAAK,OAAO,MAAgB,OAAO,MAAgB,OAAO,QAAuB,OAAO;AAAA,MAC1H;AAGA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,YACE,KAAK,wBAAwB,KAAK,KAClC,KAAK,+BAA+B,KAAK,KACzC,KAAK,0BAA0B,KAAK,KACnC,MAAM,WAAW,KAAK,qBAAqB,KAAK,GACjD;AACA,iBAAO;AAAA,QACT;AACA,YAAI,MAAM,SAAS;AAEjB,cAAI,MAAM,QAAQ,MAAM,IAAc;AACpC,kBAAM,MAAM,wBAAwB;AAAA,UACtC;AACA,gBAAM,MAAM,gBAAgB;AAAA,QAC9B;AACA,eAAO;AAAA,MACT;AACA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAIA,SAAQ,MAAM;AAClB,YAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,cAAI,IAAI,MAAM;AACd,cAAI,MAAM,SAAS;AAEjB,gBAAI,IAAI,MAAM,kBAAkB;AAC9B,oBAAM,mBAAmB;AAAA,YAC3B;AACA,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,MAAM,oBAAoB;AACjC,mBAAO;AAAA,UACT;AACA,gBAAM,MAAMA;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,oBAAoB,KAAK,GAAG;AACnC,kBAAM,mBAAmB,KAAK,MAAM,eAAe;AACnD,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,yBAAyB;AAAA,QACvC;AACA,eAAO;AAAA,MACT;AAGA,WAAK,4BAA4B,SAAS,OAAO;AAC/C,eACE,KAAK,wBAAwB,KAAK,KAClC,KAAK,yBAAyB,KAAK,KACnC,KAAK,eAAe,KAAK,KACzB,KAAK,4BAA4B,KAAK,KACtC,KAAK,sCAAsC,OAAO,KAAK,KACtD,CAAC,MAAM,WAAW,KAAK,oCAAoC,KAAK,KACjE,KAAK,yBAAyB,KAAK;AAAA,MAEvC;AACA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAIA,SAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,mBAAO;AAAA,UACT;AACA,gBAAM,MAAMA;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,iBAAiB,SAAS,OAAO;AACpC,YAAI,MAAM,QAAQ,MAAM,MAAgB,CAAC,eAAe,MAAM,UAAU,CAAC,GAAG;AAC1E,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,gBAAgB,EAAE,GAAG;AACvB,gBAAM,eAAe,KAAK;AAC1B,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AACA,eAAS,gBAAgB,IAAI;AAC3B,eACG,MAAM,MAAgB,MAAM,MAC5B,MAAM,MAAgB,MAAM;AAAA,MAEjC;AAGA,WAAK,wCAAwC,SAAS,OAAO,QAAQ;AACnE,YAAK,WAAW;AAAS,mBAAS;AAElC,YAAIA,SAAQ,MAAM;AAClB,YAAI,UAAU,UAAU,MAAM;AAE9B,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,yBAAyB,OAAO,CAAC,GAAG;AAC3C,gBAAI,OAAO,MAAM;AACjB,gBAAI,WAAW,QAAQ,SAAU,QAAQ,OAAQ;AAC/C,kBAAI,mBAAmB,MAAM;AAC7B,kBAAI,MAAM;AAAA,gBAAI;AAAA;AAAA,cAAY,KAAK,MAAM;AAAA,gBAAI;AAAA;AAAA,cAAY,KAAK,KAAK,yBAAyB,OAAO,CAAC,GAAG;AACjG,oBAAI,QAAQ,MAAM;AAClB,oBAAI,SAAS,SAAU,SAAS,OAAQ;AACtC,wBAAM,gBAAgB,OAAO,SAAU,QAAS,QAAQ,SAAU;AAClE,yBAAO;AAAA,gBACT;AAAA,cACF;AACA,oBAAM,MAAM;AACZ,oBAAM,eAAe;AAAA,YACvB;AACA,mBAAO;AAAA,UACT;AACA,cACE,WACA,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KACtB,KAAK,oBAAoB,KAAK,KAC9B,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KACtB,eAAe,MAAM,YAAY,GACjC;AACA,mBAAO;AAAA,UACT;AACA,cAAI,SAAS;AACX,kBAAM,MAAM,wBAAwB;AAAA,UACtC;AACA,gBAAM,MAAMA;AAAA,QACd;AAEA,eAAO;AAAA,MACT;AACA,eAAS,eAAe,IAAI;AAC1B,eAAO,MAAM,KAAK,MAAM;AAAA,MAC1B;AAGA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAI,MAAM,SAAS;AACjB,cAAI,KAAK,0BAA0B,KAAK,GAAG;AACzC,mBAAO;AAAA,UACT;AACA,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,kBAAM,eAAe;AACrB,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,OAAO,OAAiB,CAAC,MAAM,WAAW,OAAO,MAAe;AAClE,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,cAAM,eAAe;AACrB,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,MAAM,MAAgB,MAAM,IAAc;AAC5C,aAAG;AACD,kBAAM,eAAe,KAAK,MAAM,gBAAgB,KAAK;AACrD,kBAAM,QAAQ;AAAA,UAChB,UAAU,KAAK,MAAM,QAAQ,MAAM,MAAgB,MAAM;AACzD,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,iCAAiC,SAAS,OAAO;AACpD,YAAI,KAAK,MAAM,QAAQ;AAEvB,YAAI,uBAAuB,EAAE,GAAG;AAC9B,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,YACE,MAAM,WACN,KAAK,QAAQ,eAAe,MAC3B,OAAO,MAAgB,OAAO,MAC/B;AACA,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,cACE,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KACtB,KAAK,yCAAyC,KAAK,KACnD,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GACtB;AACA,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,uBAAuB;AAAA,QACrC;AAEA,eAAO;AAAA,MACT;AACA,eAAS,uBAAuB,IAAI;AAClC,eACE,OAAO,OACP,OAAO,MACP,OAAO,OACP,OAAO,MACP,OAAO,OACP,OAAO;AAAA,MAEX;AAKA,WAAK,2CAA2C,SAAS,OAAO;AAC9D,YAAIA,SAAQ,MAAM;AAGlB,YAAI,KAAK,8BAA8B,KAAK,KAAK,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AACxE,cAAIL,QAAO,MAAM;AACjB,cAAI,KAAK,+BAA+B,KAAK,GAAG;AAC9C,gBAAI,QAAQ,MAAM;AAClB,iBAAK,2CAA2C,OAAOA,OAAM,KAAK;AAClE,mBAAO;AAAA,UACT;AAAA,QACF;AACA,cAAM,MAAMK;AAGZ,YAAI,KAAK,yCAAyC,KAAK,GAAG;AACxD,cAAI,cAAc,MAAM;AACxB,eAAK,0CAA0C,OAAO,WAAW;AACjE,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AACA,WAAK,6CAA6C,SAAS,OAAOL,OAAM,OAAO;AAC7E,YAAI,CAAC,OAAO,MAAM,kBAAkB,WAAWA,KAAI,GACjD;AAAE,gBAAM,MAAM,uBAAuB;AAAA,QAAG;AAC1C,YAAI,CAAC,MAAM,kBAAkB,UAAUA,KAAI,EAAE,KAAK,KAAK,GACrD;AAAE,gBAAM,MAAM,wBAAwB;AAAA,QAAG;AAAA,MAC7C;AACA,WAAK,4CAA4C,SAAS,OAAO,aAAa;AAC5E,YAAI,CAAC,MAAM,kBAAkB,OAAO,KAAK,WAAW,GAClD;AAAE,gBAAM,MAAM,uBAAuB;AAAA,QAAG;AAAA,MAC5C;AAIA,WAAK,gCAAgC,SAAS,OAAO;AACnD,YAAI,KAAK;AACT,cAAM,kBAAkB;AACxB,eAAO,+BAA+B,KAAK,MAAM,QAAQ,CAAC,GAAG;AAC3D,gBAAM,mBAAmB,kBAAkB,EAAE;AAC7C,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,oBAAoB;AAAA,MACnC;AACA,eAAS,+BAA+B,IAAI;AAC1C,eAAO,gBAAgB,EAAE,KAAK,OAAO;AAAA,MACvC;AAIA,WAAK,iCAAiC,SAAS,OAAO;AACpD,YAAI,KAAK;AACT,cAAM,kBAAkB;AACxB,eAAO,gCAAgC,KAAK,MAAM,QAAQ,CAAC,GAAG;AAC5D,gBAAM,mBAAmB,kBAAkB,EAAE;AAC7C,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,oBAAoB;AAAA,MACnC;AACA,eAAS,gCAAgC,IAAI;AAC3C,eAAO,+BAA+B,EAAE,KAAK,eAAe,EAAE;AAAA,MAChE;AAIA,WAAK,2CAA2C,SAAS,OAAO;AAC9D,eAAO,KAAK,+BAA+B,KAAK;AAAA,MAClD;AAGA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,gBAAM;AAAA,YAAI;AAAA;AAAA,UAAY;AACtB,eAAK,mBAAmB,KAAK;AAC7B,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,mBAAO;AAAA,UACT;AAEA,gBAAM,MAAM,8BAA8B;AAAA,QAC5C;AACA,eAAO;AAAA,MACT;AAKA,WAAK,qBAAqB,SAAS,OAAO;AACxC,eAAO,KAAK,oBAAoB,KAAK,GAAG;AACtC,cAAI,OAAO,MAAM;AACjB,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,KAAK,oBAAoB,KAAK,GAAG;AAC9D,gBAAI,QAAQ,MAAM;AAClB,gBAAI,MAAM,YAAY,SAAS,MAAM,UAAU,KAAK;AAClD,oBAAM,MAAM,yBAAyB;AAAA,YACvC;AACA,gBAAI,SAAS,MAAM,UAAU,MAAM,OAAO,OAAO;AAC/C,oBAAM,MAAM,uCAAuC;AAAA,YACrD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAIA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAIK,SAAQ,MAAM;AAElB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,sBAAsB,KAAK,GAAG;AACrC,mBAAO;AAAA,UACT;AACA,cAAI,MAAM,SAAS;AAEjB,gBAAI,OAAO,MAAM,QAAQ;AACzB,gBAAI,SAAS,MAAgB,aAAa,IAAI,GAAG;AAC/C,oBAAM,MAAM,sBAAsB;AAAA,YACpC;AACA,kBAAM,MAAM,gBAAgB;AAAA,UAC9B;AACA,gBAAM,MAAMA;AAAA,QACd;AAEA,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,OAAO,IAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAGA,WAAK,wBAAwB,SAAS,OAAO;AAC3C,YAAIA,SAAQ,MAAM;AAElB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,YAAI,MAAM,WAAW,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC5C,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,MAAM,WAAW,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC7C,cAAI,KAAK,6BAA6B,KAAK,GAAG;AAC5C,mBAAO;AAAA,UACT;AACA,gBAAM,MAAMA;AAAA,QACd;AAEA,eACE,KAAK,+BAA+B,KAAK,KACzC,KAAK,0BAA0B,KAAK;AAAA,MAExC;AAGA,WAAK,+BAA+B,SAAS,OAAO;AAClD,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,eAAe,EAAE,KAAK,OAAO,IAAc;AAC7C,gBAAM,eAAe,KAAK;AAC1B,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,8BAA8B,SAAS,OAAO;AACjD,YAAIA,SAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,yBAAyB,OAAO,CAAC,GAAG;AAC3C,mBAAO;AAAA,UACT;AACA,cAAI,MAAM,SAAS;AACjB,kBAAM,MAAM,gBAAgB;AAAA,UAC9B;AACA,gBAAM,MAAMA;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAIA,SAAQ,MAAM;AAClB,YAAI,KAAK;AACT,cAAM,eAAe;AACrB,eAAO,eAAe,KAAK,MAAM,QAAQ,CAAC,GAAG;AAC3C,gBAAM,eAAe,KAAK,MAAM,gBAAgB,KAAK;AACrD,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,QAAQA;AAAA,MACvB;AACA,eAAS,eAAe,IAAI;AAC1B,eAAO,MAAM,MAAgB,MAAM;AAAA,MACrC;AAGA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAIA,SAAQ,MAAM;AAClB,YAAI,KAAK;AACT,cAAM,eAAe;AACrB,eAAO,WAAW,KAAK,MAAM,QAAQ,CAAC,GAAG;AACvC,gBAAM,eAAe,KAAK,MAAM,eAAe,SAAS,EAAE;AAC1D,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,QAAQA;AAAA,MACvB;AACA,eAAS,WAAW,IAAI;AACtB,eACG,MAAM,MAAgB,MAAM,MAC5B,MAAM,MAAgB,MAAM,MAC5B,MAAM,MAAgB,MAAM;AAAA,MAEjC;AACA,eAAS,SAAS,IAAI;AACpB,YAAI,MAAM,MAAgB,MAAM,IAAc;AAC5C,iBAAO,MAAM,KAAK;AAAA,QACpB;AACA,YAAI,MAAM,MAAgB,MAAM,KAAc;AAC5C,iBAAO,MAAM,KAAK;AAAA,QACpB;AACA,eAAO,KAAK;AAAA,MACd;AAIA,WAAK,sCAAsC,SAAS,OAAO;AACzD,YAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,cAAI,KAAK,MAAM;AACf,cAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,gBAAI,KAAK,MAAM;AACf,gBAAI,MAAM,KAAK,KAAK,qBAAqB,KAAK,GAAG;AAC/C,oBAAM,eAAe,KAAK,KAAK,KAAK,IAAI,MAAM;AAAA,YAChD,OAAO;AACL,oBAAM,eAAe,KAAK,IAAI;AAAA,YAChC;AAAA,UACF,OAAO;AACL,kBAAM,eAAe;AAAA,UACvB;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,aAAa,EAAE,GAAG;AACpB,gBAAM,eAAe,KAAK;AAC1B,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,cAAM,eAAe;AACrB,eAAO;AAAA,MACT;AACA,eAAS,aAAa,IAAI;AACxB,eAAO,MAAM,MAAgB,MAAM;AAAA,MACrC;AAKA,WAAK,2BAA2B,SAAS,OAAO,QAAQ;AACtD,YAAIA,SAAQ,MAAM;AAClB,cAAM,eAAe;AACrB,iBAASP,KAAI,GAAGA,KAAI,QAAQ,EAAEA,IAAG;AAC/B,cAAI,KAAK,MAAM,QAAQ;AACvB,cAAI,CAAC,WAAW,EAAE,GAAG;AACnB,kBAAM,MAAMO;AACZ,mBAAO;AAAA,UACT;AACA,gBAAM,eAAe,KAAK,MAAM,eAAe,SAAS,EAAE;AAC1D,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO;AAAA,MACT;AAMA,UAAI,QAAQ,SAASsB,OAAM,GAAG;AAC5B,aAAK,OAAO,EAAE;AACd,aAAK,QAAQ,EAAE;AACf,aAAK,QAAQ,EAAE;AACf,aAAK,MAAM,EAAE;AACb,YAAI,EAAE,QAAQ,WACZ;AAAE,eAAK,MAAM,IAAI,eAAe,GAAG,EAAE,UAAU,EAAE,MAAM;AAAA,QAAG;AAC5D,YAAI,EAAE,QAAQ,QACZ;AAAE,eAAK,QAAQ,CAAC,EAAE,OAAO,EAAE,GAAG;AAAA,QAAG;AAAA,MACrC;AAIA,UAAI,KAAKlB,QAAO;AAIhB,SAAG,OAAO,SAAS,+BAA+B;AAChD,YAAI,CAAC,iCAAiC,KAAK,KAAK,WAAW,KAAK,aAC9D;AAAE,eAAK,iBAAiB,KAAK,OAAO,gCAAgC,KAAK,KAAK,OAAO;AAAA,QAAG;AAC1F,YAAI,KAAK,QAAQ,SACf;AAAE,eAAK,QAAQ,QAAQ,IAAI,MAAM,IAAI,CAAC;AAAA,QAAG;AAE3C,aAAK,aAAa,KAAK;AACvB,aAAK,eAAe,KAAK;AACzB,aAAK,gBAAgB,KAAK;AAC1B,aAAK,kBAAkB,KAAK;AAC5B,aAAK,UAAU;AAAA,MACjB;AAEA,SAAG,WAAW,WAAW;AACvB,aAAK,KAAK;AACV,eAAO,IAAI,MAAM,IAAI;AAAA,MACvB;AAGA,UAAI,OAAO,WAAW,aACpB;AAAE,WAAG,OAAO,QAAQ,IAAI,WAAW;AACjC,cAAI,WAAW;AAEf,iBAAO;AAAA,YACL,MAAM,WAAY;AAChB,kBAAI,QAAQ,SAAS,SAAS;AAC9B,qBAAO;AAAA,gBACL,MAAM,MAAM,SAAS,QAAQ;AAAA,gBAC7B,OAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MAAG;AAQL,SAAG,YAAY,WAAW;AACxB,YAAI,aAAa,KAAK,WAAW;AACjC,YAAI,CAAC,cAAc,CAAC,WAAW,eAAe;AAAE,eAAK,UAAU;AAAA,QAAG;AAElE,aAAK,QAAQ,KAAK;AAClB,YAAI,KAAK,QAAQ,WAAW;AAAE,eAAK,WAAW,KAAK,YAAY;AAAA,QAAG;AAClE,YAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAO,KAAK,YAAY,QAAQ,GAAG;AAAA,QAAE;AAE1E,YAAI,WAAW,UAAU;AAAE,iBAAO,WAAW,SAAS,IAAI;AAAA,QAAE,OACvD;AAAE,eAAK,UAAU,KAAK,kBAAkB,CAAC;AAAA,QAAG;AAAA,MACnD;AAEA,SAAG,YAAY,SAAS,MAAM;AAG5B,YAAI,kBAAkB,MAAM,KAAK,QAAQ,eAAe,CAAC,KAAK,SAAS,IACrE;AAAE,iBAAO,KAAK,SAAS;AAAA,QAAE;AAE3B,eAAO,KAAK,iBAAiB,IAAI;AAAA,MACnC;AAEA,SAAG,oBAAoB,WAAW;AAChC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AACzC,YAAI,QAAQ,SAAU,QAAQ,OAAQ;AAAE,iBAAO;AAAA,QAAK;AACpD,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,eAAO,QAAQ,SAAU,QAAQ,QAAS,QAAQ,QAAQ,MAAM,OAAO;AAAA,MACzE;AAEA,SAAG,mBAAmB,WAAW;AAC/B,YAAI,WAAW,KAAK,QAAQ,aAAa,KAAK,YAAY;AAC1D,YAAIJ,SAAQ,KAAK,KAAK,MAAM,KAAK,MAAM,QAAQ,MAAM,KAAK,OAAO,CAAC;AAClE,YAAI,QAAQ,IAAI;AAAE,eAAK,MAAM,KAAK,MAAM,GAAG,sBAAsB;AAAA,QAAG;AACpE,aAAK,MAAM,MAAM;AACjB,YAAI,KAAK,QAAQ,WAAW;AAC1B,mBAAS,YAAa,QAAS,MAAMA,SAAQ,YAAY,cAAc,KAAK,OAAO,KAAK,KAAK,GAAG,KAAK,MAAK;AACxG,cAAE,KAAK;AACP,kBAAM,KAAK,YAAY;AAAA,UACzB;AAAA,QACF;AACA,YAAI,KAAK,QAAQ,WACf;AAAE,eAAK,QAAQ;AAAA,YAAU;AAAA,YAAM,KAAK,MAAM,MAAMA,SAAQ,GAAG,GAAG;AAAA,YAAGA;AAAA,YAAO,KAAK;AAAA,YACtD;AAAA,YAAU,KAAK,YAAY;AAAA,UAAC;AAAA,QAAG;AAAA,MAC1D;AAEA,SAAG,kBAAkB,SAAS,WAAW;AACvC,YAAIA,SAAQ,KAAK;AACjB,YAAI,WAAW,KAAK,QAAQ,aAAa,KAAK,YAAY;AAC1D,YAAI,KAAK,KAAK,MAAM,WAAW,KAAK,OAAO,SAAS;AACpD,eAAO,KAAK,MAAM,KAAK,MAAM,UAAU,CAAC,UAAU,EAAE,GAAG;AACrD,eAAK,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AAAA,QACvC;AACA,YAAI,KAAK,QAAQ,WACf;AAAE,eAAK,QAAQ;AAAA,YAAU;AAAA,YAAO,KAAK,MAAM,MAAMA,SAAQ,WAAW,KAAK,GAAG;AAAA,YAAGA;AAAA,YAAO,KAAK;AAAA,YACpE;AAAA,YAAU,KAAK,YAAY;AAAA,UAAC;AAAA,QAAG;AAAA,MAC1D;AAKA,SAAG,YAAY,WAAW;AACxB;AAAM,iBAAO,KAAK,MAAM,KAAK,MAAM,QAAQ;AACzC,gBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,oBAAQ,IAAI;AAAA,cACZ,KAAK;AAAA,cAAI,KAAK;AACZ,kBAAE,KAAK;AACP;AAAA,cACF,KAAK;AACH,oBAAI,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,IAAI;AAC9C,oBAAE,KAAK;AAAA,gBACT;AAAA,cACF,KAAK;AAAA,cAAI,KAAK;AAAA,cAAM,KAAK;AACvB,kBAAE,KAAK;AACP,oBAAI,KAAK,QAAQ,WAAW;AAC1B,oBAAE,KAAK;AACP,uBAAK,YAAY,KAAK;AAAA,gBACxB;AACA;AAAA,cACF,KAAK;AACH,wBAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,GAAG;AAAA,kBAC7C,KAAK;AACH,yBAAK,iBAAiB;AACtB;AAAA,kBACF,KAAK;AACH,yBAAK,gBAAgB,CAAC;AACtB;AAAA,kBACF;AACE,0BAAM;AAAA,gBACR;AACA;AAAA,cACF;AACE,oBAAI,KAAK,KAAK,KAAK,MAAM,MAAM,QAAQ,mBAAmB,KAAK,OAAO,aAAa,EAAE,CAAC,GAAG;AACvF,oBAAE,KAAK;AAAA,gBACT,OAAO;AACL,wBAAM;AAAA,gBACR;AAAA,YACF;AAAA,UACF;AAAA,MACF;AAOA,SAAG,cAAc,SAAS,MAAM,KAAK;AACnC,aAAK,MAAM,KAAK;AAChB,YAAI,KAAK,QAAQ,WAAW;AAAE,eAAK,SAAS,KAAK,YAAY;AAAA,QAAG;AAChE,YAAI,WAAW,KAAK;AACpB,aAAK,OAAO;AACZ,aAAK,QAAQ;AAEb,aAAK,cAAc,QAAQ;AAAA,MAC7B;AAWA,SAAG,gBAAgB,WAAW;AAC5B,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,QAAQ,MAAM,QAAQ,IAAI;AAAE,iBAAO,KAAK,WAAW,IAAI;AAAA,QAAE;AAC7D,YAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,YAAI,KAAK,QAAQ,eAAe,KAAK,SAAS,MAAM,UAAU,IAAI;AAChE,eAAK,OAAO;AACZ,iBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,QAC1C,OAAO;AACL,YAAE,KAAK;AACP,iBAAO,KAAK,YAAY,QAAQ,GAAG;AAAA,QACrC;AAAA,MACF;AAEA,SAAG,kBAAkB,WAAW;AAC9B,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,KAAK,aAAa;AAAE,YAAE,KAAK;AAAK,iBAAO,KAAK,WAAW;AAAA,QAAE;AAC7D,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,QAAQ,OAAO,CAAC;AAAA,MACvC;AAEA,SAAG,4BAA4B,SAAS,MAAM;AAC5C,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,OAAO;AACX,YAAI,YAAY,SAAS,KAAK,QAAQ,OAAO,QAAQ;AAGrD,YAAI,KAAK,QAAQ,eAAe,KAAK,SAAS,MAAM,SAAS,IAAI;AAC/D,YAAE;AACF,sBAAY,QAAQ;AACpB,iBAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAAA,QAC3C;AAEA,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,OAAO,CAAC;AAAA,QAAE;AAClE,eAAO,KAAK,SAAS,WAAW,IAAI;AAAA,MACtC;AAEA,SAAG,qBAAqB,SAAS,MAAM;AACrC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,MAAM;AACjB,cAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,gBAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,gBAAI,UAAU,IAAI;AAAE,qBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,YAAE;AAAA,UAC9D;AACA,iBAAO,KAAK,SAAS,SAAS,MAAM,QAAQ,YAAY,QAAQ,YAAY,CAAC;AAAA,QAC/E;AACA,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,SAAS,MAAM,QAAQ,YAAY,QAAQ,YAAY,CAAC;AAAA,MAC/E;AAEA,SAAG,kBAAkB,WAAW;AAC9B,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,QAAQ,YAAY,CAAC;AAAA,MAC5C;AAEA,SAAG,qBAAqB,SAAS,MAAM;AACrC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,MAAM;AACjB,cAAI,SAAS,MAAM,CAAC,KAAK,YAAY,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,OACxE,KAAK,eAAe,KAAK,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,GAAG,CAAC,IAAI;AAE1F,iBAAK,gBAAgB,CAAC;AACtB,iBAAK,UAAU;AACf,mBAAO,KAAK,UAAU;AAAA,UACxB;AACA,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QACxC;AACA,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,QAAQ,SAAS,CAAC;AAAA,MACzC;AAEA,SAAG,kBAAkB,SAAS,MAAM;AAClC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,OAAO;AACX,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS,MAAM,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI;AACvE,cAAI,KAAK,MAAM,WAAW,KAAK,MAAM,IAAI,MAAM,IAAI;AAAE,mBAAO,KAAK,SAAS,QAAQ,QAAQ,OAAO,CAAC;AAAA,UAAE;AACpG,iBAAO,KAAK,SAAS,QAAQ,UAAU,IAAI;AAAA,QAC7C;AACA,YAAI,SAAS,MAAM,SAAS,MAAM,CAAC,KAAK,YAAY,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,MACxF,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,IAAI;AAE9C,eAAK,gBAAgB,CAAC;AACtB,eAAK,UAAU;AACf,iBAAO,KAAK,UAAU;AAAA,QACxB;AACA,YAAI,SAAS,IAAI;AAAE,iBAAO;AAAA,QAAG;AAC7B,eAAO,KAAK,SAAS,QAAQ,YAAY,IAAI;AAAA,MAC/C;AAEA,SAAG,oBAAoB,SAAS,MAAM;AACpC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC;AAAA,QAAE;AAC9G,YAAI,SAAS,MAAM,SAAS,MAAM,KAAK,QAAQ,eAAe,GAAG;AAC/D,eAAK,OAAO;AACZ,iBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,QACvC;AACA,eAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,KAAK,QAAQ,QAAQ,CAAC;AAAA,MACnE;AAEA,SAAG,qBAAqB,WAAW;AACjC,YAAIa,eAAc,KAAK,QAAQ;AAC/B,YAAIA,gBAAe,IAAI;AACrB,cAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,cAAI,SAAS,IAAI;AACf,gBAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,gBAAI,QAAQ,MAAM,QAAQ,IAAI;AAAE,qBAAO,KAAK,SAAS,QAAQ,aAAa,CAAC;AAAA,YAAE;AAAA,UAC/E;AACA,cAAI,SAAS,IAAI;AACf,gBAAIA,gBAAe,IAAI;AACrB,kBAAI,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAChD,kBAAI,YAAY,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,cAAE;AAAA,YAChE;AACA,mBAAO,KAAK,SAAS,QAAQ,UAAU,CAAC;AAAA,UAC1C;AAAA,QACF;AACA,eAAO,KAAK,SAAS,QAAQ,UAAU,CAAC;AAAA,MAC1C;AAEA,SAAG,uBAAuB,WAAW;AACnC,YAAIA,eAAc,KAAK,QAAQ;AAC/B,YAAI,OAAO;AACX,YAAIA,gBAAe,IAAI;AACrB,YAAE,KAAK;AACP,iBAAO,KAAK,kBAAkB;AAC9B,cAAI,kBAAkB,MAAM,IAAI,KAAK,SAAS,IAAc;AAC1D,mBAAO,KAAK,YAAY,QAAQ,WAAW,KAAK,UAAU,CAAC;AAAA,UAC7D;AAAA,QACF;AAEA,aAAK,MAAM,KAAK,KAAK,2BAA2B,kBAAkB,IAAI,IAAI,GAAG;AAAA,MAC/E;AAEA,SAAG,mBAAmB,SAAS,MAAM;AACnC,gBAAQ,MAAM;AAAA,UAGd,KAAK;AACH,mBAAO,KAAK,cAAc;AAAA,UAG5B,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC3D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC3D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,IAAI;AAAA,UACzD,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,UAC1D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,UAC7D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,UAC7D,KAAK;AAAK,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC5D,KAAK;AAAK,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC5D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,UAE1D,KAAK;AACH,gBAAI,KAAK,QAAQ,cAAc,GAAG;AAAE;AAAA,YAAM;AAC1C,cAAE,KAAK;AACP,mBAAO,KAAK,YAAY,QAAQ,SAAS;AAAA,UAE3C,KAAK;AACH,gBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,gBAAI,SAAS,OAAO,SAAS,IAAI;AAAE,qBAAO,KAAK,gBAAgB,EAAE;AAAA,YAAE;AACnE,gBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,kBAAI,SAAS,OAAO,SAAS,IAAI;AAAE,uBAAO,KAAK,gBAAgB,CAAC;AAAA,cAAE;AAClE,kBAAI,SAAS,MAAM,SAAS,IAAI;AAAE,uBAAO,KAAK,gBAAgB,CAAC;AAAA,cAAE;AAAA,YACnE;AAAA,UAIF,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAC3E,mBAAO,KAAK,WAAW,KAAK;AAAA,UAG9B,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,WAAW,IAAI;AAAA,UAM7B,KAAK;AACH,mBAAO,KAAK,gBAAgB;AAAA,UAE9B,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,0BAA0B,IAAI;AAAA,UAE5C,KAAK;AAAA,UAAK,KAAK;AACb,mBAAO,KAAK,mBAAmB,IAAI;AAAA,UAErC,KAAK;AACH,mBAAO,KAAK,gBAAgB;AAAA,UAE9B,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,mBAAmB,IAAI;AAAA,UAErC,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,gBAAgB,IAAI;AAAA,UAElC,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,kBAAkB,IAAI;AAAA,UAEpC,KAAK;AACH,mBAAO,KAAK,mBAAmB;AAAA,UAEjC,KAAK;AACH,mBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,UAExC,KAAK;AACH,mBAAO,KAAK,qBAAqB;AAAA,QACnC;AAEA,aAAK,MAAM,KAAK,KAAK,2BAA2B,kBAAkB,IAAI,IAAI,GAAG;AAAA,MAC/E;AAEA,SAAG,WAAW,SAAS,MAAM,MAAM;AACjC,YAAIU,OAAM,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,MAAM,IAAI;AACpD,aAAK,OAAO;AACZ,eAAO,KAAK,YAAY,MAAMA,IAAG;AAAA,MACnC;AAEA,SAAG,aAAa,WAAW;AACzB,YAAI,SAAS,SAASvB,SAAQ,KAAK;AACnC,mBAAS;AACP,cAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAK,MAAMA,QAAO,iCAAiC;AAAA,UAAG;AAC3F,cAAI,KAAK,KAAK,MAAM,OAAO,KAAK,GAAG;AACnC,cAAI,UAAU,KAAK,EAAE,GAAG;AAAE,iBAAK,MAAMA,QAAO,iCAAiC;AAAA,UAAG;AAChF,cAAI,CAAC,SAAS;AACZ,gBAAI,OAAO,KAAK;AAAE,wBAAU;AAAA,YAAM,WACzB,OAAO,OAAO,SAAS;AAAE,wBAAU;AAAA,YAAO,WAC1C,OAAO,OAAO,CAAC,SAAS;AAAE;AAAA,YAAM;AACzC,sBAAU,OAAO;AAAA,UACnB,OAAO;AAAE,sBAAU;AAAA,UAAO;AAC1B,YAAE,KAAK;AAAA,QACT;AACA,YAAI,UAAU,KAAK,MAAM,MAAMA,QAAO,KAAK,GAAG;AAC9C,UAAE,KAAK;AACP,YAAI,aAAa,KAAK;AACtB,YAAI,QAAQ,KAAK,UAAU;AAC3B,YAAI,KAAK,aAAa;AAAE,eAAK,WAAW,UAAU;AAAA,QAAG;AAGrD,YAAI,QAAQ,KAAK,gBAAgB,KAAK,cAAc,IAAI,sBAAsB,IAAI;AAClF,cAAM,MAAMA,QAAO,SAAS,KAAK;AACjC,aAAK,oBAAoB,KAAK;AAC9B,aAAK,sBAAsB,KAAK;AAGhC,YAAI,QAAQ;AACZ,YAAI;AACF,kBAAQ,IAAI,OAAO,SAAS,KAAK;AAAA,QACnC,SAAS,GAAP;AAAA,QAGF;AAEA,eAAO,KAAK,YAAY,QAAQ,QAAQ,EAAC,SAAkB,OAAc,MAAY,CAAC;AAAA,MACxF;AAMA,SAAG,UAAU,SAAS,OAAO,KAAK,gCAAgC;AAEhE,YAAI,kBAAkB,KAAK,QAAQ,eAAe,MAAM,QAAQ;AAKhE,YAAI,8BAA8B,kCAAkC,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM;AAExG,YAAIA,SAAQ,KAAK,KAAK,QAAQ,GAAG,WAAW;AAC5C,iBAASP,KAAI,GAAG,IAAI,OAAO,OAAO,WAAW,KAAKA,KAAI,GAAG,EAAEA,IAAG,EAAE,KAAK,KAAK;AACxE,cAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG,GAAG,MAAO;AAEnD,cAAI,mBAAmB,SAAS,IAAI;AAClC,gBAAI,6BAA6B;AAAE,mBAAK,iBAAiB,KAAK,KAAK,mEAAmE;AAAA,YAAG;AACzI,gBAAI,aAAa,IAAI;AAAE,mBAAK,iBAAiB,KAAK,KAAK,kDAAkD;AAAA,YAAG;AAC5G,gBAAIA,OAAM,GAAG;AAAE,mBAAK,iBAAiB,KAAK,KAAK,yDAAyD;AAAA,YAAG;AAC3G,uBAAW;AACX;AAAA,UACF;AAEA,cAAI,QAAQ,IAAI;AAAE,kBAAM,OAAO,KAAK;AAAA,UAAI,WAC/B,QAAQ,IAAI;AAAE,kBAAM,OAAO,KAAK;AAAA,UAAI,WACpC,QAAQ,MAAM,QAAQ,IAAI;AAAE,kBAAM,OAAO;AAAA,UAAI,OACjD;AAAE,kBAAM;AAAA,UAAU;AACvB,cAAI,OAAO,OAAO;AAAE;AAAA,UAAM;AAC1B,qBAAW;AACX,kBAAQ,QAAQ,QAAQ;AAAA,QAC1B;AAEA,YAAI,mBAAmB,aAAa,IAAI;AAAE,eAAK,iBAAiB,KAAK,MAAM,GAAG,wDAAwD;AAAA,QAAG;AACzI,YAAI,KAAK,QAAQO,UAAS,OAAO,QAAQ,KAAK,MAAMA,WAAU,KAAK;AAAE,iBAAO;AAAA,QAAK;AAEjF,eAAO;AAAA,MACT;AAEA,eAAS,eAAeuB,MAAK,6BAA6B;AACxD,YAAI,6BAA6B;AAC/B,iBAAO,SAASA,MAAK,CAAC;AAAA,QACxB;AAGA,eAAO,WAAWA,KAAI,QAAQ,MAAM,EAAE,CAAC;AAAA,MACzC;AAEA,eAAS,eAAeA,MAAK;AAC3B,YAAI,OAAO,WAAW,YAAY;AAChC,iBAAO;AAAA,QACT;AAGA,eAAO,OAAOA,KAAI,QAAQ,MAAM,EAAE,CAAC;AAAA,MACrC;AAEA,SAAG,kBAAkB,SAAS,OAAO;AACnC,YAAIvB,SAAQ,KAAK;AACjB,aAAK,OAAO;AACZ,YAAI,MAAM,KAAK,QAAQ,KAAK;AAC5B,YAAI,OAAO,MAAM;AAAE,eAAK,MAAM,KAAK,QAAQ,GAAG,8BAA8B,KAAK;AAAA,QAAG;AACpF,YAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,KAAK;AAC7E,gBAAM,eAAe,KAAK,MAAM,MAAMA,QAAO,KAAK,GAAG,CAAC;AACtD,YAAE,KAAK;AAAA,QACT,WAAW,kBAAkB,KAAK,kBAAkB,CAAC,GAAG;AAAE,eAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,QAAG;AACpH,eAAO,KAAK,YAAY,QAAQ,KAAK,GAAG;AAAA,MAC1C;AAIA,SAAG,aAAa,SAAS,eAAe;AACtC,YAAIA,SAAQ,KAAK;AACjB,YAAI,CAAC,iBAAiB,KAAK,QAAQ,IAAI,QAAW,IAAI,MAAM,MAAM;AAAE,eAAK,MAAMA,QAAO,gBAAgB;AAAA,QAAG;AACzG,YAAI,QAAQ,KAAK,MAAMA,UAAS,KAAK,KAAK,MAAM,WAAWA,MAAK,MAAM;AACtE,YAAI,SAAS,KAAK,QAAQ;AAAE,eAAK,MAAMA,QAAO,gBAAgB;AAAA,QAAG;AACjE,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AACzC,YAAI,CAAC,SAAS,CAAC,iBAAiB,KAAK,QAAQ,eAAe,MAAM,SAAS,KAAK;AAC9E,cAAI,QAAQ,eAAe,KAAK,MAAM,MAAMA,QAAO,KAAK,GAAG,CAAC;AAC5D,YAAE,KAAK;AACP,cAAI,kBAAkB,KAAK,kBAAkB,CAAC,GAAG;AAAE,iBAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,UAAG;AAC7G,iBAAO,KAAK,YAAY,QAAQ,KAAK,KAAK;AAAA,QAC5C;AACA,YAAI,SAAS,OAAO,KAAK,KAAK,MAAM,MAAMA,QAAO,KAAK,GAAG,CAAC,GAAG;AAAE,kBAAQ;AAAA,QAAO;AAC9E,YAAI,SAAS,MAAM,CAAC,OAAO;AACzB,YAAE,KAAK;AACP,eAAK,QAAQ,EAAE;AACf,iBAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AAAA,QACvC;AACA,aAAK,SAAS,MAAM,SAAS,QAAQ,CAAC,OAAO;AAC3C,iBAAO,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AACvC,cAAI,SAAS,MAAM,SAAS,IAAI;AAAE,cAAE,KAAK;AAAA,UAAK;AAC9C,cAAI,KAAK,QAAQ,EAAE,MAAM,MAAM;AAAE,iBAAK,MAAMA,QAAO,gBAAgB;AAAA,UAAG;AAAA,QACxE;AACA,YAAI,kBAAkB,KAAK,kBAAkB,CAAC,GAAG;AAAE,eAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,QAAG;AAE7G,YAAI,MAAM,eAAe,KAAK,MAAM,MAAMA,QAAO,KAAK,GAAG,GAAG,KAAK;AACjE,eAAO,KAAK,YAAY,QAAQ,KAAK,GAAG;AAAA,MAC1C;AAIA,SAAG,gBAAgB,WAAW;AAC5B,YAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG,GAAG;AAE1C,YAAI,OAAO,KAAK;AACd,cAAI,KAAK,QAAQ,cAAc,GAAG;AAAE,iBAAK,WAAW;AAAA,UAAG;AACvD,cAAI,UAAU,EAAE,KAAK;AACrB,iBAAO,KAAK,YAAY,KAAK,MAAM,QAAQ,KAAK,KAAK,GAAG,IAAI,KAAK,GAAG;AACpE,YAAE,KAAK;AACP,cAAI,OAAO,SAAU;AAAE,iBAAK,mBAAmB,SAAS,0BAA0B;AAAA,UAAG;AAAA,QACvF,OAAO;AACL,iBAAO,KAAK,YAAY,CAAC;AAAA,QAC3B;AACA,eAAO;AAAA,MACT;AAEA,SAAG,aAAa,SAAS,OAAO;AAC9B,YAAI,MAAM,IAAI,aAAa,EAAE,KAAK;AAClC,mBAAS;AACP,cAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,UAAG;AAC7F,cAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,cAAI,OAAO,OAAO;AAAE;AAAA,UAAM;AAC1B,cAAI,OAAO,IAAI;AACb,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,mBAAO,KAAK,gBAAgB,KAAK;AACjC,yBAAa,KAAK;AAAA,UACpB,WAAW,OAAO,QAAU,OAAO,MAAQ;AACzC,gBAAI,KAAK,QAAQ,cAAc,IAAI;AAAE,mBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,YAAG;AAC7F,cAAE,KAAK;AACP,gBAAI,KAAK,QAAQ,WAAW;AAC1B,mBAAK;AACL,mBAAK,YAAY,KAAK;AAAA,YACxB;AAAA,UACF,OAAO;AACL,gBAAI,UAAU,EAAE,GAAG;AAAE,mBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,YAAG;AAC7E,cAAE,KAAK;AAAA,UACT;AAAA,QACF;AACA,eAAO,KAAK,MAAM,MAAM,YAAY,KAAK,KAAK;AAC9C,eAAO,KAAK,YAAY,QAAQ,QAAQ,GAAG;AAAA,MAC7C;AAIA,UAAI,gCAAgC,CAAC;AAErC,SAAG,uBAAuB,WAAW;AACnC,aAAK,oBAAoB;AACzB,YAAI;AACF,eAAK,cAAc;AAAA,QACrB,SAAS,KAAP;AACA,cAAI,QAAQ,+BAA+B;AACzC,iBAAK,yBAAyB;AAAA,UAChC,OAAO;AACL,kBAAM;AAAA,UACR;AAAA,QACF;AAEA,aAAK,oBAAoB;AAAA,MAC3B;AAEA,SAAG,qBAAqB,SAASwB,WAAU,SAAS;AAClD,YAAI,KAAK,qBAAqB,KAAK,QAAQ,eAAe,GAAG;AAC3D,gBAAM;AAAA,QACR,OAAO;AACL,eAAK,MAAMA,WAAU,OAAO;AAAA,QAC9B;AAAA,MACF;AAEA,SAAG,gBAAgB,WAAW;AAC5B,YAAI,MAAM,IAAI,aAAa,KAAK;AAChC,mBAAS;AACP,cAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,UAAG;AACtF,cAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,cAAI,OAAO,MAAM,OAAO,MAAM,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK;AACzE,gBAAI,KAAK,QAAQ,KAAK,UAAU,KAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,QAAQ,kBAAkB;AACxG,kBAAI,OAAO,IAAI;AACb,qBAAK,OAAO;AACZ,uBAAO,KAAK,YAAY,QAAQ,YAAY;AAAA,cAC9C,OAAO;AACL,kBAAE,KAAK;AACP,uBAAO,KAAK,YAAY,QAAQ,SAAS;AAAA,cAC3C;AAAA,YACF;AACA,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,mBAAO,KAAK,YAAY,QAAQ,UAAU,GAAG;AAAA,UAC/C;AACA,cAAI,OAAO,IAAI;AACb,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,mBAAO,KAAK,gBAAgB,IAAI;AAChC,yBAAa,KAAK;AAAA,UACpB,WAAW,UAAU,EAAE,GAAG;AACxB,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,cAAE,KAAK;AACP,oBAAQ,IAAI;AAAA,cACZ,KAAK;AACH,oBAAI,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI;AAAE,oBAAE,KAAK;AAAA,gBAAK;AAAA,cAC5D,KAAK;AACH,uBAAO;AACP;AAAA,cACF;AACE,uBAAO,OAAO,aAAa,EAAE;AAC7B;AAAA,YACF;AACA,gBAAI,KAAK,QAAQ,WAAW;AAC1B,gBAAE,KAAK;AACP,mBAAK,YAAY,KAAK;AAAA,YACxB;AACA,yBAAa,KAAK;AAAA,UACpB,OAAO;AACL,cAAE,KAAK;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAGA,SAAG,2BAA2B,WAAW;AACvC,eAAO,KAAK,MAAM,KAAK,MAAM,QAAQ,KAAK,OAAO;AAC/C,kBAAQ,KAAK,MAAM,KAAK,GAAG,GAAG;AAAA,YAC9B,KAAK;AACH,gBAAE,KAAK;AACP;AAAA,YAEF,KAAK;AACH,kBAAI,KAAK,MAAM,KAAK,MAAM,CAAC,MAAM,KAAK;AACpC;AAAA,cACF;AAAA,YAGF,KAAK;AACH,qBAAO,KAAK,YAAY,QAAQ,iBAAiB,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG,CAAC;AAAA,UAGzF;AAAA,QACF;AACA,aAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,MAChD;AAIA,SAAG,kBAAkB,SAAS,YAAY;AACxC,YAAI,KAAK,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AACzC,UAAE,KAAK;AACP,gBAAQ,IAAI;AAAA,UACZ,KAAK;AAAK,mBAAO;AAAA,UACjB,KAAK;AAAK,mBAAO;AAAA,UACjB,KAAK;AAAK,mBAAO,OAAO,aAAa,KAAK,YAAY,CAAC,CAAC;AAAA,UACxD,KAAK;AAAK,mBAAO,kBAAkB,KAAK,cAAc,CAAC;AAAA,UACvD,KAAK;AAAK,mBAAO;AAAA,UACjB,KAAK;AAAI,mBAAO;AAAA,UAChB,KAAK;AAAK,mBAAO;AAAA,UACjB,KAAK;AAAK,mBAAO;AAAA,UACjB,KAAK;AAAI,gBAAI,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI;AAAE,gBAAE,KAAK;AAAA,YAAK;AAAA,UACnE,KAAK;AACH,gBAAI,KAAK,QAAQ,WAAW;AAAE,mBAAK,YAAY,KAAK;AAAK,gBAAE,KAAK;AAAA,YAAS;AACzE,mBAAO;AAAA,UACT,KAAK;AAAA,UACL,KAAK;AACH,gBAAI,KAAK,QAAQ;AACf,mBAAK;AAAA,gBACH,KAAK,MAAM;AAAA,gBACX;AAAA,cACF;AAAA,YACF;AACA,gBAAI,YAAY;AACd,kBAAI,UAAU,KAAK,MAAM;AAEzB,mBAAK;AAAA,gBACH;AAAA,gBACA;AAAA,cACF;AAEA,qBAAO;AAAA,YACT;AAAA,UACF;AACE,gBAAI,MAAM,MAAM,MAAM,IAAI;AACxB,kBAAI,WAAW,KAAK,MAAM,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE,MAAM,SAAS,EAAE,CAAC;AACpE,kBAAI,QAAQ,SAAS,UAAU,CAAC;AAChC,kBAAI,QAAQ,KAAK;AACf,2BAAW,SAAS,MAAM,GAAG,EAAE;AAC/B,wBAAQ,SAAS,UAAU,CAAC;AAAA,cAC9B;AACA,mBAAK,OAAO,SAAS,SAAS;AAC9B,mBAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACnC,mBAAK,aAAa,OAAO,OAAO,MAAM,OAAO,QAAQ,KAAK,UAAU,aAAa;AAC/E,qBAAK;AAAA,kBACH,KAAK,MAAM,IAAI,SAAS;AAAA,kBACxB,aACI,qCACA;AAAA,gBACN;AAAA,cACF;AACA,qBAAO,OAAO,aAAa,KAAK;AAAA,YAClC;AACA,gBAAI,UAAU,EAAE,GAAG;AAGjB,qBAAO;AAAA,YACT;AACA,mBAAO,OAAO,aAAa,EAAE;AAAA,QAC/B;AAAA,MACF;AAIA,SAAG,cAAc,SAAS,KAAK;AAC7B,YAAI,UAAU,KAAK;AACnB,YAAI,IAAI,KAAK,QAAQ,IAAI,GAAG;AAC5B,YAAI,MAAM,MAAM;AAAE,eAAK,mBAAmB,SAAS,+BAA+B;AAAA,QAAG;AACrF,eAAO;AAAA,MACT;AAQA,SAAG,YAAY,WAAW;AACxB,aAAK,cAAc;AACnB,YAAI,OAAO,IAAI,QAAQ,MAAM,aAAa,KAAK;AAC/C,YAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,eAAO,KAAK,MAAM,KAAK,MAAM,QAAQ;AACnC,cAAI,KAAK,KAAK,kBAAkB;AAChC,cAAI,iBAAiB,IAAI,MAAM,GAAG;AAChC,iBAAK,OAAO,MAAM,QAAS,IAAI;AAAA,UACjC,WAAW,OAAO,IAAI;AACpB,iBAAK,cAAc;AACnB,oBAAQ,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC7C,gBAAI,WAAW,KAAK;AACpB,gBAAI,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG,MAAM,KACxC;AAAE,mBAAK,mBAAmB,KAAK,KAAK,2CAA2C;AAAA,YAAG;AACpF,cAAE,KAAK;AACP,gBAAI,MAAM,KAAK,cAAc;AAC7B,gBAAI,EAAE,QAAQ,oBAAoB,kBAAkB,KAAK,MAAM,GAC7D;AAAE,mBAAK,mBAAmB,UAAU,wBAAwB;AAAA,YAAG;AACjE,oBAAQ,kBAAkB,GAAG;AAC7B,yBAAa,KAAK;AAAA,UACpB,OAAO;AACL;AAAA,UACF;AACA,kBAAQ;AAAA,QACV;AACA,eAAO,OAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAAA,MACrD;AAKA,SAAG,WAAW,WAAW;AACvB,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,OAAO,QAAQ;AACnB,YAAI,KAAK,SAAS,KAAK,IAAI,GAAG;AAC5B,iBAAO,SAAS,IAAI;AAAA,QACtB;AACA,eAAO,KAAK,YAAY,MAAM,IAAI;AAAA,MACpC;AAIA,UAAI,UAAU;AAEd,MAAApB,QAAO,QAAQ;AAAA,QACb,QAAQA;AAAA,QACR;AAAA,QACA,gBAAgBH;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,cAAc;AAAA,QACd;AAAA,QACA,aAAac;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AASA,eAASV,OAAM,OAAOT,UAAS;AAC7B,eAAOQ,QAAO,MAAM,OAAOR,QAAO;AAAA,MACpC;AAMA,eAAS,kBAAkB,OAAO,KAAKA,UAAS;AAC9C,eAAOQ,QAAO,kBAAkB,OAAO,KAAKR,QAAO;AAAA,MACrD;AAKA,eAAS,UAAU,OAAOA,UAAS;AACjC,eAAOQ,QAAO,UAAU,OAAOR,QAAO;AAAA,MACxC;AAEA,MAAAN,SAAQ,OAAO;AACf,MAAAA,SAAQ,SAASc;AACjB,MAAAd,SAAQ,WAAW;AACnB,MAAAA,SAAQ,iBAAiB;AACzB,MAAAA,SAAQ,aAAa;AACrB,MAAAA,SAAQ,QAAQ;AAChB,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,iBAAiBW;AACzB,MAAAX,SAAQ,cAAc;AACtB,MAAAA,SAAQ,mBAAmB;AAC3B,MAAAA,SAAQ,oBAAoB;AAC5B,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,eAAe;AACvB,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,aAAa;AACrB,MAAAA,SAAQ,qBAAqB;AAC7B,MAAAA,SAAQ,QAAQe;AAChB,MAAAf,SAAQ,oBAAoB;AAC5B,MAAAA,SAAQ,cAAcyB;AACtB,MAAAzB,SAAQ,WAAW;AACnB,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,UAAU;AAElB,aAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAAA,IAE9D,CAAE;AAAA;AAAA;;;ACp+KF;AAAA,oCAAAmC,UAAAC,SAAA;AAAA;AAEA,QAAM,gBAAgB;AAEtB,QAAM,YAAY;AAClB,QAAM,gBAAgB;AAGtB,QAAM,cAAc,oBAAI,QAAQ;AAGhC,aAAS,aAAa,OAAO;AAC3B,cAAQ,MAAM,OAAO,SAAS;AAC9B,UAAIC,YAAW,YAAY,IAAI,KAAK;AACpC,UAAI,CAACA,WAAU;AACb,cAAM,KAAK,MAAM;AACjB,cAAM,aAAa,MAAM;AACzB,cAAM,YAAY,MAAM;AACxB,cAAM,UAAU,IAAI,WAAW,QAAQ,KAAK;AAC5C,cAAM,UAAU,IAAI,WAAW,SAAS,KAAK;AAC7C,cAAM,UAAU,IAAI,WAAW,kBAAkB,MAAM,IAAI;AAC3D,cAAM,cAAc;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,cAAM,WAAW;AAAA,UACf,SAAS,IAAI,UAAU,SAAS;AAAA,UAChC,SAAS,IAAI,UAAU,WAAW,EAAC,YAAY,KAAI,CAAC;AAAA,UACpD,aAAa,IAAI,UAAU,eAAe,EAAC,YAAY,KAAI,CAAC;AAAA,UAC5D,WAAW,IAAI,UAAU,WAAW;AAAA,QACtC;AAEA,iBAAS,YAAY,gBAAgB,WAAW;AAC9C,eAAK,QAAQ,KAAK,OAAO;AACzB,eAAK,QAAQ,KAAK,OAAO;AACzB,eAAK,cAAc;AAAA,QACrB;AACA,iBAAS,UAAU,gBAAgB,SAAS,UAAU;AACpD,cAAI,MAAM,KAAK,QAAQ,IAAI;AAC3B,cAAI,QAAQ,WAAW,aAAa,GAAG,SAAS,QAAQ,SAAS;AAC/D,iBAAK,QAAQ,IAAI;AACjB,iBAAK,cAAc,KAAK,WAAW,MAAM;AAAA,UAC3C,OAAO;AACL,iBAAK,cAAc;AAAA,UACrB;AAAA,QACF;AAEA,QAAAA,YAAW,EAAE,aAA0B,SAAmB;AAC1D,oBAAY,IAAI,OAAOA,SAAQ;AAAA,MACjC;AAEA,aAAOA;AAAA,IACT;AAIA,aAAS,oBAAoB,QAAQ;AACnC,UAAI,CAAC;AACH,eAAO;AAET,UAAI,OAAO,SAAS;AAClB,eAAO,OAAO;AAEhB,UAAI,OAAO,SAAS;AAClB,eAAO,OAAO,UAAU,OAAO,MAAM,OAAO,KAAK;AAEnD,UAAI,OAAO,SAAS;AAClB,eAAO,oBAAoB,OAAO,MAAM,IAAI,MAC5C,oBAAoB,OAAO,QAAQ;AAAA,IACvC;AAEA,IAAAD,QAAO,UAAU,SAASE,UAAS;AACjC,MAAAA,WAAUA,YAAW,CAAC;AACtB,aAAO,SAASC,SAAQ;AACtB,eAAO,OAAO;AAAA,UACZ,iBAAiBD,SAAQ,oBAAoB;AAAA,UAC7C,wBAAwB,CAAC,CAACA,SAAQ;AAAA,QACpC,GAAGC,OAAM;AAAA,MACX;AAAA,IACF;AAIA,WAAO,eAAeH,QAAO,SAAS,YAAY;AAAA,MAChD,KAAK,SAAS,eAAe;AAC3B,eAAO,aAAa,eAAgB,EAAE;AAAA,MACxC;AAAA,MACA,cAAc;AAAA,MACd,YAAY;AAAA,IACd,CAAC;AAED,aAAS,OAAOE,UAASC,SAAQ;AAC/B,YAAM,QAAQA,QAAO,SAAS;AAC9B,YAAMF,YAAW,aAAa,KAAK;AACnC,YAAM,KAAK,MAAM;AACjB,YAAM,MAAMA,UAAS;AACrB,YAAM,cAAc,MAAM;AAC1B,YAAM,UAAUA,UAAS,YAAY;AACrC,YAAM,UAAUA,UAAS,YAAY;AACrC,YAAM,UAAUA,UAAS,YAAY;AACrC,YAAM,YAAY,MAAM;AACxB,YAAM,oBAAoB,MAAM;AAChC,YAAM,mBAAmB,MAAM;AAE/B,aAAO,cAAcE,QAAO;AAAA;AAAA,QAE1B,WAAW,WAAW;AACpB,iBAAOF;AAAA,QACT;AAAA;AAAA,QAGA,gBAAgB;AACd,cAAI,MAAM,IAAI,aAAa,KAAK;AAChC,qBAAS;AACP,gBAAI,KAAK,OAAO,KAAK,MAAM;AACzB,mBAAK,MAAM,KAAK,OAAO,2BAA2B;AACpD,gBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AAEvC,oBAAQ,IAAI;AAAA,cACZ,KAAK;AAAA,cACL,KAAK;AACH,oBAAI,KAAK,QAAQ,KAAK,OAAO;AAC3B,sBAAI,OAAO,MAAM,KAAK,aAAa;AACjC,sBAAE,KAAK;AACP,2BAAO,KAAK,YAAY,IAAI,WAAW;AAAA,kBACzC;AACA,yBAAO,KAAK,iBAAiB,EAAE;AAAA,gBACjC;AACA,uBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,uBAAO,KAAK,YAAY,IAAI,SAAS,GAAG;AAAA,cAE1C,KAAK;AACH,uBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,uBAAO,KAAK,eAAe;AAC3B,6BAAa,KAAK;AAClB;AAAA,cAEF,KAAK;AAAA,cACL,KAAK;AACH,qBAAK;AAAA,kBACH,KAAK;AAAA,kBACL,uBAAuB,KAAK,MAAM,KAAK,GAAG,IAAI,uBAC3C,OAAO,KAAK,SAAS,cAAc,aAAmB,KAAK,MAAM,KAAK,GAAG,IAAI;AAAA,gBAClF;AAAA,cAEF;AACE,oBAAI,UAAU,EAAE,GAAG;AACjB,yBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,yBAAO,KAAK,gBAAgB,IAAI;AAChC,+BAAa,KAAK;AAAA,gBACpB,OAAO;AACL,oBAAE,KAAK;AAAA,gBACT;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,gBAAgB,eAAe;AAC7B,cAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,cAAI;AACJ,YAAE,KAAK;AACP,cAAI,OAAO,MAAM,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI;AACvD,cAAE,KAAK;AACP,kBAAM,gBAAgB,OAAO;AAAA,UAC/B,OAAO;AACL,kBAAM,OAAO,aAAa,EAAE;AAAA,UAC9B;AACA,cAAI,KAAK,QAAQ,WAAW;AAC1B,cAAE,KAAK;AACP,iBAAK,YAAY,KAAK;AAAA,UACxB;AAEA,iBAAO;AAAA,QACT;AAAA,QAEA,eAAe,OAAO;AACpB,cAAI,MAAM,IAAI,aAAa,EAAE,KAAK;AAClC,qBAAS;AACP,gBAAI,KAAK,OAAO,KAAK,MAAM;AACzB,mBAAK,MAAM,KAAK,OAAO,8BAA8B;AACvD,gBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,gBAAI,OAAO;AAAO;AAClB,gBAAI,OAAO,IAAI;AACb,qBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,qBAAO,KAAK,eAAe;AAC3B,2BAAa,KAAK;AAAA,YACpB,WAAW,UAAU,EAAE,GAAG;AACxB,qBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,qBAAO,KAAK,gBAAgB,KAAK;AACjC,2BAAa,KAAK;AAAA,YACpB,OAAO;AACL,gBAAE,KAAK;AAAA,YACT;AAAA,UACF;AACA,iBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,KAAK;AAC9C,iBAAO,KAAK,YAAY,GAAG,QAAQ,GAAG;AAAA,QACxC;AAAA,QAEA,iBAAiB;AACf,cAAIG,OAAM,IAAI,QAAQ,GAAG;AACzB,cAAI,KAAK,KAAK,MAAM,KAAK,GAAG;AAC5B,cAAI,OAAO;AACT,iBAAK,MAAM,KAAK,KAAK,qCAAqC;AAC5D,cAAI,WAAW,EAAE,KAAK;AACtB,iBAAO,KAAK,MAAM,KAAK,MAAM,UAAU,UAAU,IAAI;AACnD,iBAAK,KAAK,MAAM,KAAK,KAAK;AAC1B,gBAAI,OAAO,KAAK;AACd,kBAAIA,KAAI,CAAC,MAAM,KAAK;AAClB,oBAAIA,KAAI,CAAC,MAAM,KAAK;AAClB,kBAAAA,OAAMA,KAAI,OAAO,CAAC;AAClB,sBAAI,UAAU,KAAKA,IAAG;AACpB,6BAAS,OAAO,aAAa,SAASA,MAAK,EAAE,CAAC;AAAA,gBAClD,OAAO;AACL,kBAAAA,OAAMA,KAAI,OAAO,CAAC;AAClB,sBAAI,cAAc,KAAKA,IAAG;AACxB,6BAAS,OAAO,aAAa,SAASA,MAAK,EAAE,CAAC;AAAA,gBAClD;AAAA,cACF,OAAO;AACL,yBAAS,cAAcA,IAAG;AAAA,cAC5B;AACA;AAAA,YACF;AACA,YAAAA,QAAO;AAAA,UACT;AACA,cAAI,CAAC,QAAQ;AACX,iBAAK,MAAM;AACX,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,eAAe;AACb,cAAI,IAAIC,SAAQ,KAAK;AACrB,aAAG;AACD,iBAAK,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AAAA,UACvC,SAAS,iBAAiB,EAAE,KAAK,OAAO;AACxC,iBAAO,KAAK,YAAY,IAAI,SAAS,KAAK,MAAM,MAAMA,QAAO,KAAK,GAAG,CAAC;AAAA,QACxE;AAAA;AAAA,QAIA,sBAAsB;AACpB,cAAI,OAAO,KAAK,UAAU;AAC1B,cAAI,KAAK,SAAS,IAAI;AACpB,iBAAK,OAAO,KAAK;AAAA,mBACV,KAAK,KAAK;AACjB,iBAAK,OAAO,KAAK,KAAK;AAAA;AAEtB,iBAAK,WAAW;AAClB,eAAK,KAAK;AACV,iBAAO,KAAK,WAAW,MAAM,eAAe;AAAA,QAC9C;AAAA;AAAA,QAIA,0BAA0B;AACxB,cAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,cAAIC,QAAO,KAAK,oBAAoB;AACpC,cAAI,CAACJ,SAAQ,mBAAmB,CAAC,KAAK,IAAI,GAAG,KAAK;AAAG,mBAAOI;AAC5D,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,YAAYA;AACjB,eAAK,OAAO,KAAK,oBAAoB;AACrC,iBAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,QAClD;AAAA;AAAA;AAAA,QAKA,uBAAuB;AACrB,cAAI,KAAK,SAAS,IAAI;AAAW,mBAAO;AACxC,cAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,cAAI,OAAO,KAAK,wBAAwB;AACxC,cAAI,KAAK,SAAS,GAAG,OAAO,KAAK,SAAS,uBAAuB,CAACJ,SAAQ,wBAAwB;AAChG,iBAAK,WAAW;AAAA,UAClB;AACA,iBAAO,KAAK,IAAI,GAAG,GAAG,GAAG;AACvB,gBAAI,UAAU,KAAK,YAAY,UAAU,QAAQ;AACjD,oBAAQ,SAAS;AACjB,oBAAQ,WAAW,KAAK,oBAAoB;AAC5C,mBAAO,KAAK,WAAW,SAAS,qBAAqB;AAAA,UACvD;AACA,iBAAO;AAAA,QACT;AAAA;AAAA,QAIA,0BAA0B;AACxB,kBAAQ,KAAK,MAAM;AAAA,YACnB,KAAK,GAAG;AACN,kBAAI,OAAO,KAAK,6BAA6B;AAC7C,kBAAI,KAAK,WAAW,SAAS;AAC3B,qBAAK,MAAM,KAAK,OAAO,6DAA6D;AACtF,qBAAO;AAAA,YAET,KAAK,IAAI;AAAA,YACT,KAAK,GAAG;AACN,qBAAO,KAAK,cAAc;AAAA,YAE5B;AACE,mBAAK,MAAM,KAAK,OAAO,+DAA+D;AAAA,UACxF;AAAA,QACF;AAAA;AAAA;AAAA;AAAA,QAMA,2BAA2B;AACzB,cAAI,OAAO,KAAK,YAAY,KAAK,YAAY,KAAK,aAAa;AAC/D,iBAAO,KAAK,aAAa,MAAM,sBAAsB,KAAK,OAAO,KAAK,QAAQ;AAAA,QAChF;AAAA;AAAA,QAIA,+BAA+B;AAC7B,cAAI,OAAO,KAAK,UAAU;AAC1B,eAAK,KAAK;AACV,eAAK,aAAa,KAAK,SAAS,GAAG,SAC/B,KAAK,yBAAyB,IAC9B,KAAK,gBAAgB;AACzB,eAAK,OAAO,GAAG,MAAM;AACrB,iBAAO,KAAK,WAAW,MAAM,wBAAwB;AAAA,QACvD;AAAA;AAAA,QAIA,qBAAqB;AACnB,cAAI,OAAO,KAAK,UAAU;AAC1B,cAAI,KAAK,IAAI,GAAG,MAAM,GAAG;AACvB,iBAAK,OAAO,GAAG,QAAQ;AACvB,iBAAK,WAAW,KAAK,iBAAiB;AACtC,iBAAK,OAAO,GAAG,MAAM;AACrB,mBAAO,KAAK,WAAW,MAAM,oBAAoB;AAAA,UACnD;AACA,eAAK,OAAO,KAAK,wBAAwB;AACzC,eAAK,QAAQ,KAAK,IAAI,GAAG,EAAE,IAAI,KAAK,wBAAwB,IAAI;AAChE,iBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,QAC7C;AAAA;AAAA,QAIA,0BAA0B,UAAU,UAAU;AAC5C,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,aAAa,CAAC;AACnB,cAAI,WAAW,KAAK,qBAAqB;AACzC,cAAI;AAAU,iBAAK,OAAO;AAC1B,iBAAO,KAAK,SAAS,GAAG,SAAS,KAAK,SAAS,IAAI;AACjD,iBAAK,WAAW,KAAK,KAAK,mBAAmB,CAAC;AAChD,eAAK,cAAc,KAAK,IAAI,GAAG,KAAK;AACpC,eAAK,OAAO,IAAI,SAAS;AACzB,iBAAO,KAAK,WAAW,MAAM,WAAW,sBAAsB,oBAAoB;AAAA,QACpF;AAAA;AAAA,QAIA,0BAA0B,UAAU,UAAU;AAC5C,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,cAAI,WAAW,KAAK,qBAAqB;AACzC,cAAI;AAAU,iBAAK,OAAO;AAC1B,eAAK,OAAO,IAAI,SAAS;AACzB,iBAAO,KAAK,WAAW,MAAM,WAAW,sBAAsB,oBAAoB;AAAA,QACpF;AAAA;AAAA;AAAA,QAKA,mBAAmB,UAAU,UAAU;AACrC,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,cAAI,WAAW,CAAC;AAChB,cAAI,iBAAiB,KAAK,0BAA0B,UAAU,QAAQ;AACtE,cAAI,iBAAiB;AAErB,cAAI,CAAC,eAAe,aAAa;AAC/B;AAAU,yBAAS;AACjB,wBAAQ,KAAK,MAAM;AAAA,kBACnB,KAAK,IAAI;AACP,+BAAW,KAAK;AAAO,+BAAW,KAAK;AACvC,yBAAK,KAAK;AACV,wBAAI,KAAK,IAAI,GAAG,KAAK,GAAG;AACtB,uCAAiB,KAAK,0BAA0B,UAAU,QAAQ;AAClE,4BAAM;AAAA,oBACR;AACA,6BAAS,KAAK,KAAK,mBAAmB,UAAU,QAAQ,CAAC;AACzD;AAAA,kBAEF,KAAK,IAAI;AACP,6BAAS,KAAK,KAAK,cAAc,CAAC;AAClC;AAAA,kBAEF,KAAK,GAAG;AACN,6BAAS,KAAK,KAAK,6BAA6B,CAAC;AACjD;AAAA,kBAEF;AACE,yBAAK,WAAW;AAAA,gBAClB;AAAA,cACF;AACA,gBAAI,oBAAoB,eAAe,IAAI,MAAM,oBAAoB,eAAe,IAAI,GAAG;AACzF,mBAAK;AAAA,gBACH,eAAe;AAAA,gBACf,iDAAiD,oBAAoB,eAAe,IAAI,IAAI;AAAA,cAAG;AAAA,YACnG;AAAA,UACF;AACA,cAAI,oBAAoB,eAAe,OAAO,YAAY;AAE1D,eAAK,YAAY,iBAAiB,IAAI;AACtC,eAAK,YAAY,iBAAiB,IAAI;AACtC,eAAK,WAAW;AAChB,cAAI,KAAK,SAAS,GAAG,cAAc,KAAK,UAAU,KAAK;AACrD,iBAAK,MAAM,KAAK,OAAO,2DAA2D;AAAA,UACpF;AACA,iBAAO,KAAK,WAAW,MAAM,QAAQ,iBAAiB;AAAA,QACxD;AAAA;AAAA,QAIA,gBAAgB;AACd,cAAI,OAAO,KAAK,aAAa,KAAK,KAAK;AACvC,eAAK,OAAO;AACZ,iBAAO;AAAA,QACT;AAAA;AAAA,QAIA,mBAAmB;AACjB,cAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,eAAK,KAAK;AACV,iBAAO,KAAK,mBAAmB,UAAU,QAAQ;AAAA,QACnD;AAAA,QAEA,cAAc,wBAAwB;AACpC,cAAI,KAAK,SAAS,IAAI;AACpB,mBAAO,KAAK,cAAc;AAAA,mBACnB,KAAK,SAAS,IAAI;AACzB,mBAAO,KAAK,iBAAiB;AAAA;AAE7B,mBAAO,MAAM,cAAc,sBAAsB;AAAA,QACrD;AAAA,QAEA,UAAU,MAAM;AACd,cAAI,UAAU,KAAK,WAAW;AAE9B,cAAI,YAAY;AAAS,mBAAO,KAAK,cAAc;AAEnD,cAAI,YAAY,WAAW,YAAY,SAAS;AAC9C,gBAAI,kBAAkB,IAAI;AAAG,qBAAO,KAAK,aAAa;AAEtD,gBAAI,QAAQ,IAAI;AACd,gBAAE,KAAK;AACP,qBAAO,KAAK,YAAY,IAAI,SAAS;AAAA,YACvC;AAEA,iBAAK,SAAS,MAAM,SAAS,OAAO,WAAW;AAC7C,qBAAO,KAAK,eAAe,IAAI;AAAA,UACnC;AAEA,cAAI,SAAS,MAAM,KAAK,eAAe,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,IAAI;AACjF,cAAE,KAAK;AACP,mBAAO,KAAK,YAAY,IAAI,WAAW;AAAA,UACzC;AACA,iBAAO,MAAM,UAAU,IAAI;AAAA,QAC7B;AAAA,QAEA,cAAc,UAAU;AACtB,cAAI,KAAK,QAAQ,GAAG,QAAQ;AAC1B,gBAAI,aAAa,KAAK,WAAW;AACjC,gBAAI,cAAc;AAAS,mBAAK,QAAQ,KAAK,YAAY,MAAM;AAAA,qBACtD,cAAc;AAAS,mBAAK,QAAQ,KAAK,YAAY,MAAM;AAAA;AAC/D,oBAAM,cAAc,QAAQ;AACjC,iBAAK,cAAc;AAAA,UACrB,WAAW,KAAK,SAAS,GAAG,SAAS,aAAa,IAAI,aAAa;AACjE,iBAAK,QAAQ,UAAU;AACvB,iBAAK,QAAQ,KAAK,OAAO;AACzB,iBAAK,cAAc;AAAA,UACrB,OAAO;AACL,mBAAO,MAAM,cAAc,QAAQ;AAAA,UACrC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACveA;AAAA,8CAAAK,UAAAC,SAAA;AAEA,QAAI,gBAAgB;AAEpB,QAAI,gBAAgB;AACpB,QAAI,mBAAmB;AAGvB,QAAI,iBAAiB;AACrB,QAAI,cAAc;AAClB,QAAI,cAAc;AAClB,QAAI,kBAAkB;AAGtB,QAAI,aAAa;AAGjB,QAAI,UAAU;AACd,QAAI,gBAAgB;AACpB,QAAI,WAAW;AACf,QAAI,eAAe;AAGnB,QAAI,eAAe;AACnB,QAAI,mBAAmB;AASvB,IAAAA,QAAO,UAAU,SAAS,OAAOC,UAAS;AACxC,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,UAAU,iCAAiC;AAAA,MACvD;AAEA,UAAI,CAAC;AAAO,eAAO,CAAC;AAEpB,MAAAA,WAAUA,YAAW,CAAC;AAKtB,UAAI,SAAS;AACb,UAAI,SAAS;AAOb,eAAS,eAAeC,MAAK;AAC3B,YAAI,QAAQA,KAAI,MAAM,aAAa;AACnC,YAAI;AAAO,oBAAU,MAAM;AAC3B,YAAI,IAAIA,KAAI,YAAY,OAAO;AAC/B,iBAAS,CAAC,IAAIA,KAAI,SAAS,IAAI,SAASA,KAAI;AAAA,MAC9C;AAOA,eAASC,YAAW;AAClB,YAAIC,SAAQ,EAAE,MAAM,QAAQ,OAAe;AAC3C,eAAO,SAAS,MAAM;AACpB,eAAK,WAAW,IAAI,SAASA,MAAK;AAClC,UAAAC,YAAW;AACX,iBAAO;AAAA,QACT;AAAA,MACF;AAUA,eAAS,SAASD,QAAO;AACvB,aAAK,QAAQA;AACb,aAAK,MAAM,EAAE,MAAM,QAAQ,OAAe;AAC1C,aAAK,SAASH,SAAQ;AAAA,MACxB;AAKA,eAAS,UAAU,UAAU;AAE7B,UAAI,aAAa,CAAC;AAQlB,eAAS,MAAM,KAAK;AAClB,YAAI,MAAM,IAAI;AAAA,UACZA,SAAQ,SAAS,MAAM,SAAS,MAAM,SAAS,OAAO;AAAA,QACxD;AACA,YAAI,SAAS;AACb,YAAI,WAAWA,SAAQ;AACvB,YAAI,OAAO;AACX,YAAI,SAAS;AACb,YAAI,SAAS;AAEb,YAAIA,SAAQ,QAAQ;AAClB,qBAAW,KAAK,GAAG;AAAA,QACrB,OAAO;AACL,gBAAM;AAAA,QACR;AAAA,MACF;AAQA,eAAS,MAAM,IAAI;AACjB,YAAI,IAAI,GAAG,KAAK,KAAK;AACrB,YAAI,CAAC;AAAG;AACR,YAAIC,OAAM,EAAE,CAAC;AACb,uBAAeA,IAAG;AAClB,gBAAQ,MAAM,MAAMA,KAAI,MAAM;AAC9B,eAAO;AAAA,MACT;AAKA,eAASG,cAAa;AACpB,cAAM,gBAAgB;AAAA,MACxB;AAQA,eAAS,SAAS,OAAO;AACvB,YAAI;AACJ,gBAAQ,SAAS,CAAC;AAClB,eAAQ,IAAIC,SAAQ,GAAI;AACtB,cAAI,MAAM,OAAO;AACf,kBAAM,KAAK,CAAC;AAAA,UACd;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAQA,eAASA,WAAU;AACjB,YAAI,MAAMH,UAAS;AACnB,YAAI,iBAAiB,MAAM,OAAO,CAAC,KAAK,YAAY,MAAM,OAAO,CAAC;AAAG;AAErE,YAAI,IAAI;AACR,eACE,gBAAgB,MAAM,OAAO,CAAC,MAC7B,YAAY,MAAM,OAAO,CAAC,KAAK,iBAAiB,MAAM,OAAO,IAAI,CAAC,IACnE;AACA,YAAE;AAAA,QACJ;AACA,aAAK;AAEL,YAAI,iBAAiB,MAAM,OAAO,IAAI,CAAC,GAAG;AACxC,iBAAO,MAAM,wBAAwB;AAAA,QACvC;AAEA,YAAID,OAAM,MAAM,MAAM,GAAG,IAAI,CAAC;AAC9B,kBAAU;AACV,uBAAeA,IAAG;AAClB,gBAAQ,MAAM,MAAM,CAAC;AACrB,kBAAU;AAEV,eAAO,IAAI;AAAA,UACT,MAAM;AAAA,UACN,SAASA;AAAA,QACX,CAAC;AAAA,MACH;AAQA,eAAS,cAAc;AACrB,YAAI,MAAMC,UAAS;AAGnB,YAAI,OAAO,MAAM,cAAc;AAC/B,YAAI,CAAC;AAAM;AACX,QAAAG,SAAQ;AAGR,YAAI,CAAC,MAAM,WAAW;AAAG,iBAAO,MAAM,sBAAsB;AAG5D,YAAI,MAAM,MAAM,WAAW;AAE3B,YAAI,MAAM,IAAI;AAAA,UACZ,MAAM;AAAA,UACN,UAAU,KAAK,KAAK,CAAC,EAAE,QAAQ,eAAe,YAAY,CAAC;AAAA,UAC3D,OAAO,MACH,KAAK,IAAI,CAAC,EAAE,QAAQ,eAAe,YAAY,CAAC,IAChD;AAAA,QACN,CAAC;AAGD,cAAM,eAAe;AAErB,eAAO;AAAA,MACT;AAOA,eAAS,eAAe;AACtB,YAAI,QAAQ,CAAC;AAEb,iBAAS,KAAK;AAGd,YAAI;AACJ,eAAQ,OAAO,YAAY,GAAI;AAC7B,cAAI,SAAS,OAAO;AAClB,kBAAM,KAAK,IAAI;AACf,qBAAS,KAAK;AAAA,UAChB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,MAAAD,YAAW;AACX,aAAO,aAAa;AAAA,IACtB;AAQA,aAAS,KAAKH,MAAK;AACjB,aAAOA,OAAMA,KAAI,QAAQ,YAAY,YAAY,IAAI;AAAA,IACvD;AAAA;AAAA;;;ACpQA;AAAA,0CAAAK,UAAAC,SAAA;AAAA,QAAIC,SAAQ;AAaZ,aAASC,eAAc,OAAO,UAAU;AACtC,UAAI,SAAS;AACb,UAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,eAAO;AAAA,MACT;AAEA,UAAI;AACJ,UAAI,eAAeD,OAAM,KAAK;AAC9B,UAAI,cAAc,OAAO,aAAa;AACtC,UAAI;AACJ,UAAI;AAEJ,eAAS,IAAI,GAAG,MAAM,aAAa,QAAQ,IAAI,KAAK,KAAK;AACvD,sBAAc,aAAa,CAAC;AAC5B,mBAAW,YAAY;AACvB,gBAAQ,YAAY;AAEpB,YAAI,aAAa;AACf,mBAAS,UAAU,OAAO,WAAW;AAAA,QACvC,WAAW,OAAO;AAChB,qBAAW,SAAS,CAAC;AACrB,iBAAO,QAAQ,IAAI;AAAA,QACrB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAUE;AACjB,IAAAF,QAAO,QAAQ,UAAUE;AAAA;AAAA;;;AC1CzB;AAAA,8DAAAC,UAAAC,SAAA;AAAA,IAAAA,QAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA;AAAA;;;ACTA,IAAAC,+BAAA;AAAA,8CAAAC,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACDjB;AAAA,sEAAAC,UAAA;AAOA,QAAM,eAAe,mEAAmE,MAAM,EAAE;AAKhG,IAAAA,SAAQ,SAAS,SAAS,QAAQ;AAChC,UAAI,KAAK,UAAU,SAAS,aAAa,QAAQ;AAC/C,eAAO,aAAa,MAAM;AAAA,MAC5B;AACA,YAAM,IAAI,UAAU,+BAA+B,MAAM;AAAA,IAC3D;AAAA;AAAA;;;ACjBA;AAAA,0EAAAC,UAAA;AAqCA,QAAM,SAAS;AAcf,QAAM,iBAAiB;AAGvB,QAAM,WAAW,KAAK;AAGtB,QAAM,gBAAgB,WAAW;AAGjC,QAAM,uBAAuB;AAQ7B,aAAS,YAAY,QAAQ;AAC3B,aAAO,SAAS,KACV,CAAC,UAAW,KAAK,KAClB,UAAU,KAAK;AAAA,IACtB;AAoBA,IAAAA,SAAQ,SAAS,SAAS,iBAAiB,QAAQ;AACjD,UAAI,UAAU;AACd,UAAI;AAEJ,UAAI,MAAM,YAAY,MAAM;AAE5B,SAAG;AACD,gBAAQ,MAAM;AACd,iBAAS;AACT,YAAI,MAAM,GAAG;AAGX,mBAAS;AAAA,QACX;AACA,mBAAW,OAAO,OAAO,KAAK;AAAA,MAChC,SAAS,MAAM;AAEf,aAAO;AAAA,IACT;AAAA;AAAA;;;AC9GA;AAAA,oEAAAC,UAAA;AAiBA,aAAS,OAAO,OAAO,OAAO,eAAe;AAC3C,UAAI,SAAS,OAAO;AAClB,eAAO,MAAM,KAAK;AAAA,MACpB,WAAW,UAAU,WAAW,GAAG;AACjC,eAAO;AAAA,MACT;AACE,YAAM,IAAI,MAAM,MAAM,QAAQ,2BAA2B;AAAA,IAE7D;AACA,IAAAA,SAAQ,SAAS;AAEjB,QAAM,YAAY;AAClB,QAAM,gBAAgB;AAEtB,aAAS,SAAS,MAAM;AACtB,YAAM,QAAQ,KAAK,MAAM,SAAS;AAClC,UAAI,CAAC,OAAO;AACV,eAAO;AAAA,MACT;AACA,aAAO;AAAA,QACL,QAAQ,MAAM,CAAC;AAAA,QACf,MAAM,MAAM,CAAC;AAAA,QACb,MAAM,MAAM,CAAC;AAAA,QACb,MAAM,MAAM,CAAC;AAAA,QACb,MAAM,MAAM,CAAC;AAAA,MACf;AAAA,IACF;AACA,IAAAA,SAAQ,WAAW;AAEnB,aAAS,YAAY,YAAY;AAC/B,UAAI,MAAM;AACV,UAAI,WAAW,QAAQ;AACrB,eAAO,WAAW,SAAS;AAAA,MAC7B;AACA,aAAO;AACP,UAAI,WAAW,MAAM;AACnB,eAAO,WAAW,OAAO;AAAA,MAC3B;AACA,UAAI,WAAW,MAAM;AACnB,eAAO,WAAW;AAAA,MACpB;AACA,UAAI,WAAW,MAAM;AACnB,eAAO,MAAM,WAAW;AAAA,MAC1B;AACA,UAAI,WAAW,MAAM;AACnB,eAAO,WAAW;AAAA,MACpB;AACA,aAAO;AAAA,IACT;AACA,IAAAA,SAAQ,cAAc;AAEtB,QAAM,oBAAoB;AAS1B,aAAS,WAAW,GAAG;AACrB,YAAM,QAAQ,CAAC;AAEf,aAAO,SAAS,OAAO;AACrB,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAI,MAAM,CAAC,EAAE,UAAU,OAAO;AAC5B,kBAAM,OAAO,MAAM,CAAC;AACpB,kBAAM,CAAC,IAAI,MAAM,CAAC;AAClB,kBAAM,CAAC,IAAI;AACX,mBAAO,MAAM,CAAC,EAAE;AAAA,UAClB;AAAA,QACF;AAEA,cAAM,SAAS,EAAE,KAAK;AAEtB,cAAM,QAAQ;AAAA,UACZ;AAAA,UACA;AAAA,QACF,CAAC;AAED,YAAI,MAAM,SAAS,mBAAmB;AACpC,gBAAM,IAAI;AAAA,QACZ;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAaA,QAAM,YAAY,WAAW,SAASC,WAAU,OAAO;AACrD,UAAI,OAAO;AACX,YAAM,MAAM,SAAS,KAAK;AAC1B,UAAI,KAAK;AACP,YAAI,CAAC,IAAI,MAAM;AACb,iBAAO;AAAA,QACT;AACA,eAAO,IAAI;AAAA,MACb;AACA,YAAMC,cAAaF,SAAQ,WAAW,IAAI;AAI1C,YAAM,QAAQ,CAAC;AACf,UAAIG,SAAQ;AACZ,UAAI,IAAI;AACR,aAAO,MAAM;AACX,QAAAA,SAAQ;AACR,YAAI,KAAK,QAAQ,KAAKA,MAAK;AAC3B,YAAI,MAAM,IAAI;AACZ,gBAAM,KAAK,KAAK,MAAMA,MAAK,CAAC;AAC5B;AAAA,QACF,OAAO;AACL,gBAAM,KAAK,KAAK,MAAMA,QAAO,CAAC,CAAC;AAC/B,iBAAO,IAAI,KAAK,UAAU,KAAK,CAAC,MAAM,KAAK;AACzC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,UAAI,KAAK;AACT,WAAK,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACtC,cAAM,OAAO,MAAM,CAAC;AACpB,YAAI,SAAS,KAAK;AAChB,gBAAM,OAAO,GAAG,CAAC;AAAA,QACnB,WAAW,SAAS,MAAM;AACxB;AAAA,QACF,WAAW,KAAK,GAAG;AACjB,cAAI,SAAS,IAAI;AAIf,kBAAM,OAAO,IAAI,GAAG,EAAE;AACtB,iBAAK;AAAA,UACP,OAAO;AACL,kBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO,MAAM,KAAK,GAAG;AAErB,UAAI,SAAS,IAAI;AACf,eAAOD,cAAa,MAAM;AAAA,MAC5B;AAEA,UAAI,KAAK;AACP,YAAI,OAAO;AACX,eAAO,YAAY,GAAG;AAAA,MACxB;AACA,aAAO;AAAA,IACT,CAAC;AACD,IAAAF,SAAQ,YAAY;AAkBpB,aAAS,KAAK,OAAO,OAAO;AAC1B,UAAI,UAAU,IAAI;AAChB,gBAAQ;AAAA,MACV;AACA,UAAI,UAAU,IAAI;AAChB,gBAAQ;AAAA,MACV;AACA,YAAM,WAAW,SAAS,KAAK;AAC/B,YAAM,WAAW,SAAS,KAAK;AAC/B,UAAI,UAAU;AACZ,gBAAQ,SAAS,QAAQ;AAAA,MAC3B;AAGA,UAAI,YAAY,CAAC,SAAS,QAAQ;AAChC,YAAI,UAAU;AACZ,mBAAS,SAAS,SAAS;AAAA,QAC7B;AACA,eAAO,YAAY,QAAQ;AAAA,MAC7B;AAEA,UAAI,YAAY,MAAM,MAAM,aAAa,GAAG;AAC1C,eAAO;AAAA,MACT;AAGA,UAAI,YAAY,CAAC,SAAS,QAAQ,CAAC,SAAS,MAAM;AAChD,iBAAS,OAAO;AAChB,eAAO,YAAY,QAAQ;AAAA,MAC7B;AAEA,YAAM,SAAS,MAAM,OAAO,CAAC,MAAM,MAC/B,QACA,UAAU,MAAM,QAAQ,QAAQ,EAAE,IAAI,MAAM,KAAK;AAErD,UAAI,UAAU;AACZ,iBAAS,OAAO;AAChB,eAAO,YAAY,QAAQ;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AACA,IAAAA,SAAQ,OAAO;AAEf,IAAAA,SAAQ,aAAa,SAAS,OAAO;AACnC,aAAO,MAAM,OAAO,CAAC,MAAM,OAAO,UAAU,KAAK,KAAK;AAAA,IACxD;AAQA,aAAS,SAAS,OAAO,OAAO;AAC9B,UAAI,UAAU,IAAI;AAChB,gBAAQ;AAAA,MACV;AAEA,cAAQ,MAAM,QAAQ,OAAO,EAAE;AAM/B,UAAI,QAAQ;AACZ,aAAO,MAAM,QAAQ,QAAQ,GAAG,MAAM,GAAG;AACvC,cAAMI,SAAQ,MAAM,YAAY,GAAG;AACnC,YAAIA,SAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAKA,gBAAQ,MAAM,MAAM,GAAGA,MAAK;AAC5B,YAAI,MAAM,MAAM,mBAAmB,GAAG;AACpC,iBAAO;AAAA,QACT;AAEA,UAAE;AAAA,MACJ;AAGA,aAAO,MAAM,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,MAAM,OAAO,MAAM,SAAS,CAAC;AAAA,IACrE;AACA,IAAAJ,SAAQ,WAAW;AAEnB,QAAM,oBAAqB,WAAW;AACpC,YAAM,MAAM,uBAAO,OAAO,IAAI;AAC9B,aAAO,EAAE,eAAe;AAAA,IAC1B,EAAE;AAEF,aAAS,SAAS,GAAG;AACnB,aAAO;AAAA,IACT;AAWA,aAAS,YAAY,MAAM;AACzB,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO,MAAM;AAAA,MACf;AAEA,aAAO;AAAA,IACT;AACA,IAAAA,SAAQ,cAAc,oBAAoB,WAAW;AAErD,aAAS,cAAc,MAAM;AAC3B,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO,KAAK,MAAM,CAAC;AAAA,MACrB;AAEA,aAAO;AAAA,IACT;AACA,IAAAA,SAAQ,gBAAgB,oBAAoB,WAAW;AAEvD,aAAS,cAAc,GAAG;AACxB,UAAI,CAAC,GAAG;AACN,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,EAAE;AAEjB,UAAI,SAAS,GAA4B;AACvC,eAAO;AAAA,MACT;AAGA,UAAI,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,IAAe;AAC9C,eAAO;AAAA,MACT;AAGA,eAAS,IAAI,SAAS,IAAI,KAAK,GAAG,KAAK;AACrC,YAAI,EAAE,WAAW,CAAC,MAAM,IAAc;AACpC,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAUA,aAAS,2BAA2B,UAAU,UAAU,qBAAqB;AAC3E,UAAI,MAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AACjD,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,eAAe,SAAS;AACvC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,iBAAiB,SAAS;AACzC,UAAI,QAAQ,KAAK,qBAAqB;AACpC,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,kBAAkB,SAAS;AAC1C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,gBAAgB,SAAS;AACxC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,aAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,IAC5C;AACA,IAAAA,SAAQ,6BAA6B;AAWrC,aAAS,oCAAoC,UAAU,UAAU,sBAAsB;AACrF,UAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,kBAAkB,SAAS;AAC1C,UAAI,QAAQ,KAAK,sBAAsB;AACrC,eAAO;AAAA,MACT;AAEA,YAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,eAAe,SAAS;AACvC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,iBAAiB,SAAS;AACzC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,aAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,IAC5C;AACA,IAAAA,SAAQ,sCAAsC;AAE9C,aAAS,OAAO,OAAO,OAAO;AAC5B,UAAI,UAAU,OAAO;AACnB,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,OAAO;AACjB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAMA,aAAS,oCAAoC,UAAU,UAAU;AAC/D,UAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,kBAAkB,SAAS;AAC1C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,eAAe,SAAS;AACvC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,YAAM,SAAS,iBAAiB,SAAS;AACzC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAEA,aAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,IAC5C;AACA,IAAAA,SAAQ,sCAAsC;AAO9C,aAAS,oBAAoBK,MAAK;AAChC,aAAO,KAAK,MAAMA,KAAI,QAAQ,kBAAkB,EAAE,CAAC;AAAA,IACrD;AACA,IAAAL,SAAQ,sBAAsB;AAM9B,aAAS,iBAAiB,YAAY,WAAW,cAAc;AAC7D,kBAAY,aAAa;AAEzB,UAAI,YAAY;AAEd,YAAI,WAAW,WAAW,SAAS,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM,KAAK;AACrE,wBAAc;AAAA,QAChB;AAMA,oBAAY,aAAa;AAAA,MAC3B;AAgBA,UAAI,cAAc;AAChB,cAAM,SAAS,SAAS,YAAY;AACpC,YAAI,CAAC,QAAQ;AACX,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACpD;AACA,YAAI,OAAO,MAAM;AAEf,gBAAMI,SAAQ,OAAO,KAAK,YAAY,GAAG;AACzC,cAAIA,UAAS,GAAG;AACd,mBAAO,OAAO,OAAO,KAAK,UAAU,GAAGA,SAAQ,CAAC;AAAA,UAClD;AAAA,QACF;AACA,oBAAY,KAAK,YAAY,MAAM,GAAG,SAAS;AAAA,MACjD;AAEA,aAAO,UAAU,SAAS;AAAA,IAC5B;AACA,IAAAJ,SAAQ,mBAAmB;AAAA;AAAA;;;ACjiB3B;AAAA,yEAAAM,UAAA;AAaA,QAAM,WAAN,MAAe;AAAA,MACb,cAAc;AACZ,aAAK,SAAS,CAAC;AACf,aAAK,OAAO,oBAAI,IAAI;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA,MAKA,OAAO,UAAU,QAAQ,kBAAkB;AACzC,cAAM,MAAM,IAAI,SAAS;AACzB,iBAAS,IAAI,GAAG,MAAM,OAAO,QAAQ,IAAI,KAAK,KAAK;AACjD,cAAI,IAAI,OAAO,CAAC,GAAG,gBAAgB;AAAA,QACrC;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,OAAO;AACL,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,IAAI,MAAM,kBAAkB;AAC1B,cAAM,cAAc,KAAK,IAAI,IAAI;AACjC,cAAM,MAAM,KAAK,OAAO;AACxB,YAAI,CAAC,eAAe,kBAAkB;AACpC,eAAK,OAAO,KAAK,IAAI;AAAA,QACvB;AACA,YAAI,CAAC,aAAa;AAChB,eAAK,KAAK,IAAI,MAAM,GAAG;AAAA,QACzB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,IAAI,MAAM;AACN,eAAO,KAAK,KAAK,IAAI,IAAI;AAAA,MAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ,MAAM;AACZ,cAAM,MAAM,KAAK,KAAK,IAAI,IAAI;AAC9B,YAAI,OAAO,GAAG;AACV,iBAAO;AAAA,QACX;AACA,cAAM,IAAI,MAAM,MAAM,OAAO,sBAAsB;AAAA,MACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,GAAG,MAAM;AACP,YAAI,QAAQ,KAAK,OAAO,KAAK,OAAO,QAAQ;AAC1C,iBAAO,KAAK,OAAO,IAAI;AAAA,QACzB;AACA,cAAM,IAAI,MAAM,2BAA2B,IAAI;AAAA,MACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,UAAU;AACR,eAAO,KAAK,OAAO,MAAM;AAAA,MAC3B;AAAA,IACF;AACA,IAAAA,SAAQ,WAAW;AAAA;AAAA;;;ACnGnB;AAAA,4EAAAC,UAAA;AAOA,QAAM,OAAO;AAMb,aAAS,uBAAuB,UAAU,UAAU;AAElD,YAAM,QAAQ,SAAS;AACvB,YAAM,QAAQ,SAAS;AACvB,YAAM,UAAU,SAAS;AACzB,YAAM,UAAU,SAAS;AACzB,aAAO,QAAQ,SAAS,SAAS,SAAS,WAAW,WAC9C,KAAK,oCAAoC,UAAU,QAAQ,KAAK;AAAA,IACzE;AAOA,QAAM,cAAN,MAAkB;AAAA,MAChB,cAAc;AACZ,aAAK,SAAS,CAAC;AACf,aAAK,UAAU;AAEf,aAAK,QAAQ,EAAC,eAAe,IAAI,iBAAiB,EAAC;AAAA,MACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,gBAAgB,WAAW,UAAU;AACnC,aAAK,OAAO,QAAQ,WAAW,QAAQ;AAAA,MACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,IAAI,UAAU;AACZ,YAAI,uBAAuB,KAAK,OAAO,QAAQ,GAAG;AAChD,eAAK,QAAQ;AACb,eAAK,OAAO,KAAK,QAAQ;AAAA,QAC3B,OAAO;AACL,eAAK,UAAU;AACf,eAAK,OAAO,KAAK,QAAQ;AAAA,QAC3B;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,UAAU;AACR,YAAI,CAAC,KAAK,SAAS;AACjB,eAAK,OAAO,KAAK,KAAK,mCAAmC;AACzD,eAAK,UAAU;AAAA,QACjB;AACA,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAEA,IAAAA,SAAQ,cAAc;AAAA;AAAA;;;AC/EtB;AAAA,oFAAAC,UAAA;AAOA,QAAM,YAAY;AAClB,QAAM,OAAO;AACb,QAAM,WAAW,oBAAuB;AACxC,QAAM,cAAc,uBAA0B;AAU9C,QAAMC,sBAAN,MAAyB;AAAA,MACvB,YAAY,OAAO;AACjB,YAAI,CAAC,OAAO;AACV,kBAAQ,CAAC;AAAA,QACX;AACA,aAAK,QAAQ,KAAK,OAAO,OAAO,QAAQ,IAAI;AAC5C,aAAK,cAAc,KAAK,OAAO,OAAO,cAAc,IAAI;AACxD,aAAK,kBAAkB,KAAK,OAAO,OAAO,kBAAkB,KAAK;AACjE,aAAK,WAAW,IAAI,SAAS;AAC7B,aAAK,SAAS,IAAI,SAAS;AAC3B,aAAK,YAAY,IAAI,YAAY;AACjC,aAAK,mBAAmB;AAAA,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,OAAO,cAAc,oBAAoB;AACvC,cAAM,aAAa,mBAAmB;AACtC,cAAM,YAAY,IAAIA,oBAAmB;AAAA,UACvC,MAAM,mBAAmB;AAAA,UACzB;AAAA,QACF,CAAC;AACD,2BAAmB,YAAY,SAAS,SAAS;AAC/C,gBAAM,aAAa;AAAA,YACjB,WAAW;AAAA,cACT,MAAM,QAAQ;AAAA,cACd,QAAQ,QAAQ;AAAA,YAClB;AAAA,UACF;AAEA,cAAI,QAAQ,UAAU,MAAM;AAC1B,uBAAW,SAAS,QAAQ;AAC5B,gBAAI,cAAc,MAAM;AACtB,yBAAW,SAAS,KAAK,SAAS,YAAY,WAAW,MAAM;AAAA,YACjE;AAEA,uBAAW,WAAW;AAAA,cACpB,MAAM,QAAQ;AAAA,cACd,QAAQ,QAAQ;AAAA,YAClB;AAEA,gBAAI,QAAQ,QAAQ,MAAM;AACxB,yBAAW,OAAO,QAAQ;AAAA,YAC5B;AAAA,UACF;AAEA,oBAAU,WAAW,UAAU;AAAA,QACjC,CAAC;AACD,2BAAmB,QAAQ,QAAQ,SAAS,YAAY;AACtD,cAAI,iBAAiB;AACrB,cAAI,eAAe,MAAM;AACvB,6BAAiB,KAAK,SAAS,YAAY,UAAU;AAAA,UACvD;AAEA,cAAI,CAAC,UAAU,SAAS,IAAI,cAAc,GAAG;AAC3C,sBAAU,SAAS,IAAI,cAAc;AAAA,UACvC;AAEA,gBAAM,UAAU,mBAAmB,iBAAiB,UAAU;AAC9D,cAAI,WAAW,MAAM;AACnB,sBAAU,iBAAiB,YAAY,OAAO;AAAA,UAChD;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA,WAAW,OAAO;AAChB,cAAM,YAAY,KAAK,OAAO,OAAO,WAAW;AAChD,cAAM,WAAW,KAAK,OAAO,OAAO,YAAY,IAAI;AACpD,YAAI,SAAS,KAAK,OAAO,OAAO,UAAU,IAAI;AAC9C,YAAIC,QAAO,KAAK,OAAO,OAAO,QAAQ,IAAI;AAE1C,YAAI,CAAC,KAAK,iBAAiB;AACzB,eAAK,iBAAiB,WAAW,UAAU,QAAQA,KAAI;AAAA,QACzD;AAEA,YAAI,UAAU,MAAM;AAClB,mBAAS,OAAO,MAAM;AACtB,cAAI,CAAC,KAAK,SAAS,IAAI,MAAM,GAAG;AAC9B,iBAAK,SAAS,IAAI,MAAM;AAAA,UAC1B;AAAA,QACF;AAEA,YAAIA,SAAQ,MAAM;AAChB,UAAAA,QAAO,OAAOA,KAAI;AAClB,cAAI,CAAC,KAAK,OAAO,IAAIA,KAAI,GAAG;AAC1B,iBAAK,OAAO,IAAIA,KAAI;AAAA,UACtB;AAAA,QACF;AAEA,aAAK,UAAU,IAAI;AAAA,UACjB,eAAe,UAAU;AAAA,UACzB,iBAAiB,UAAU;AAAA,UAC3B,cAAc,YAAY,QAAQ,SAAS;AAAA,UAC3C,gBAAgB,YAAY,QAAQ,SAAS;AAAA,UAC7C;AAAA,UACA,MAAAA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,iBAAiB,aAAa,gBAAgB;AAC5C,YAAI,SAAS;AACb,YAAI,KAAK,eAAe,MAAM;AAC5B,mBAAS,KAAK,SAAS,KAAK,aAAa,MAAM;AAAA,QACjD;AAEA,YAAI,kBAAkB,MAAM;AAG1B,cAAI,CAAC,KAAK,kBAAkB;AAC1B,iBAAK,mBAAmB,uBAAO,OAAO,IAAI;AAAA,UAC5C;AACA,eAAK,iBAAiB,KAAK,YAAY,MAAM,CAAC,IAAI;AAAA,QACpD,WAAW,KAAK,kBAAkB;AAGhC,iBAAO,KAAK,iBAAiB,KAAK,YAAY,MAAM,CAAC;AACrD,cAAI,OAAO,KAAK,KAAK,gBAAgB,EAAE,WAAW,GAAG;AACnD,iBAAK,mBAAmB;AAAA,UAC1B;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBA,eAAe,oBAAoB,aAAa,gBAAgB;AAC9D,YAAI,aAAa;AAEjB,YAAI,eAAe,MAAM;AACvB,cAAI,mBAAmB,QAAQ,MAAM;AACnC,kBAAM,IAAI;AAAA,cACR;AAAA,YAEF;AAAA,UACF;AACA,uBAAa,mBAAmB;AAAA,QAClC;AACA,cAAM,aAAa,KAAK;AAExB,YAAI,cAAc,MAAM;AACtB,uBAAa,KAAK,SAAS,YAAY,UAAU;AAAA,QACnD;AAGA,cAAM,aAAa,KAAK,UAAU,QAAQ,EAAE,SAAS,IACjD,IAAI,SAAS,IACb,KAAK;AACT,cAAM,WAAW,IAAI,SAAS;AAG9B,aAAK,UAAU,gBAAgB,SAAS,SAAS;AAC/C,cAAI,QAAQ,WAAW,cAAc,QAAQ,gBAAgB,MAAM;AAEjE,kBAAM,WAAW,mBAAmB,oBAAoB;AAAA,cACtD,MAAM,QAAQ;AAAA,cACd,QAAQ,QAAQ;AAAA,YAClB,CAAC;AACD,gBAAI,SAAS,UAAU,MAAM;AAE3B,sBAAQ,SAAS,SAAS;AAC1B,kBAAI,kBAAkB,MAAM;AAC1B,wBAAQ,SAAS,KAAK,KAAK,gBAAgB,QAAQ,MAAM;AAAA,cAC3D;AACA,kBAAI,cAAc,MAAM;AACtB,wBAAQ,SAAS,KAAK,SAAS,YAAY,QAAQ,MAAM;AAAA,cAC3D;AACA,sBAAQ,eAAe,SAAS;AAChC,sBAAQ,iBAAiB,SAAS;AAClC,kBAAI,SAAS,QAAQ,MAAM;AACzB,wBAAQ,OAAO,SAAS;AAAA,cAC1B;AAAA,YACF;AAAA,UACF;AAEA,gBAAM,SAAS,QAAQ;AACvB,cAAI,UAAU,QAAQ,CAAC,WAAW,IAAI,MAAM,GAAG;AAC7C,uBAAW,IAAI,MAAM;AAAA,UACvB;AAEA,gBAAMA,QAAO,QAAQ;AACrB,cAAIA,SAAQ,QAAQ,CAAC,SAAS,IAAIA,KAAI,GAAG;AACvC,qBAAS,IAAIA,KAAI;AAAA,UACnB;AAAA,QAEF,GAAG,IAAI;AACP,aAAK,WAAW;AAChB,aAAK,SAAS;AAGd,2BAAmB,QAAQ,QAAQ,SAAS,SAAS;AACnD,gBAAM,UAAU,mBAAmB,iBAAiB,OAAO;AAC3D,cAAI,WAAW,MAAM;AACnB,gBAAI,kBAAkB,MAAM;AAC1B,wBAAU,KAAK,KAAK,gBAAgB,OAAO;AAAA,YAC7C;AACA,gBAAI,cAAc,MAAM;AACtB,wBAAU,KAAK,SAAS,YAAY,OAAO;AAAA,YAC7C;AACA,iBAAK,iBAAiB,SAAS,OAAO;AAAA,UACxC;AAAA,QACF,GAAG,IAAI;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaA,iBAAiB,YAAY,WAAW,SAAS,OAAO;AAKtD,YAAI,aAAa,OAAO,UAAU,SAAS,YAAY,OAAO,UAAU,WAAW,UAAU;AACzF,gBAAM,IAAI;AAAA,YACN;AAAA,UAGJ;AAAA,QACJ;AAEA,YAAI,cAAc,UAAU,cAAc,YAAY,cAC/C,WAAW,OAAO,KAAK,WAAW,UAAU,KAC5C,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO;AAAA,QAGzC,WAAW,cAAc,UAAU,cAAc,YAAY,cACjD,aAAa,UAAU,aAAa,YAAY,aAChD,WAAW,OAAO,KAAK,WAAW,UAAU,KAC5C,UAAU,OAAO,KAAK,UAAU,UAAU,KAC1C,SAAS;AAAA,QAGrB,OAAO;AACL,gBAAM,IAAI,MAAM,sBAAsB,KAAK,UAAU;AAAA,YACnD,WAAW;AAAA,YACX,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,MAAM;AAAA,UACR,CAAC,CAAC;AAAA,QACJ;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,qBAAqB;AACnB,YAAI,0BAA0B;AAC9B,YAAI,wBAAwB;AAC5B,YAAI,yBAAyB;AAC7B,YAAI,uBAAuB;AAC3B,YAAI,eAAe;AACnB,YAAI,iBAAiB;AACrB,YAAI,SAAS;AACb,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,cAAM,WAAW,KAAK,UAAU,QAAQ;AACxC,iBAAS,IAAI,GAAG,MAAM,SAAS,QAAQ,IAAI,KAAK,KAAK;AACnD,oBAAU,SAAS,CAAC;AACpB,iBAAO;AAEP,cAAI,QAAQ,kBAAkB,uBAAuB;AACnD,sCAA0B;AAC1B,mBAAO,QAAQ,kBAAkB,uBAAuB;AACtD,sBAAQ;AACR;AAAA,YACF;AAAA,UACF,WAAW,IAAI,GAAG;AAChB,gBAAI,CAAC,KAAK,oCAAoC,SAAS,SAAS,IAAI,CAAC,CAAC,GAAG;AACvE;AAAA,YACF;AACA,oBAAQ;AAAA,UACV;AAEA,kBAAQ,UAAU,OAAO,QAAQ,kBACJ,uBAAuB;AACpD,oCAA0B,QAAQ;AAElC,cAAI,QAAQ,UAAU,MAAM;AAC1B,wBAAY,KAAK,SAAS,QAAQ,QAAQ,MAAM;AAChD,oBAAQ,UAAU,OAAO,YAAY,cAAc;AACnD,6BAAiB;AAGjB,oBAAQ,UAAU,OAAO,QAAQ,eAAe,IACnB,oBAAoB;AACjD,mCAAuB,QAAQ,eAAe;AAE9C,oBAAQ,UAAU,OAAO,QAAQ,iBACJ,sBAAsB;AACnD,qCAAyB,QAAQ;AAEjC,gBAAI,QAAQ,QAAQ,MAAM;AACxB,wBAAU,KAAK,OAAO,QAAQ,QAAQ,IAAI;AAC1C,sBAAQ,UAAU,OAAO,UAAU,YAAY;AAC/C,6BAAe;AAAA,YACjB;AAAA,UACF;AAEA,oBAAU;AAAA,QACZ;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,wBAAwB,UAAU,aAAa;AAC7C,eAAO,SAAS,IAAI,SAAS,QAAQ;AACnC,cAAI,CAAC,KAAK,kBAAkB;AAC1B,mBAAO;AAAA,UACT;AACA,cAAI,eAAe,MAAM;AACvB,qBAAS,KAAK,SAAS,aAAa,MAAM;AAAA,UAC5C;AACA,gBAAM,MAAM,KAAK,YAAY,MAAM;AACnC,iBAAO,OAAO,UAAU,eAAe,KAAK,KAAK,kBAAkB,GAAG,IAClE,KAAK,iBAAiB,GAAG,IACzB;AAAA,QACN,GAAG,IAAI;AAAA,MACT;AAAA;AAAA;AAAA;AAAA,MAKA,SAAS;AACP,cAAM,MAAM;AAAA,UACV,SAAS,KAAK;AAAA,UACd,SAAS,KAAK,SAAS,QAAQ;AAAA,UAC/B,OAAO,KAAK,OAAO,QAAQ;AAAA,UAC3B,UAAU,KAAK,mBAAmB;AAAA,QACpC;AACA,YAAI,KAAK,SAAS,MAAM;AACtB,cAAI,OAAO,KAAK;AAAA,QAClB;AACA,YAAI,KAAK,eAAe,MAAM;AAC5B,cAAI,aAAa,KAAK;AAAA,QACxB;AACA,YAAI,KAAK,kBAAkB;AACzB,cAAI,iBAAiB,KAAK,wBAAwB,IAAI,SAAS,IAAI,UAAU;AAAA,QAC/E;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA,MAKA,WAAW;AACT,eAAO,KAAK,UAAU,KAAK,OAAO,CAAC;AAAA,MACrC;AAAA,IACF;AAEA,IAAAD,oBAAmB,UAAU,WAAW;AACxC,IAAAD,SAAQ,qBAAqBC;AAAA;AAAA;;;AC5Z7B;AAAA,6EAAAE,UAAA;AAOA,IAAAA,SAAQ,uBAAuB;AAC/B,IAAAA,SAAQ,oBAAoB;AAe5B,aAAS,gBAAgB,MAAM,OAAO,SAAS,WAAW,UAAU,OAAO;AAUzE,YAAM,MAAM,KAAK,OAAO,QAAQ,QAAQ,CAAC,IAAI;AAC7C,YAAM,MAAM,SAAS,SAAS,UAAU,GAAG,GAAG,IAAI;AAClD,UAAI,QAAQ,GAAG;AAEb,eAAO;AAAA,MACT,WAAW,MAAM,GAAG;AAElB,YAAI,QAAQ,MAAM,GAAG;AAEnB,iBAAO,gBAAgB,KAAK,OAAO,SAAS,WAAW,UAAU,KAAK;AAAA,QACxE;AAIA,YAAI,SAASA,SAAQ,mBAAmB;AACtC,iBAAO,QAAQ,UAAU,SAAS,QAAQ;AAAA,QAC5C;AACA,eAAO;AAAA,MACT;AAGA,UAAI,MAAM,OAAO,GAAG;AAElB,eAAO,gBAAgB,MAAM,KAAK,SAAS,WAAW,UAAU,KAAK;AAAA,MACvE;AAGA,UAAI,SAASA,SAAQ,mBAAmB;AACtC,eAAO;AAAA,MACT;AACA,aAAO,OAAO,IAAI,KAAK;AAAA,IACzB;AAoBA,IAAAA,SAAQ,SAAS,SAAS,OAAO,SAAS,WAAW,UAAU,OAAO;AACpE,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO;AAAA,MACT;AAEA,UAAIC,SAAQ;AAAA,QAAgB;AAAA,QAAI,UAAU;AAAA,QAAQ;AAAA,QAAS;AAAA,QAC/B;AAAA,QAAU,SAASD,SAAQ;AAAA,MAAoB;AAC3E,UAAIC,SAAQ,GAAG;AACb,eAAO;AAAA,MACT;AAKA,aAAOA,SAAQ,KAAK,GAAG;AACrB,YAAI,SAAS,UAAUA,MAAK,GAAG,UAAUA,SAAQ,CAAC,GAAG,IAAI,MAAM,GAAG;AAChE;AAAA,QACF;AACA,UAAEA;AAAA,MACJ;AAEA,aAAOA;AAAA,IACT;AAAA;AAAA;;;AC1GA;AAAA,yEAAAC,UAAAC,SAAA;AACA,QAAM,uBAAwB,WAAW;AAErC,aAAQ,OAAO,WAAW,eAAiB,SAAS;AAAA,IACxD,EAAG,KAAK;AAER,QAAI,sBAAsB;AAGxB,UAAI,eAAe;AAEnB,MAAAA,QAAO,UAAU,SAAS,WAAW;AACnC,YAAI,OAAO,iBAAiB,UAAU;AACpC,iBAAO,MAAM,YAAY,EACtB,KAAK,cAAY,SAAS,YAAY,CAAC;AAAA,QAC5C;AACA,YAAI,wBAAwB,aAAa;AACvC,iBAAO,QAAQ,QAAQ,YAAY;AAAA,QACrC;AACA,cAAM,IAAI,MAAM,mLAGgC;AAAA,MAClD;AAEA,MAAAA,QAAO,QAAQ,aAAa,WAAS,eAAe;AAAA,IACtD,OAAO;AAEL,YAAMC,MAAK;AACX,YAAM,OAAO;AAEb,MAAAD,QAAO,UAAU,SAAS,WAAW;AACnC,eAAO,IAAI,QAAQ,CAACE,UAAS,WAAW;AACtC,gBAAM,WAAW,KAAK,KAAK,WAAW,eAAe;AACrD,UAAAD,IAAG,SAAS,UAAU,MAAM,CAAC,OAAO,SAAS;AAC3C,gBAAI,OAAO;AACT,qBAAO,KAAK;AACZ;AAAA,YACF;AAEA,YAAAC,SAAQ,KAAK,MAAM;AAAA,UACrB,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,MAAAF,QAAO,QAAQ,aAAa,OAAK;AAC/B,gBAAQ,MAAM,iEAAiE;AAAA,MACjF;AAAA,IACF;AAAA;AAAA;;;AChDA;AAAA,oEAAAG,UAAAC,SAAA;AAAA,QAAM,WAAW;AAKjB,aAAS,UAAU;AACjB,WAAK,gBAAgB;AACrB,WAAK,kBAAkB;AACvB,WAAK,sBAAsB;AAC3B,WAAK,SAAS;AACd,WAAK,eAAe;AACpB,WAAK,iBAAiB;AACtB,WAAK,OAAO;AAAA,IACd;AAEA,QAAI,aAAa;AAEjB,IAAAA,QAAO,UAAU,SAAS,OAAO;AAC/B,UAAI,YAAY;AACd,eAAO;AAAA,MACT;AAEA,YAAM,gBAAgB,CAAC;AAEvB,mBAAa,SAAS,EAAE,KAAK,YAAU;AACnC,eAAO,YAAY,YAAY,QAAQ;AAAA,UACrC,KAAK;AAAA,YACH,iBACE,eACA,iBAEA,wBACA,qBAEA,aACA,QACA,cACA,gBAEA,SACAC,OACA;AACA,oBAAM,UAAU,IAAI,QAAQ;AAE5B,sBAAQ,gBAAgB,gBAAgB;AACxC,sBAAQ,kBAAkB;AAE1B,kBAAI,wBAAwB;AAE1B,wBAAQ,sBAAsB,sBAAsB;AAAA,cACtD;AAEA,kBAAI,aAAa;AACf,wBAAQ,SAAS;AAEjB,wBAAQ,eAAe,eAAe;AACtC,wBAAQ,iBAAiB;AAEzB,oBAAI,SAAS;AACX,0BAAQ,OAAOA;AAAA,gBACjB;AAAA,cACF;AAEA,4BAAc,cAAc,SAAS,CAAC,EAAE,OAAO;AAAA,YACjD;AAAA,YAEA,oCAAoC;AAAE,sBAAQ,KAAK,6BAA6B;AAAA,YAAG;AAAA,YACnF,kCAAkC;AAAE,sBAAQ,QAAQ,6BAA6B;AAAA,YAAG;AAAA,YAEpF,6BAA6B;AAAE,sBAAQ,KAAK,sBAAsB;AAAA,YAAG;AAAA,YACrE,2BAA2B;AAAE,sBAAQ,QAAQ,sBAAsB;AAAA,YAAG;AAAA,YAEtE,+BAA+B;AAAE,sBAAQ,KAAK,wBAAwB;AAAA,YAAG;AAAA,YACzE,6BAA6B;AAAE,sBAAQ,QAAQ,wBAAwB;AAAA,YAAG;AAAA,YAE1E,8BAA8B;AAAE,sBAAQ,KAAK,uBAAuB;AAAA,YAAG;AAAA,YACvE,4BAA4B;AAAE,sBAAQ,QAAQ,uBAAuB;AAAA,YAAG;AAAA,YAExE,uBAAuB;AAAE,sBAAQ,KAAK,gBAAgB;AAAA,YAAG;AAAA,YACzD,qBAAqB;AAAE,sBAAQ,QAAQ,gBAAgB;AAAA,YAAG;AAAA,YAE1D,mCAAmC;AAAE,sBAAQ,KAAK,4BAA4B;AAAA,YAAG;AAAA,YACjF,iCAAiC;AAAE,sBAAQ,QAAQ,4BAA4B;AAAA,YAAG;AAAA,YAElF,kCAAkC;AAAE,sBAAQ,KAAK,2BAA2B;AAAA,YAAG;AAAA,YAC/E,gCAAgC;AAAE,sBAAQ,QAAQ,2BAA2B;AAAA,YAAG;AAAA,UAClF;AAAA,QACF,CAAC;AAAA,MACL,CAAC,EAAE,KAAK,UAAQ;AACd,eAAO;AAAA,UACL,SAAS,KAAK,SAAS;AAAA,UACvB,qBAAqB,CAAC,iBAAiB,MAAM;AAC3C,0BAAc,KAAK,eAAe;AAClC,gBAAI;AACF,gBAAE;AAAA,YACJ,UAAE;AACA,4BAAc,IAAI;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC,EAAE,KAAK,MAAM,OAAK;AACjB,qBAAa;AACb,cAAM;AAAA,MACR,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1GA;AAAA,mFAAAC,UAAA;AAOA,QAAM,OAAO;AACb,QAAM,eAAe;AACrB,QAAM,WAAW,oBAAuB;AACxC,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,OAAO;AAEb,QAAM,WAAW,OAAO,aAAa;AAErC,QAAM,oBAAN,MAAwB;AAAA,MACtB,YAAY,YAAY,eAAe;AAIrC,YAAI,cAAc,UAAU;AAC1B,iBAAO,QAAQ,QAAQ,IAAI;AAAA,QAC7B;AAEA,eAAO,SAAS,YAAY,aAAa;AAAA,MAC3C;AAAA,MAEA,OAAO,WAAW,MAAM;AACtB,iBAAS,WAAW,KAAK,mBAAmB,CAAC;AAAA,MAC/C;AAAA,MAEA,OAAO,cAAc,YAAY,eAAe;AAC9C,eAAO,YAAY,YAAY,aAAa;AAAA,MAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgCA,aAAa,KAAK,cAAc,cAAc,GAAG;AAC/C,cAAM,WAAW,MAAM,IAAI,kBAAkB,cAAc,YAAY;AACvE,YAAI;AACF,iBAAO,MAAM,EAAE,QAAQ;AAAA,QACzB,UAAE;AACA,mBAAS,QAAQ;AAAA,QACnB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,eAAe,MAAM,aAAa;AAChC,cAAM,IAAI,MAAM,0CAA0C;AAAA,MAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBA,YAAY,WAAW,UAAU,QAAQ;AACvC,cAAM,IAAI,MAAM,uCAAuC;AAAA,MACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAwBA,yBAAyB,OAAO;AAC9B,cAAM,IAAI,MAAM,oDAAoD;AAAA,MACtE;AAAA,MAEA,UAAU;AACR,cAAM,IAAI,MAAM,mCAAmC;AAAA,MACrD;AAAA,IACF;AAKA,sBAAkB,UAAU,WAAW;AACvC,sBAAkB,kBAAkB;AACpC,sBAAkB,iBAAiB;AAEnC,sBAAkB,uBAAuB;AACzC,sBAAkB,oBAAoB;AAEtC,IAAAA,SAAQ,oBAAoB;AAoC5B,QAAM,yBAAN,cAAqC,kBAAkB;AAAA,MACrD,YAAY,YAAY,eAAe;AACrC,eAAO,MAAM,QAAQ,EAAE,KAAK,UAAQ;AAClC,cAAI,YAAY;AAChB,cAAI,OAAO,eAAe,UAAU;AAClC,wBAAY,KAAK,oBAAoB,UAAU;AAAA,UACjD;AAEA,gBAAM,UAAU,KAAK,OAAO,WAAW,SAAS;AAChD,cAAI,UAAU,KAAK,OAAO,WAAW,SAAS;AAG9C,gBAAM,QAAQ,KAAK,OAAO,WAAW,SAAS,CAAC,CAAC;AAChD,cAAI,aAAa,KAAK,OAAO,WAAW,cAAc,IAAI;AAC1D,gBAAM,iBAAiB,KAAK,OAAO,WAAW,kBAAkB,IAAI;AACpE,gBAAM,WAAW,KAAK,OAAO,WAAW,UAAU;AAClD,gBAAM,OAAO,KAAK,OAAO,WAAW,QAAQ,IAAI;AAIhD,cAAI,WAAW,KAAK,UAAU;AAC5B,kBAAM,IAAI,MAAM,0BAA0B,OAAO;AAAA,UACnD;AAEA,cAAI,YAAY;AACd,yBAAa,KAAK,UAAU,UAAU;AAAA,UACxC;AAEA,oBAAU,QACP,IAAI,MAAM,EAIV,IAAI,KAAK,SAAS,EAKlB,IAAI,SAAS,QAAQ;AACpB,mBAAO,cAAc,KAAK,WAAW,UAAU,KAAK,KAAK,WAAW,MAAM,IACtE,KAAK,SAAS,YAAY,MAAM,IAChC;AAAA,UACN,CAAC;AAMH,eAAK,SAAS,SAAS,UAAU,MAAM,IAAI,MAAM,GAAG,IAAI;AACxD,eAAK,WAAW,SAAS,UAAU,SAAS,IAAI;AAEhD,eAAK,mBAAmB,KAAK,SAAS,QAAQ,EAAE,IAAI,SAAS,GAAG;AAC9D,mBAAO,KAAK,iBAAiB,YAAY,GAAG,aAAa;AAAA,UAC3D,CAAC;AAED,eAAK,aAAa;AAClB,eAAK,iBAAiB;AACtB,eAAK,YAAY;AACjB,eAAK,gBAAgB;AACrB,eAAK,OAAO;AAEZ,eAAK,uBAAuB;AAC5B,eAAK,eAAe;AACpB,eAAK,QAAQ;AAEb,iBAAO,KAAK,EAAE,KAAK,OAAK;AACtB,iBAAK,QAAQ;AACb,mBAAO;AAAA,UACT,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,iBAAiB,SAAS;AACxB,YAAI,iBAAiB;AACrB,YAAI,KAAK,cAAc,MAAM;AAC3B,2BAAiB,KAAK,SAAS,KAAK,YAAY,cAAc;AAAA,QAChE;AAEA,YAAI,KAAK,SAAS,IAAI,cAAc,GAAG;AACrC,iBAAO,KAAK,SAAS,QAAQ,cAAc;AAAA,QAC7C;AAIA,iBAAS,IAAI,GAAG,IAAI,KAAK,iBAAiB,QAAQ,EAAE,GAAG;AACrD,cAAI,KAAK,iBAAiB,CAAC,KAAK,SAAS;AACvC,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,OAAO,cAAc,YAAY,eAAe;AAC9C,eAAO,IAAI,uBAAuB,WAAW,SAAS,CAAC;AAAA,MACzD;AAAA,MAEA,IAAI,UAAU;AACZ,eAAO,KAAK,iBAAiB,MAAM;AAAA,MACrC;AAAA,MAEA,kBAAkB;AAChB,YAAI,KAAK,iBAAiB,GAAG;AAC3B,eAAK,eAAe,KAAK,WAAW,KAAK,UAAU;AAAA,QACrD;AAEA,eAAO,KAAK;AAAA,MACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,eAAe,MAAM,aAAa;AAChC,cAAM,OAAO,KAAK;AAElB,cAAM,iBAAiB,KAAK,MAAM,QAAQ,kBAAkB,IAAI;AAChE,cAAM,cAAc,IAAI,WAAW,KAAK,MAAM,QAAQ,OAAO,QAAQ,gBAAgB,IAAI;AACzF,iBAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,sBAAY,CAAC,IAAI,KAAK,WAAW,CAAC;AAAA,QACpC;AAEA,cAAM,cAAc,KAAK,MAAM,QAAQ,eAAe,cAAc;AAEpE,YAAI,CAAC,aAAa;AAChB,gBAAM,QAAQ,KAAK,MAAM,QAAQ,eAAe;AAChD,cAAI,MAAM,gCAAgC;AAG1C,kBAAQ,OAAO;AAAA,YACb,KAAK;AACH,qBAAO;AACP;AAAA,YACF,KAAK;AACH,qBAAO;AACP;AAAA,YACF,KAAK;AACH,qBAAO;AACP;AAAA,YACF,KAAK;AACH,qBAAO;AACP;AAAA,YACF;AACE,qBAAO;AACP;AAAA,UACJ;AAEA,gBAAM,IAAI,MAAM,GAAG;AAAA,QACrB;AAEA,aAAK,eAAe;AAAA,MACtB;AAAA,MAEA,YAAY,WAAW,UAAU,QAAQ;AACvC,cAAM,UAAU,YAAY;AAC5B,cAAM,QAAQ,UAAU,kBAAkB;AAC1C,cAAM,aAAa,KAAK;AAExB,aAAK,MAAM;AAAA,UACT,aAAW;AACT,gBAAI,QAAQ,WAAW,MAAM;AAC3B,sBAAQ,SAAS,KAAK,SAAS,GAAG,QAAQ,MAAM;AAChD,sBAAQ,SAAS,KAAK,iBAAiB,YAAY,QAAQ,QAAQ,KAAK,aAAa;AAErF,kBAAI,QAAQ,SAAS,MAAM;AACzB,wBAAQ,OAAO,KAAK,OAAO,GAAG,QAAQ,IAAI;AAAA,cAC5C;AAAA,YACF;AAEA,sBAAU,KAAK,SAAS,OAAO;AAAA,UACjC;AAAA,UACA,MAAM;AACJ,oBAAQ,OAAO;AAAA,cACf,KAAK,kBAAkB;AACrB,qBAAK,MAAM,QAAQ,sBAAsB,KAAK,gBAAgB,CAAC;AAC/D;AAAA,cACF,KAAK,kBAAkB;AACrB,qBAAK,MAAM,QAAQ,qBAAqB,KAAK,gBAAgB,CAAC;AAC9D;AAAA,cACF;AACE,sBAAM,IAAI,MAAM,6BAA6B;AAAA,YAC/C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MAEA,yBAAyB,OAAO;AAC9B,YAAI,SAAS,KAAK,OAAO,OAAO,QAAQ;AACxC,cAAM,eAAe,KAAK,OAAO,OAAO,MAAM;AAC9C,cAAM,iBAAiB,MAAM,UAAU;AAEvC,iBAAS,KAAK,iBAAiB,MAAM;AACrC,YAAI,SAAS,GAAG;AACd,iBAAO,CAAC;AAAA,QACV;AAEA,YAAI,eAAe,GAAG;AACpB,gBAAM,IAAI,MAAM,2BAA2B;AAAA,QAC7C;AAEA,YAAI,iBAAiB,GAAG;AACtB,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AAEA,cAAM,WAAW,CAAC;AAElB,aAAK,MAAM;AAAA,UACT,OAAK;AACH,gBAAI,aAAa,EAAE;AACnB,gBAAI,KAAK,wBAAwB,eAAe,MAAM;AACpD,2BAAa;AAAA,YACf;AACA,qBAAS,KAAK;AAAA,cACZ,MAAM,EAAE;AAAA,cACR,QAAQ,EAAE;AAAA,cACV;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UAAG,MAAM;AACP,iBAAK,MAAM,QAAQ;AAAA,cACjB,KAAK,gBAAgB;AAAA,cACrB;AAAA,cACA,eAAe;AAAA,cACf,YAAY;AAAA,cACZ;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,UAAU;AACR,YAAI,KAAK,iBAAiB,GAAG;AAC3B,eAAK,MAAM,QAAQ,cAAc,KAAK,YAAY;AAClD,eAAK,eAAe;AAAA,QACtB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,qBAAqB;AACnB,YAAI,KAAK,sBAAsB;AAC7B;AAAA,QACF;AAEA,aAAK,MAAM,QAAQ,qBAAqB,KAAK,gBAAgB,CAAC;AAC9D,aAAK,uBAAuB;AAAA,MAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0BA,oBAAoB,OAAO;AACzB,cAAM,SAAS;AAAA,UACb,eAAe,KAAK,OAAO,OAAO,MAAM;AAAA,UACxC,iBAAiB,KAAK,OAAO,OAAO,QAAQ;AAAA,QAC9C;AAEA,YAAI,OAAO,gBAAgB,GAAG;AAC5B,gBAAM,IAAI,MAAM,2BAA2B;AAAA,QAC7C;AAEA,YAAI,OAAO,kBAAkB,GAAG;AAC9B,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AAEA,YAAI,OAAO,KAAK,OAAO,OAAO,QAAQ,kBAAkB,oBAAoB;AAC5E,YAAI,QAAQ,MAAM;AAChB,iBAAO,kBAAkB;AAAA,QAC3B;AAEA,YAAI;AACJ,aAAK,MAAM,oBAAoB,OAAK,UAAU,GAAG,MAAM;AACrD,eAAK,MAAM,QAAQ;AAAA,YACjB,KAAK,gBAAgB;AAAA,YACrB,OAAO,gBAAgB;AAAA,YACvB,OAAO;AAAA,YACP;AAAA,UACF;AAAA,QACF,CAAC;AAED,YAAI,SAAS;AACX,cAAI,QAAQ,kBAAkB,OAAO,eAAe;AAClD,gBAAI,SAAS,KAAK,OAAO,SAAS,UAAU,IAAI;AAChD,gBAAI,WAAW,MAAM;AACnB,uBAAS,KAAK,SAAS,GAAG,MAAM;AAChC,uBAAS,KAAK,iBAAiB,KAAK,YAAY,QAAQ,KAAK,aAAa;AAAA,YAC5E;AAEA,gBAAIC,QAAO,KAAK,OAAO,SAAS,QAAQ,IAAI;AAC5C,gBAAIA,UAAS,MAAM;AACjB,cAAAA,QAAO,KAAK,OAAO,GAAGA,KAAI;AAAA,YAC5B;AAEA,mBAAO;AAAA,cACL;AAAA,cACA,MAAM,KAAK,OAAO,SAAS,gBAAgB,IAAI;AAAA,cAC/C,QAAQ,KAAK,OAAO,SAAS,kBAAkB,IAAI;AAAA,cACnD,MAAAA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,UACL,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,MAAM;AAAA,QACR;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,0BAA0B;AACxB,YAAI,CAAC,KAAK,gBAAgB;AACxB,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,eAAe,UAAU,KAAK,SAAS,KAAK,KACtD,CAAC,KAAK,eAAe,KAAK,SAAS,IAAI;AAAE,iBAAO,MAAM;AAAA,QAAM,CAAC;AAAA,MACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,iBAAiB,SAAS,eAAe;AACvC,YAAI,CAAC,KAAK,gBAAgB;AACxB,iBAAO;AAAA,QACT;AAEA,cAAMC,SAAQ,KAAK,iBAAiB,OAAO;AAC3C,YAAIA,UAAS,GAAG;AACd,iBAAO,KAAK,eAAeA,MAAK;AAAA,QAClC;AAEA,YAAI,iBAAiB;AACrB,YAAI,KAAK,cAAc,MAAM;AAC3B,2BAAiB,KAAK,SAAS,KAAK,YAAY,cAAc;AAAA,QAChE;AAEA,YAAI;AACJ,YAAI,KAAK,cAAc,SACf,MAAM,KAAK,SAAS,KAAK,UAAU,IAAI;AAK7C,gBAAM,iBAAiB,eAAe,QAAQ,cAAc,EAAE;AAC9D,cAAI,IAAI,UAAU,UACX,KAAK,SAAS,IAAI,cAAc,GAAG;AACxC,mBAAO,KAAK,eAAe,KAAK,SAAS,QAAQ,cAAc,CAAC;AAAA,UAClE;AAEA,eAAK,CAAC,IAAI,QAAQ,IAAI,QAAQ,QACvB,KAAK,SAAS,IAAI,MAAM,cAAc,GAAG;AAC9C,mBAAO,KAAK,eAAe,KAAK,SAAS,QAAQ,MAAM,cAAc,CAAC;AAAA,UACxE;AAAA,QACF;AAMA,YAAI,eAAe;AACjB,iBAAO;AAAA,QACT;AAEA,cAAM,IAAI,MAAM,MAAM,iBAAiB,4BAA4B;AAAA,MACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAyBA,qBAAqB,OAAO;AAC1B,YAAI,SAAS,KAAK,OAAO,OAAO,QAAQ;AACxC,iBAAS,KAAK,iBAAiB,MAAM;AACrC,YAAI,SAAS,GAAG;AACd,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,YAAY;AAAA,UACd;AAAA,QACF;AAEA,cAAM,SAAS;AAAA,UACb;AAAA,UACA,cAAc,KAAK,OAAO,OAAO,MAAM;AAAA,UACvC,gBAAgB,KAAK,OAAO,OAAO,QAAQ;AAAA,QAC7C;AAEA,YAAI,OAAO,eAAe,GAAG;AAC3B,gBAAM,IAAI,MAAM,2BAA2B;AAAA,QAC7C;AAEA,YAAI,OAAO,iBAAiB,GAAG;AAC7B,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AAEA,YAAI,OAAO,KAAK,OAAO,OAAO,QAAQ,kBAAkB,oBAAoB;AAC5E,YAAI,QAAQ,MAAM;AAChB,iBAAO,kBAAkB;AAAA,QAC3B;AAEA,YAAI;AACJ,aAAK,MAAM,oBAAoB,OAAK,UAAU,GAAG,MAAM;AACrD,eAAK,MAAM,QAAQ;AAAA,YACjB,KAAK,gBAAgB;AAAA,YACrB,OAAO;AAAA,YACP,OAAO,eAAe;AAAA,YACtB,OAAO;AAAA,YACP;AAAA,UACF;AAAA,QACF,CAAC;AAED,YAAI,SAAS;AACX,cAAI,QAAQ,WAAW,OAAO,QAAQ;AACpC,gBAAI,aAAa,QAAQ;AACzB,gBAAI,KAAK,wBAAwB,eAAe,MAAM;AACpD,2BAAa;AAAA,YACf;AACA,mBAAO;AAAA,cACL,MAAM,KAAK,OAAO,SAAS,iBAAiB,IAAI;AAAA,cAChD,QAAQ,KAAK,OAAO,SAAS,mBAAmB,IAAI;AAAA,cACpD;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,YAAY;AAAA,QACd;AAAA,MACF;AAAA,IACF;AAEA,2BAAuB,UAAU,WAAW;AAC5C,IAAAF,SAAQ,yBAAyB;AAmDjC,QAAM,2BAAN,cAAuC,kBAAkB;AAAA,MACvD,YAAY,YAAY,eAAe;AACrC,eAAO,MAAM,QAAQ,EAAE,KAAK,UAAQ;AAClC,cAAI,YAAY;AAChB,cAAI,OAAO,eAAe,UAAU;AAClC,wBAAY,KAAK,oBAAoB,UAAU;AAAA,UACjD;AAEA,gBAAM,UAAU,KAAK,OAAO,WAAW,SAAS;AAChD,gBAAM,WAAW,KAAK,OAAO,WAAW,UAAU;AAElD,cAAI,WAAW,KAAK,UAAU;AAC5B,kBAAM,IAAI,MAAM,0BAA0B,OAAO;AAAA,UACnD;AAEA,eAAK,WAAW,IAAI,SAAS;AAC7B,eAAK,SAAS,IAAI,SAAS;AAC3B,eAAK,sBAAsB;AAC3B,eAAK,qBAAqB;AAC1B,eAAK,8BAA8B;AACnC,eAAK,6BAA6B;AAElC,cAAI,aAAa;AAAA,YACf,MAAM;AAAA,YACN,QAAQ;AAAA,UACV;AACA,iBAAO,QAAQ,IAAI,SAAS,IAAI,OAAK;AACnC,gBAAI,EAAE,KAAK;AAGT,oBAAM,IAAI,MAAM,oDAAoD;AAAA,YACtE;AACA,kBAAM,SAAS,KAAK,OAAO,GAAG,QAAQ;AACtC,kBAAM,aAAa,KAAK,OAAO,QAAQ,MAAM;AAC7C,kBAAM,eAAe,KAAK,OAAO,QAAQ,QAAQ;AAEjD,gBAAI,aAAa,WAAW,QACvB,eAAe,WAAW,QAAQ,eAAe,WAAW,QAAS;AACxE,oBAAM,IAAI,MAAM,sDAAsD;AAAA,YACxE;AACA,yBAAa;AAEb,kBAAM,OAAO,IAAI,kBAAkB,KAAK,OAAO,GAAG,KAAK,GAAG,aAAa;AACvE,mBAAO,KAAK,KAAK,cAAY;AAC3B,qBAAO;AAAA,gBACL,iBAAiB;AAAA;AAAA;AAAA,kBAGf,eAAe,aAAa;AAAA,kBAC5B,iBAAiB,eAAe;AAAA,gBAClC;AAAA,gBACA;AAAA,cACF;AAAA,YACF,CAAC;AAAA,UACH,CAAC,CAAC,EAAE,KAAK,OAAK;AACZ,iBAAK,YAAY;AACjB,mBAAO;AAAA,UACT,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA+BA,IAAI,qBAAqB;AACvB,YAAI,CAAC,KAAK,qBAAqB;AAC7B,eAAK,uBAAuB;AAAA,QAC9B;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,IAAI,oBAAoB;AACtB,YAAI,CAAC,KAAK,oBAAoB;AAC5B,eAAK,sBAAsB;AAAA,QAC7B;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,IAAI,6BAA6B;AAC/B,YAAI,CAAC,KAAK,6BAA6B;AACrC,eAAK,eAAe,KAAK,WAAW,KAAK,UAAU;AAAA,QACrD;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,IAAI,4BAA4B;AAC9B,YAAI,CAAC,KAAK,4BAA4B;AACpC,eAAK,eAAe,KAAK,WAAW,KAAK,UAAU;AAAA,QACrD;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,yBAAyB;AACvB,cAAM,WAAW,KAAK;AACtB,iBAAS,KAAK,KAAK,mCAAmC;AACtD,aAAK,sBAAsB;AAAA,MAC7B;AAAA,MAEA,wBAAwB;AACtB,cAAM,WAAW,KAAK;AACtB,iBAAS,KAAK,KAAK,0BAA0B;AAC7C,aAAK,qBAAqB;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,UAAU;AACZ,cAAM,UAAU,CAAC;AACjB,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,mBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,CAAC,EAAE,SAAS,QAAQ,QAAQ,KAAK;AAClE,oBAAQ,KAAK,KAAK,UAAU,CAAC,EAAE,SAAS,QAAQ,CAAC,CAAC;AAAA,UACpD;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAqBA,oBAAoB,OAAO;AACzB,cAAM,SAAS;AAAA,UACb,eAAe,KAAK,OAAO,OAAO,MAAM;AAAA,UACxC,iBAAiB,KAAK,OAAO,OAAO,QAAQ;AAAA,QAC9C;AAIA,cAAM,eAAe,aAAa;AAAA,UAAO;AAAA,UAAQ,KAAK;AAAA,UACpD,SAAS,SAASG,UAAS;AACzB,kBAAM,MAAM,QAAQ,gBAAgBA,SAAQ,gBAAgB;AAC5D,gBAAI,KAAK;AACP,qBAAO;AAAA,YACT;AAEA,mBAAQ,QAAQ,kBACRA,SAAQ,gBAAgB;AAAA,UAClC;AAAA,QAAC;AACH,cAAM,UAAU,KAAK,UAAU,YAAY;AAE3C,YAAI,CAAC,SAAS;AACZ,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,MAAM;AAAA,UACR;AAAA,QACF;AAEA,eAAO,QAAQ,SAAS,oBAAoB;AAAA,UAC1C,MAAM,OAAO,iBACV,QAAQ,gBAAgB,gBAAgB;AAAA,UAC3C,QAAQ,OAAO,mBACZ,QAAQ,gBAAgB,kBAAkB,OAAO,gBAC/C,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,UACL,MAAM,MAAM;AAAA,QACd,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,0BAA0B;AACxB,eAAO,KAAK,UAAU,MAAM,SAAS,GAAG;AACtC,iBAAO,EAAE,SAAS,wBAAwB;AAAA,QAC5C,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,iBAAiB,SAAS,eAAe;AACvC,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,gBAAM,UAAU,KAAK,UAAU,CAAC;AAEhC,gBAAM,UAAU,QAAQ,SAAS,iBAAiB,SAAS,IAAI;AAC/D,cAAI,SAAS;AACX,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,eAAe;AACjB,iBAAO;AAAA,QACT;AACA,cAAM,IAAI,MAAM,MAAM,UAAU,4BAA4B;AAAA,MAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoBA,qBAAqB,OAAO;AAC1B,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,gBAAM,UAAU,KAAK,UAAU,CAAC;AAIhC,cAAI,QAAQ,SAAS,iBAAiB,KAAK,OAAO,OAAO,QAAQ,CAAC,MAAM,IAAI;AAC1E;AAAA,UACF;AACA,gBAAM,oBAAoB,QAAQ,SAAS,qBAAqB,KAAK;AACrE,cAAI,mBAAmB;AACrB,kBAAM,MAAM;AAAA,cACV,MAAM,kBAAkB,QACrB,QAAQ,gBAAgB,gBAAgB;AAAA,cAC3C,QAAQ,kBAAkB,UACvB,QAAQ,gBAAgB,kBAAkB,kBAAkB,OAC1D,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,YACP;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACV;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,eAAe,MAAM,aAAa;AAChC,cAAM,oBAAoB,KAAK,8BAA8B,CAAC;AAC9D,cAAM,mBAAmB,KAAK,6BAA6B,CAAC;AAC5D,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,gBAAM,UAAU,KAAK,UAAU,CAAC;AAEhC,gBAAM,kBAAkB,CAAC;AACzB,kBAAQ,SAAS,YAAY,OAAK,gBAAgB,KAAK,CAAC,CAAC;AAEzD,mBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,kBAAM,UAAU,gBAAgB,CAAC;AAMjC,gBAAI,SAAS,KAAK,iBAAiB,QAAQ,SAAS,YAAY,MAAM,KAAK,aAAa;AACxF,iBAAK,SAAS,IAAI,MAAM;AACxB,qBAAS,KAAK,SAAS,QAAQ,MAAM;AAErC,gBAAIF,QAAO;AACX,gBAAI,QAAQ,MAAM;AAChB,mBAAK,OAAO,IAAI,QAAQ,IAAI;AAC5B,cAAAA,QAAO,KAAK,OAAO,QAAQ,QAAQ,IAAI;AAAA,YACzC;AAMA,kBAAM,kBAAkB;AAAA,cACtB;AAAA,cACA,eAAe,QAAQ,iBACpB,QAAQ,gBAAgB,gBAAgB;AAAA,cAC3C,iBAAiB,QAAQ,mBACtB,QAAQ,gBAAgB,kBAAkB,QAAQ,gBACjD,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,cACJ,cAAc,QAAQ;AAAA,cACtB,gBAAgB,QAAQ;AAAA,cACxB,MAAAA;AAAA,YACF;AAEA,8BAAkB,KAAK,eAAe;AACtC,gBAAI,OAAO,gBAAgB,iBAAiB,UAAU;AACpD,+BAAiB,KAAK,eAAe;AAAA,YACvC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MAEA,YAAY,WAAW,UAAU,QAAQ;AACvC,cAAM,UAAU,YAAY;AAC5B,cAAM,QAAQ,UAAU,kBAAkB;AAE1C,YAAI;AACJ,gBAAQ,OAAO;AAAA,UACf,KAAK,kBAAkB;AACrB,uBAAW,KAAK;AAChB;AAAA,UACF,KAAK,kBAAkB;AACrB,uBAAW,KAAK;AAChB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AAEA,cAAM,aAAa,KAAK;AACxB,iBAAS,IAAI,SAAS,SAAS;AAC7B,cAAI,SAAS;AACb,cAAI,QAAQ,WAAW,MAAM;AAC3B,qBAAS,KAAK,SAAS,GAAG,QAAQ,MAAM;AACxC,qBAAS,KAAK,iBAAiB,YAAY,QAAQ,KAAK,aAAa;AAAA,UACvE;AACA,iBAAO;AAAA,YACL;AAAA,YACA,eAAe,QAAQ;AAAA,YACvB,iBAAiB,QAAQ;AAAA,YACzB,cAAc,QAAQ;AAAA,YACtB,gBAAgB,QAAQ;AAAA,YACxB,MAAM,QAAQ,SAAS,OAAO,OAAO,KAAK,OAAO,GAAG,QAAQ,IAAI;AAAA,UAClE;AAAA,QACF,GAAG,IAAI,EAAE,QAAQ,WAAW,OAAO;AAAA,MACrC;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,aAAa,SAAS,WAAW,WACrB,aAAa,aAAa,OAAO;AAM3C,YAAI,QAAQ,SAAS,KAAK,GAAG;AAC3B,gBAAM,IAAI,UAAU,kDACE,QAAQ,SAAS,CAAC;AAAA,QAC1C;AACA,YAAI,QAAQ,WAAW,IAAI,GAAG;AAC5B,gBAAM,IAAI,UAAU,oDACE,QAAQ,WAAW,CAAC;AAAA,QAC5C;AAEA,eAAO,aAAa,OAAO,SAAS,WAAW,aAAa,KAAK;AAAA,MACnE;AAAA,MAEA,yBAAyB,OAAO;AAC9B,cAAM,OAAO,KAAK,OAAO,OAAO,MAAM;AAMtC,cAAM,SAAS;AAAA,UACb,QAAQ,KAAK,OAAO,OAAO,QAAQ;AAAA,UACnC,cAAc;AAAA,UACd,gBAAgB,KAAK,OAAO,OAAO,UAAU,CAAC;AAAA,QAChD;AAEA,eAAO,SAAS,KAAK,iBAAiB,OAAO,MAAM;AACnD,YAAI,OAAO,SAAS,GAAG;AACrB,iBAAO,CAAC;AAAA,QACV;AAEA,YAAI,OAAO,eAAe,GAAG;AAC3B,gBAAM,IAAI,MAAM,2BAA2B;AAAA,QAC7C;AAEA,YAAI,OAAO,iBAAiB,GAAG;AAC7B,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AAEA,cAAM,WAAW,CAAC;AAElB,YAAIC,SAAQ,KAAK;AAAA,UAAa;AAAA,UACA,KAAK;AAAA,UACL;AAAA,UACA;AAAA,UACA,KAAK;AAAA,UACL,aAAa;AAAA,QAAiB;AAC5D,YAAIA,UAAS,GAAG;AACd,cAAI,UAAU,KAAK,kBAAkBA,MAAK;AAE1C,cAAI,MAAM,WAAW,QAAW;AAC9B,kBAAM,eAAe,QAAQ;AAM7B,mBAAO,WAAW,QAAQ,iBAAiB,cAAc;AACvD,kBAAI,aAAa,QAAQ;AACzB,kBAAI,KAAK,wBAAwB,eAAe,MAAM;AACpD,6BAAa;AAAA,cACf;AACA,uBAAS,KAAK;AAAA,gBACZ,MAAM,KAAK,OAAO,SAAS,iBAAiB,IAAI;AAAA,gBAChD,QAAQ,KAAK,OAAO,SAAS,mBAAmB,IAAI;AAAA,gBACpD;AAAA,cACF,CAAC;AAED,wBAAU,KAAK,kBAAkB,EAAEA,MAAK;AAAA,YAC1C;AAAA,UACF,OAAO;AACL,kBAAM,iBAAiB,QAAQ;AAM/B,mBAAO,WACA,QAAQ,iBAAiB,QACzB,QAAQ,kBAAkB,gBAAgB;AAC/C,kBAAI,aAAa,QAAQ;AACzB,kBAAI,KAAK,wBAAwB,eAAe,MAAM;AACpD,6BAAa;AAAA,cACf;AACA,uBAAS,KAAK;AAAA,gBACZ,MAAM,KAAK,OAAO,SAAS,iBAAiB,IAAI;AAAA,gBAChD,QAAQ,KAAK,OAAO,SAAS,mBAAmB,IAAI;AAAA,gBACpD;AAAA,cACF,CAAC;AAED,wBAAU,KAAK,kBAAkB,EAAEA,MAAK;AAAA,YAC1C;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,UAAU;AACR,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,eAAK,UAAU,CAAC,EAAE,SAAS,QAAQ;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AACA,IAAAF,SAAQ,2BAA2B;AAMnC,aAAS,SAAS,YAAY,eAAe;AAC3C,UAAI,YAAY;AAChB,UAAI,OAAO,eAAe,UAAU;AAClC,oBAAY,KAAK,oBAAoB,UAAU;AAAA,MACjD;AAEA,YAAM,WAAW,UAAU,YAAY,OACjC,IAAI,yBAAyB,WAAW,aAAa,IACrD,IAAI,uBAAuB,WAAW,aAAa;AACzD,aAAO,QAAQ,QAAQ,QAAQ;AAAA,IACjC;AAEA,aAAS,YAAY,YAAY,eAAe;AAC9C,aAAO,uBAAuB,cAAc,YAAY,aAAa;AAAA,IACvE;AAAA;AAAA;;;ACptCA;AAAA,2EAAAI,UAAA;AAOA,QAAMC,sBAAqB,+BAAkC;AAC7D,QAAM,OAAO;AAIb,QAAM,gBAAgB;AAGtB,QAAM,eAAe;AAKrB,QAAM,eAAe;AAcrB,QAAM,aAAN,MAAiB;AAAA,MACf,YAAY,OAAO,SAAS,SAAS,SAAS,OAAO;AACnD,aAAK,WAAW,CAAC;AACjB,aAAK,iBAAiB,CAAC;AACvB,aAAK,OAAO,SAAS,OAAO,OAAO;AACnC,aAAK,SAAS,WAAW,OAAO,OAAO;AACvC,aAAK,SAAS,WAAW,OAAO,OAAO;AACvC,aAAK,OAAO,SAAS,OAAO,OAAO;AACnC,aAAK,YAAY,IAAI;AACrB,YAAI,WAAW;AAAM,eAAK,IAAI,OAAO;AAAA,MACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,OAAO,wBAAwB,gBAAgB,oBAAoB,eAAe;AAGhF,cAAM,OAAO,IAAI,WAAW;AAM5B,cAAM,iBAAiB,eAAe,MAAM,aAAa;AACzD,YAAI,sBAAsB;AAC1B,cAAM,gBAAgB,WAAW;AAC/B,gBAAM,eAAe,YAAY;AAEjC,gBAAM,UAAU,YAAY,KAAK;AACjC,iBAAO,eAAe;AAEtB,mBAAS,cAAc;AACrB,mBAAO,sBAAsB,eAAe,SACxC,eAAe,qBAAqB,IAAI;AAAA,UAC9C;AAAA,QACF;AAGA,YAAI,oBAAoB,GAAG,sBAAsB;AAKjD,YAAI,cAAc;AAClB,YAAI;AAEJ,2BAAmB,YAAY,SAAS,SAAS;AAC/C,cAAI,gBAAgB,MAAM;AAGxB,gBAAI,oBAAoB,QAAQ,eAAe;AAE7C,iCAAmB,aAAa,cAAc,CAAC;AAC/C;AACA,oCAAsB;AAAA,YAExB,OAAO;AAIL,yBAAW,eAAe,mBAAmB,KAAK;AAClD,oBAAM,OAAO,SAAS,OAAO,GAAG,QAAQ,kBACV,mBAAmB;AACjD,6BAAe,mBAAmB,IAAI,SAAS,OAAO,QAAQ,kBAC1B,mBAAmB;AACvD,oCAAsB,QAAQ;AAC9B,iCAAmB,aAAa,IAAI;AAEpC,4BAAc;AACd;AAAA,YACF;AAAA,UACF;AAIA,iBAAO,oBAAoB,QAAQ,eAAe;AAChD,iBAAK,IAAI,cAAc,CAAC;AACxB;AAAA,UACF;AACA,cAAI,sBAAsB,QAAQ,iBAAiB;AACjD,uBAAW,eAAe,mBAAmB,KAAK;AAClD,iBAAK,IAAI,SAAS,OAAO,GAAG,QAAQ,eAAe,CAAC;AACpD,2BAAe,mBAAmB,IAAI,SAAS,OAAO,QAAQ,eAAe;AAC7E,kCAAsB,QAAQ;AAAA,UAChC;AACA,wBAAc;AAAA,QAChB,GAAG,IAAI;AAEP,YAAI,sBAAsB,eAAe,QAAQ;AAC/C,cAAI,aAAa;AAEf,+BAAmB,aAAa,cAAc,CAAC;AAAA,UACjD;AAEA,eAAK,IAAI,eAAe,OAAO,mBAAmB,EAAE,KAAK,EAAE,CAAC;AAAA,QAC9D;AAGA,2BAAmB,QAAQ,QAAQ,SAAS,YAAY;AACtD,gBAAM,UAAU,mBAAmB,iBAAiB,UAAU;AAC9D,cAAI,WAAW,MAAM;AACnB,gBAAI,iBAAiB,MAAM;AACzB,2BAAa,KAAK,KAAK,eAAe,UAAU;AAAA,YAClD;AACA,iBAAK,iBAAiB,YAAY,OAAO;AAAA,UAC3C;AAAA,QACF,CAAC;AAED,eAAO;AAEP,iBAAS,mBAAmB,SAAS,MAAM;AACzC,cAAI,YAAY,QAAQ,QAAQ,WAAW,QAAW;AACpD,iBAAK,IAAI,IAAI;AAAA,UACf,OAAO;AACL,kBAAM,SAAS,gBACX,KAAK,KAAK,eAAe,QAAQ,MAAM,IACvC,QAAQ;AACZ,iBAAK,IAAI,IAAI;AAAA,cAAW,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR;AAAA,cACA;AAAA,cACA,QAAQ;AAAA,YAAI,CAAC;AAAA,UACvC;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,IAAI,QAAQ;AACV,YAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,iBAAO,QAAQ,SAAS,OAAO;AAC7B,iBAAK,IAAI,KAAK;AAAA,UAChB,GAAG,IAAI;AAAA,QACT,WAAW,OAAO,YAAY,KAAK,OAAO,WAAW,UAAU;AAC7D,cAAI,QAAQ;AACV,iBAAK,SAAS,KAAK,MAAM;AAAA,UAC3B;AAAA,QACF,OAAO;AACL,gBAAM,IAAI;AAAA,YACR,gFAAgF;AAAA,UAClF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,QAAQ,QAAQ;AACd,YAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,mBAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,iBAAK,QAAQ,OAAO,CAAC,CAAC;AAAA,UACxB;AAAA,QACF,WAAW,OAAO,YAAY,KAAK,OAAO,WAAW,UAAU;AAC7D,eAAK,SAAS,QAAQ,MAAM;AAAA,QAC9B,OAAO;AACL,gBAAM,IAAI;AAAA,YACR,gFAAgF;AAAA,UAClF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,KAAK,KAAK;AACR,YAAI;AACJ,iBAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,kBAAQ,KAAK,SAAS,CAAC;AACvB,cAAI,MAAM,YAAY,GAAG;AACvB,kBAAM,KAAK,GAAG;AAAA,UAChB,WAAW,UAAU,IAAI;AACvB,gBAAI,OAAO;AAAA,cAAE,QAAQ,KAAK;AAAA,cACZ,MAAM,KAAK;AAAA,cACX,QAAQ,KAAK;AAAA,cACb,MAAM,KAAK;AAAA,YAAK,CAAC;AAAA,UACjC;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,KAAK,MAAM;AACT,YAAI;AACJ,YAAI;AACJ,cAAM,MAAM,KAAK,SAAS;AAC1B,YAAI,MAAM,GAAG;AACX,wBAAc,CAAC;AACf,eAAK,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK;AAC5B,wBAAY,KAAK,KAAK,SAAS,CAAC,CAAC;AACjC,wBAAY,KAAK,IAAI;AAAA,UACvB;AACA,sBAAY,KAAK,KAAK,SAAS,CAAC,CAAC;AACjC,eAAK,WAAW;AAAA,QAClB;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,aAAa,UAAU,cAAc;AACnC,cAAM,YAAY,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AACxD,YAAI,UAAU,YAAY,GAAG;AAC3B,oBAAU,aAAa,UAAU,YAAY;AAAA,QAC/C,WAAW,OAAO,cAAc,UAAU;AACxC,eAAK,SAAS,KAAK,SAAS,SAAS,CAAC,IAAI,UAAU,QAAQ,UAAU,YAAY;AAAA,QACpF,OAAO;AACL,eAAK,SAAS,KAAK,GAAG,QAAQ,UAAU,YAAY,CAAC;AAAA,QACvD;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,iBAAiB,aAAa,gBAAgB;AAC5C,aAAK,eAAe,KAAK,YAAY,WAAW,CAAC,IAAI;AAAA,MACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,mBAAmB,KAAK;AACtB,iBAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,cAAI,KAAK,SAAS,CAAC,EAAE,YAAY,GAAG;AAClC,iBAAK,SAAS,CAAC,EAAE,mBAAmB,GAAG;AAAA,UACzC;AAAA,QACF;AAEA,cAAM,UAAU,OAAO,KAAK,KAAK,cAAc;AAC/C,iBAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK;AAClD,cAAI,KAAK,cAAc,QAAQ,CAAC,CAAC,GAAG,KAAK,eAAe,QAAQ,CAAC,CAAC,CAAC;AAAA,QACrE;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,WAAW;AACT,YAAIC,OAAM;AACV,aAAK,KAAK,SAAS,OAAO;AACxB,UAAAA,QAAO;AAAA,QACT,CAAC;AACD,eAAOA;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,sBAAsB,OAAO;AAC3B,cAAM,YAAY;AAAA,UAChB,MAAM;AAAA,UACN,MAAM;AAAA,UACN,QAAQ;AAAA,QACV;AACA,cAAM,MAAM,IAAID,oBAAmB,KAAK;AACxC,YAAI,sBAAsB;AAC1B,YAAI,qBAAqB;AACzB,YAAI,mBAAmB;AACvB,YAAI,qBAAqB;AACzB,YAAI,mBAAmB;AACvB,aAAK,KAAK,SAAS,OAAO,UAAU;AAClC,oBAAU,QAAQ;AAClB,cAAI,SAAS,WAAW,QACjB,SAAS,SAAS,QAClB,SAAS,WAAW,MAAM;AAC/B,gBAAI,uBAAuB,SAAS,UAC/B,qBAAqB,SAAS,QAC9B,uBAAuB,SAAS,UAChC,qBAAqB,SAAS,MAAM;AACvC,kBAAI,WAAW;AAAA,gBACb,QAAQ,SAAS;AAAA,gBACjB,UAAU;AAAA,kBACR,MAAM,SAAS;AAAA,kBACf,QAAQ,SAAS;AAAA,gBACnB;AAAA,gBACA,WAAW;AAAA,kBACT,MAAM,UAAU;AAAA,kBAChB,QAAQ,UAAU;AAAA,gBACpB;AAAA,gBACA,MAAM,SAAS;AAAA,cACjB,CAAC;AAAA,YACH;AACA,iCAAqB,SAAS;AAC9B,+BAAmB,SAAS;AAC5B,iCAAqB,SAAS;AAC9B,+BAAmB,SAAS;AAC5B,kCAAsB;AAAA,UACxB,WAAW,qBAAqB;AAC9B,gBAAI,WAAW;AAAA,cACb,WAAW;AAAA,gBACT,MAAM,UAAU;AAAA,gBAChB,QAAQ,UAAU;AAAA,cACpB;AAAA,YACF,CAAC;AACD,iCAAqB;AACrB,kCAAsB;AAAA,UACxB;AACA,mBAAS,MAAM,GAAG,SAAS,MAAM,QAAQ,MAAM,QAAQ,OAAO;AAC5D,gBAAI,MAAM,WAAW,GAAG,MAAM,cAAc;AAC1C,wBAAU;AACV,wBAAU,SAAS;AAEnB,kBAAI,MAAM,MAAM,QAAQ;AACtB,qCAAqB;AACrB,sCAAsB;AAAA,cACxB,WAAW,qBAAqB;AAC9B,oBAAI,WAAW;AAAA,kBACb,QAAQ,SAAS;AAAA,kBACjB,UAAU;AAAA,oBACR,MAAM,SAAS;AAAA,oBACf,QAAQ,SAAS;AAAA,kBACnB;AAAA,kBACA,WAAW;AAAA,oBACT,MAAM,UAAU;AAAA,oBAChB,QAAQ,UAAU;AAAA,kBACpB;AAAA,kBACA,MAAM,SAAS;AAAA,gBACjB,CAAC;AAAA,cACH;AAAA,YACF,OAAO;AACL,wBAAU;AAAA,YACZ;AAAA,UACF;AAAA,QACF,CAAC;AACD,aAAK,mBAAmB,SAAS,YAAY,eAAe;AAC1D,cAAI,iBAAiB,YAAY,aAAa;AAAA,QAChD,CAAC;AAED,eAAO,EAAE,MAAM,UAAU,MAAM,IAAI;AAAA,MACrC;AAAA,IACF;AAEA,IAAAD,SAAQ,aAAa;AAAA;AAAA;;;ACnZrB;AAAA,sEAAAG,UAAA;AAKA,IAAAA,SAAQ,qBAAqB,+BAAsC;AACnE,IAAAA,SAAQ,oBAAoB,8BAAqC;AACjE,IAAAA,SAAQ,aAAa,sBAA6B;AAAA;AAAA;;;ACPlD;AAAA,4CAAAC,UAAAC,SAAA;AAAA;AAEA,QAAM,OAAO;AACb,QAAM,YAAY;AAClB,QAAM,eAAe,KAAK;AAM1B,QAAM,cAAc;AACpB,QAAM,eAAe;AACrB,QAAM,gBAAgB;AACtB,QAAM,gBAAgB;AACtB,QAAM,WAAW;AACjB,QAAM,QAAQ;AACd,QAAM,aAAa,MAAM;AACzB,QAAM,eAAe,QAAQ;AAC7B,QAAM,aAAa,GAAG,mBAAmB;AACzC,QAAM,SAAS,MAAM;AACrB,QAAM,UAAU,MAAM,eAAe;AACrC,QAAM,eAAe,MAAM,mBAAmB;AAC9C,QAAM,gBAAgB,MAAM;AAC5B,QAAM,eAAe,MAAM;AAC3B,QAAM,OAAO,GAAG;AAEhB,QAAM,cAAc;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAMA,QAAM,gBAAgB;AAAA,MACpB,GAAG;AAAA,MAEH,eAAe,IAAI;AAAA,MACnB,OAAO;AAAA,MACP,MAAM,GAAG;AAAA,MACT,YAAY,GAAG,uBAAuB;AAAA,MACtC,QAAQ,MAAM;AAAA,MACd,SAAS,YAAY,cAAc,uBAAuB;AAAA,MAC1D,cAAc,MAAM,uBAAuB;AAAA,MAC3C,eAAe,MAAM,uBAAuB;AAAA,MAC5C,cAAc,MAAM;AAAA,MACpB,cAAc,SAAS;AAAA,MACvB,YAAY,OAAO;AAAA,IACrB;AAMA,QAAM,qBAAqB;AAAA,MACzB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,IACV;AAEA,IAAAA,QAAO,UAAU;AAAA,MACf,YAAY,OAAO;AAAA,MACnB;AAAA;AAAA,MAGA,iBAAiB;AAAA,MACjB,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB,6BAA6B;AAAA,MAC7B,4BAA4B;AAAA,MAC5B,wBAAwB;AAAA;AAAA,MAGxB,cAAc;AAAA,QACZ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,YAAY;AAAA,MACd;AAAA;AAAA,MAGA,QAAQ;AAAA;AAAA,MACR,QAAQ;AAAA;AAAA;AAAA,MAGR,kBAAkB;AAAA;AAAA,MAClB,kBAAkB;AAAA;AAAA,MAClB,kBAAkB;AAAA;AAAA,MAClB,kBAAkB;AAAA;AAAA,MAElB,uBAAuB;AAAA;AAAA,MACvB,wBAAwB;AAAA;AAAA,MAExB,eAAe;AAAA;AAAA;AAAA,MAGf,gBAAgB;AAAA;AAAA,MAChB,SAAS;AAAA;AAAA,MACT,qBAAqB;AAAA;AAAA,MACrB,sBAAsB;AAAA;AAAA,MACtB,wBAAwB;AAAA;AAAA,MACxB,YAAY;AAAA;AAAA,MACZ,YAAY;AAAA;AAAA,MACZ,UAAU;AAAA;AAAA,MACV,mBAAmB;AAAA;AAAA,MACnB,YAAY;AAAA;AAAA,MACZ,uBAAuB;AAAA;AAAA,MACvB,gBAAgB;AAAA;AAAA,MAChB,oBAAoB;AAAA;AAAA,MACpB,mBAAmB;AAAA;AAAA,MACnB,WAAW;AAAA;AAAA,MACX,mBAAmB;AAAA;AAAA,MACnB,yBAAyB;AAAA;AAAA,MACzB,uBAAuB;AAAA;AAAA,MACvB,0BAA0B;AAAA;AAAA,MAC1B,gBAAgB;AAAA;AAAA,MAChB,qBAAqB;AAAA;AAAA,MACrB,cAAc;AAAA;AAAA,MACd,WAAW;AAAA;AAAA,MACX,oBAAoB;AAAA;AAAA,MACpB,0BAA0B;AAAA;AAAA,MAC1B,wBAAwB;AAAA;AAAA,MACxB,2BAA2B;AAAA;AAAA,MAC3B,gBAAgB;AAAA;AAAA,MAChB,mBAAmB;AAAA;AAAA,MACnB,YAAY;AAAA;AAAA,MACZ,UAAU;AAAA;AAAA,MACV,iBAAiB;AAAA;AAAA,MACjB,oBAAoB;AAAA;AAAA,MACpB,+BAA+B;AAAA;AAAA,MAE/B,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA,MAMV,aAAa,OAAO;AAClB,eAAO;AAAA,UACL,KAAK,EAAE,MAAM,UAAU,MAAM,aAAa,OAAO,KAAK,MAAM,QAAQ;AAAA,UACpE,KAAK,EAAE,MAAM,SAAS,MAAM,OAAO,OAAO,KAAK;AAAA,UAC/C,KAAK,EAAE,MAAM,QAAQ,MAAM,OAAO,OAAO,KAAK;AAAA,UAC9C,KAAK,EAAE,MAAM,QAAQ,MAAM,OAAO,OAAO,KAAK;AAAA,UAC9C,KAAK,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO,IAAI;AAAA,QAC7C;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAMA,UAAUC,QAAO;AACf,eAAOA,WAAU,OAAO,gBAAgB;AAAA,MAC1C;AAAA,IACF;AAAA;AAAA;;;AClLA;AAAA,wCAAAC,UAAA;AAAA;AAEA,QAAM,OAAO;AACb,QAAMC,SAAQ,QAAQ,aAAa;AACnC,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,IAAAD,SAAQ,WAAW,SAAO,QAAQ,QAAQ,OAAO,QAAQ,YAAY,CAAC,MAAM,QAAQ,GAAG;AACvF,IAAAA,SAAQ,gBAAgB,CAAAE,SAAO,oBAAoB,KAAKA,IAAG;AAC3D,IAAAF,SAAQ,cAAc,CAAAE,SAAOA,KAAI,WAAW,KAAKF,SAAQ,cAAcE,IAAG;AAC1E,IAAAF,SAAQ,cAAc,CAAAE,SAAOA,KAAI,QAAQ,4BAA4B,MAAM;AAC3E,IAAAF,SAAQ,iBAAiB,CAAAE,SAAOA,KAAI,QAAQ,iBAAiB,GAAG;AAEhE,IAAAF,SAAQ,oBAAoB,CAAAE,SAAO;AACjC,aAAOA,KAAI,QAAQ,wBAAwB,WAAS;AAClD,eAAO,UAAU,OAAO,KAAK;AAAA,MAC/B,CAAC;AAAA,IACH;AAEA,IAAAF,SAAQ,sBAAsB,MAAM;AAClC,YAAM,OAAO,QAAQ,QAAQ,MAAM,CAAC,EAAE,MAAM,GAAG,EAAE,IAAI,MAAM;AAC3D,UAAI,KAAK,WAAW,KAAK,KAAK,CAAC,KAAK,KAAM,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,KAAK,IAAK;AACzE,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,SAAQ,YAAY,CAAAG,aAAW;AAC7B,UAAIA,YAAW,OAAOA,SAAQ,YAAY,WAAW;AACnD,eAAOA,SAAQ;AAAA,MACjB;AACA,aAAOF,WAAU,QAAQ,KAAK,QAAQ;AAAA,IACxC;AAEA,IAAAD,SAAQ,aAAa,CAAC,OAAO,MAAM,YAAY;AAC7C,YAAM,MAAM,MAAM,YAAY,MAAM,OAAO;AAC3C,UAAI,QAAQ;AAAI,eAAO;AACvB,UAAI,MAAM,MAAM,CAAC,MAAM;AAAM,eAAOA,SAAQ,WAAW,OAAO,MAAM,MAAM,CAAC;AAC3E,aAAO,GAAG,MAAM,MAAM,GAAG,GAAG,MAAM,MAAM,MAAM,GAAG;AAAA,IACnD;AAEA,IAAAA,SAAQ,eAAe,CAAC,OAAO,QAAQ,CAAC,MAAM;AAC5C,UAAI,SAAS;AACb,UAAI,OAAO,WAAW,IAAI,GAAG;AAC3B,iBAAS,OAAO,MAAM,CAAC;AACvB,cAAM,SAAS;AAAA,MACjB;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,SAAQ,aAAa,CAAC,OAAO,QAAQ,CAAC,GAAGG,WAAU,CAAC,MAAM;AACxD,YAAM,UAAUA,SAAQ,WAAW,KAAK;AACxC,YAAM,SAASA,SAAQ,WAAW,KAAK;AAEvC,UAAI,SAAS,GAAG,aAAa,SAAS;AACtC,UAAI,MAAM,YAAY,MAAM;AAC1B,iBAAS,UAAU;AAAA,MACrB;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC/DA;AAAA,uCAAAC,UAAAC,SAAA;AAAA;AAEA,QAAM,QAAQ;AACd,QAAM;AAAA,MACJ;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,IACF,IAAI;AAEJ,QAAM,kBAAkB,UAAQ;AAC9B,aAAO,SAAS,sBAAsB,SAAS;AAAA,IACjD;AAEA,QAAM,QAAQ,WAAS;AACrB,UAAI,MAAM,aAAa,MAAM;AAC3B,cAAM,QAAQ,MAAM,aAAa,WAAW;AAAA,MAC9C;AAAA,IACF;AAmBA,QAAM,OAAO,CAAC,OAAOC,aAAY;AAC/B,YAAM,OAAOA,YAAW,CAAC;AAEzB,YAAM,SAAS,MAAM,SAAS;AAC9B,YAAM,YAAY,KAAK,UAAU,QAAQ,KAAK,cAAc;AAC5D,YAAM,UAAU,CAAC;AACjB,YAAM,SAAS,CAAC;AAChB,YAAM,QAAQ,CAAC;AAEf,UAAIC,OAAM;AACV,UAAIC,SAAQ;AACZ,UAAIC,SAAQ;AACZ,UAAI,YAAY;AAChB,UAAI,UAAU;AACd,UAAI,YAAY;AAChB,UAAI,SAAS;AACb,UAAI,YAAY;AAChB,UAAI,aAAa;AACjB,UAAI,eAAe;AACnB,UAAI,cAAc;AAClB,UAAI,UAAU;AACd,UAAI,iBAAiB;AACrB,UAAI,WAAW;AACf,UAAI,SAAS;AACb,UAAI;AACJ,UAAI;AACJ,UAAI,QAAQ,EAAE,OAAO,IAAI,OAAO,GAAG,QAAQ,MAAM;AAEjD,YAAM,MAAM,MAAMD,UAAS;AAC3B,YAAM,OAAO,MAAMD,KAAI,WAAWC,SAAQ,CAAC;AAC3C,YAAM,UAAU,MAAM;AACpB,eAAO;AACP,eAAOD,KAAI,WAAW,EAAEC,MAAK;AAAA,MAC/B;AAEA,aAAOA,SAAQ,QAAQ;AACrB,eAAO,QAAQ;AACf,YAAI;AAEJ,YAAI,SAAS,qBAAqB;AAChC,wBAAc,MAAM,cAAc;AAClC,iBAAO,QAAQ;AAEf,cAAI,SAAS,uBAAuB;AAClC,2BAAe;AAAA,UACjB;AACA;AAAA,QACF;AAEA,YAAI,iBAAiB,QAAQ,SAAS,uBAAuB;AAC3D;AAEA,iBAAO,IAAI,MAAM,SAAS,OAAO,QAAQ,IAAI;AAC3C,gBAAI,SAAS,qBAAqB;AAChC,4BAAc,MAAM,cAAc;AAClC,sBAAQ;AACR;AAAA,YACF;AAEA,gBAAI,SAAS,uBAAuB;AAClC;AACA;AAAA,YACF;AAEA,gBAAI,iBAAiB,QAAQ,SAAS,aAAa,OAAO,QAAQ,OAAO,UAAU;AACjF,wBAAU,MAAM,UAAU;AAC1B,uBAAS,MAAM,SAAS;AACxB,yBAAW;AAEX,kBAAI,cAAc,MAAM;AACtB;AAAA,cACF;AAEA;AAAA,YACF;AAEA,gBAAI,iBAAiB,QAAQ,SAAS,YAAY;AAChD,wBAAU,MAAM,UAAU;AAC1B,uBAAS,MAAM,SAAS;AACxB,yBAAW;AAEX,kBAAI,cAAc,MAAM;AACtB;AAAA,cACF;AAEA;AAAA,YACF;AAEA,gBAAI,SAAS,wBAAwB;AACnC;AAEA,kBAAI,WAAW,GAAG;AAChB,+BAAe;AACf,0BAAU,MAAM,UAAU;AAC1B,2BAAW;AACX;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,cAAI,cAAc,MAAM;AACtB;AAAA,UACF;AAEA;AAAA,QACF;AAEA,YAAI,SAAS,oBAAoB;AAC/B,kBAAQ,KAAKA,MAAK;AAClB,iBAAO,KAAK,KAAK;AACjB,kBAAQ,EAAE,OAAO,IAAI,OAAO,GAAG,QAAQ,MAAM;AAE7C,cAAI,aAAa;AAAM;AACvB,cAAI,SAAS,YAAYA,WAAWC,SAAQ,GAAI;AAC9C,YAAAA,UAAS;AACT;AAAA,UACF;AAEA,sBAAYD,SAAQ;AACpB;AAAA,QACF;AAEA,YAAI,KAAK,UAAU,MAAM;AACvB,gBAAM,gBAAgB,SAAS,aAC1B,SAAS,WACT,SAAS,iBACT,SAAS,sBACT,SAAS;AAEd,cAAI,kBAAkB,QAAQ,KAAK,MAAM,uBAAuB;AAC9D,qBAAS,MAAM,SAAS;AACxB,wBAAY,MAAM,YAAY;AAC9B,uBAAW;AACX,gBAAI,SAAS,yBAAyBA,WAAUC,QAAO;AACrD,+BAAiB;AAAA,YACnB;AAEA,gBAAI,cAAc,MAAM;AACtB,qBAAO,IAAI,MAAM,SAAS,OAAO,QAAQ,IAAI;AAC3C,oBAAI,SAAS,qBAAqB;AAChC,gCAAc,MAAM,cAAc;AAClC,yBAAO,QAAQ;AACf;AAAA,gBACF;AAEA,oBAAI,SAAS,wBAAwB;AACnC,2BAAS,MAAM,SAAS;AACxB,6BAAW;AACX;AAAA,gBACF;AAAA,cACF;AACA;AAAA,YACF;AACA;AAAA,UACF;AAAA,QACF;AAEA,YAAI,SAAS,eAAe;AAC1B,cAAI,SAAS;AAAe,yBAAa,MAAM,aAAa;AAC5D,mBAAS,MAAM,SAAS;AACxB,qBAAW;AAEX,cAAI,cAAc,MAAM;AACtB;AAAA,UACF;AACA;AAAA,QACF;AAEA,YAAI,SAAS,oBAAoB;AAC/B,mBAAS,MAAM,SAAS;AACxB,qBAAW;AAEX,cAAI,cAAc,MAAM;AACtB;AAAA,UACF;AACA;AAAA,QACF;AAEA,YAAI,SAAS,0BAA0B;AACrC,iBAAO,IAAI,MAAM,SAAS,OAAO,QAAQ,IAAI;AAC3C,gBAAI,SAAS,qBAAqB;AAChC,4BAAc,MAAM,cAAc;AAClC,sBAAQ;AACR;AAAA,YACF;AAEA,gBAAI,SAAS,2BAA2B;AACtC,0BAAY,MAAM,YAAY;AAC9B,uBAAS,MAAM,SAAS;AACxB,yBAAW;AACX;AAAA,YACF;AAAA,UACF;AAEA,cAAI,cAAc,MAAM;AACtB;AAAA,UACF;AAEA;AAAA,QACF;AAEA,YAAI,KAAK,aAAa,QAAQ,SAAS,yBAAyBD,WAAUC,QAAO;AAC/E,oBAAU,MAAM,UAAU;AAC1B,UAAAA;AACA;AAAA,QACF;AAEA,YAAI,KAAK,YAAY,QAAQ,SAAS,uBAAuB;AAC3D,mBAAS,MAAM,SAAS;AAExB,cAAI,cAAc,MAAM;AACtB,mBAAO,IAAI,MAAM,SAAS,OAAO,QAAQ,IAAI;AAC3C,kBAAI,SAAS,uBAAuB;AAClC,8BAAc,MAAM,cAAc;AAClC,uBAAO,QAAQ;AACf;AAAA,cACF;AAEA,kBAAI,SAAS,wBAAwB;AACnC,2BAAW;AACX;AAAA,cACF;AAAA,YACF;AACA;AAAA,UACF;AACA;AAAA,QACF;AAEA,YAAI,WAAW,MAAM;AACnB,qBAAW;AAEX,cAAI,cAAc,MAAM;AACtB;AAAA,UACF;AAEA;AAAA,QACF;AAAA,MACF;AAEA,UAAI,KAAK,UAAU,MAAM;AACvB,oBAAY;AACZ,iBAAS;AAAA,MACX;AAEA,UAAI,OAAOF;AACX,UAAI,SAAS;AACb,UAAI,OAAO;AAEX,UAAIE,SAAQ,GAAG;AACb,iBAASF,KAAI,MAAM,GAAGE,MAAK;AAC3B,QAAAF,OAAMA,KAAI,MAAME,MAAK;AACrB,qBAAaA;AAAA,MACf;AAEA,UAAI,QAAQ,WAAW,QAAQ,YAAY,GAAG;AAC5C,eAAOF,KAAI,MAAM,GAAG,SAAS;AAC7B,eAAOA,KAAI,MAAM,SAAS;AAAA,MAC5B,WAAW,WAAW,MAAM;AAC1B,eAAO;AACP,eAAOA;AAAA,MACT,OAAO;AACL,eAAOA;AAAA,MACT;AAEA,UAAI,QAAQ,SAAS,MAAM,SAAS,OAAO,SAASA,MAAK;AACvD,YAAI,gBAAgB,KAAK,WAAW,KAAK,SAAS,CAAC,CAAC,GAAG;AACrD,iBAAO,KAAK,MAAM,GAAG,EAAE;AAAA,QACzB;AAAA,MACF;AAEA,UAAI,KAAK,aAAa,MAAM;AAC1B,YAAI;AAAM,iBAAO,MAAM,kBAAkB,IAAI;AAE7C,YAAI,QAAQ,gBAAgB,MAAM;AAChC,iBAAO,MAAM,kBAAkB,IAAI;AAAA,QACrC;AAAA,MACF;AAEA,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA;AAAA,QACA,OAAAE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI,KAAK,WAAW,MAAM;AACxB,cAAM,WAAW;AACjB,YAAI,CAAC,gBAAgB,IAAI,GAAG;AAC1B,iBAAO,KAAK,KAAK;AAAA,QACnB;AACA,cAAM,SAAS;AAAA,MACjB;AAEA,UAAI,KAAK,UAAU,QAAQ,KAAK,WAAW,MAAM;AAC/C,YAAI;AAEJ,iBAAS,MAAM,GAAG,MAAM,QAAQ,QAAQ,OAAO;AAC7C,gBAAM,IAAI,YAAY,YAAY,IAAIA;AACtC,gBAAM,IAAI,QAAQ,GAAG;AACrB,gBAAM,QAAQ,MAAM,MAAM,GAAG,CAAC;AAC9B,cAAI,KAAK,QAAQ;AACf,gBAAI,QAAQ,KAAKA,WAAU,GAAG;AAC5B,qBAAO,GAAG,EAAE,WAAW;AACvB,qBAAO,GAAG,EAAE,QAAQ;AAAA,YACtB,OAAO;AACL,qBAAO,GAAG,EAAE,QAAQ;AAAA,YACtB;AACA,kBAAM,OAAO,GAAG,CAAC;AACjB,kBAAM,YAAY,OAAO,GAAG,EAAE;AAAA,UAChC;AACA,cAAI,QAAQ,KAAK,UAAU,IAAI;AAC7B,kBAAM,KAAK,KAAK;AAAA,UAClB;AACA,sBAAY;AAAA,QACd;AAEA,YAAI,aAAa,YAAY,IAAI,MAAM,QAAQ;AAC7C,gBAAM,QAAQ,MAAM,MAAM,YAAY,CAAC;AACvC,gBAAM,KAAK,KAAK;AAEhB,cAAI,KAAK,QAAQ;AACf,mBAAO,OAAO,SAAS,CAAC,EAAE,QAAQ;AAClC,kBAAM,OAAO,OAAO,SAAS,CAAC,CAAC;AAC/B,kBAAM,YAAY,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,UAC9C;AAAA,QACF;AAEA,cAAM,UAAU;AAChB,cAAM,QAAQ;AAAA,MAChB;AAEA,aAAO;AAAA,IACT;AAEA,IAAAJ,QAAO,UAAU;AAAA;AAAA;;;ACtYjB;AAAA,wCAAAK,UAAAC,SAAA;AAAA;AAEA,QAAMC,aAAY;AAClB,QAAM,QAAQ;AAMd,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAIA;AAMJ,QAAM,cAAc,CAAC,MAAMC,aAAY;AACrC,UAAI,OAAOA,SAAQ,gBAAgB,YAAY;AAC7C,eAAOA,SAAQ,YAAY,GAAG,MAAMA,QAAO;AAAA,MAC7C;AAEA,WAAK,KAAK;AACV,YAAM,QAAQ,IAAI,KAAK,KAAK,GAAG;AAE/B,UAAI;AAEF,YAAI,OAAO,KAAK;AAAA,MAClB,SAAS,IAAP;AACA,eAAO,KAAK,IAAI,OAAK,MAAM,YAAY,CAAC,CAAC,EAAE,KAAK,IAAI;AAAA,MACtD;AAEA,aAAO;AAAA,IACT;AAMA,QAAM,cAAc,CAAC,MAAM,SAAS;AAClC,aAAO,WAAW,UAAU,oBAAoB;AAAA,IAClD;AASA,QAAMC,SAAQ,CAAC,OAAOD,aAAY;AAChC,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,UAAU,mBAAmB;AAAA,MACzC;AAEA,cAAQ,aAAa,KAAK,KAAK;AAE/B,YAAM,OAAO,EAAE,GAAGA,SAAQ;AAC1B,YAAM,MAAM,OAAO,KAAK,cAAc,WAAW,KAAK,IAAI,YAAY,KAAK,SAAS,IAAI;AAExF,UAAI,MAAM,MAAM;AAChB,UAAI,MAAM,KAAK;AACb,cAAM,IAAI,YAAY,iBAAiB,wCAAwC,KAAK;AAAA,MACtF;AAEA,YAAM,MAAM,EAAE,MAAM,OAAO,OAAO,IAAI,QAAQ,KAAK,WAAW,GAAG;AACjE,YAAM,SAAS,CAAC,GAAG;AAEnB,YAAM,UAAU,KAAK,UAAU,KAAK;AACpC,YAAME,SAAQ,MAAM,UAAUF,QAAO;AAGrC,YAAM,iBAAiBD,WAAU,UAAUG,MAAK;AAChD,YAAM,gBAAgBH,WAAU,aAAa,cAAc;AAE3D,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AAEJ,YAAM,WAAW,CAAAI,UAAQ;AACvB,eAAO,IAAI,gBAAgB,eAAeA,MAAK,MAAM,aAAa;AAAA,MACpE;AAEA,YAAM,QAAQ,KAAK,MAAM,KAAK;AAC9B,YAAM,aAAa,KAAK,MAAM,QAAQ;AACtC,UAAI,OAAO,KAAK,SAAS,OAAO,SAAS,IAAI,IAAI;AAEjD,UAAI,KAAK,SAAS;AAChB,eAAO,IAAI;AAAA,MACb;AAGA,UAAI,OAAO,KAAK,UAAU,WAAW;AACnC,aAAK,YAAY,KAAK;AAAA,MACxB;AAEA,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA,OAAO;AAAA,QACP,OAAO;AAAA,QACP,KAAK,KAAK,QAAQ;AAAA,QAClB,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,SAAS;AAAA,QACT,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,UAAU;AAAA,QACV;AAAA,MACF;AAEA,cAAQ,MAAM,aAAa,OAAO,KAAK;AACvC,YAAM,MAAM;AAEZ,YAAM,WAAW,CAAC;AAClB,YAAM,SAAS,CAAC;AAChB,YAAM,QAAQ,CAAC;AACf,UAAI,OAAO;AACX,UAAI;AAMJ,YAAM,MAAM,MAAM,MAAM,UAAU,MAAM;AACxC,YAAM,OAAO,MAAM,OAAO,CAAC,IAAI,MAAM,MAAM,MAAM,QAAQ,CAAC;AAC1D,YAAM,UAAU,MAAM,UAAU,MAAM,MAAM,EAAE,MAAM,KAAK,KAAK;AAC9D,YAAM,YAAY,MAAM,MAAM,MAAM,MAAM,QAAQ,CAAC;AACnD,YAAM,UAAU,CAACC,SAAQ,IAAI,MAAM,MAAM;AACvC,cAAM,YAAYA;AAClB,cAAM,SAAS;AAAA,MACjB;AAEA,YAAM,SAAS,WAAS;AACtB,cAAM,UAAU,MAAM,UAAU,OAAO,MAAM,SAAS,MAAM;AAC5D,gBAAQ,MAAM,KAAK;AAAA,MACrB;AAEA,YAAM,SAAS,MAAM;AACnB,YAAI,QAAQ;AAEZ,eAAO,KAAK,MAAM,QAAQ,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,MAAM;AAC7D,kBAAQ;AACR,gBAAM;AACN;AAAA,QACF;AAEA,YAAI,QAAQ,MAAM,GAAG;AACnB,iBAAO;AAAA,QACT;AAEA,cAAM,UAAU;AAChB,cAAM;AACN,eAAO;AAAA,MACT;AAEA,YAAM,YAAY,UAAQ;AACxB,cAAM,IAAI;AACV,cAAM,KAAK,IAAI;AAAA,MACjB;AAEA,YAAM,YAAY,UAAQ;AACxB,cAAM,IAAI;AACV,cAAM,IAAI;AAAA,MACZ;AAUA,YAAM,OAAO,SAAO;AAClB,YAAI,KAAK,SAAS,YAAY;AAC5B,gBAAM,UAAU,MAAM,SAAS,MAAM,IAAI,SAAS,WAAW,IAAI,SAAS;AAC1E,gBAAM,YAAY,IAAI,YAAY,QAAS,SAAS,WAAW,IAAI,SAAS,UAAU,IAAI,SAAS;AAEnG,cAAI,IAAI,SAAS,WAAW,IAAI,SAAS,WAAW,CAAC,WAAW,CAAC,WAAW;AAC1E,kBAAM,SAAS,MAAM,OAAO,MAAM,GAAG,CAAC,KAAK,OAAO,MAAM;AACxD,iBAAK,OAAO;AACZ,iBAAK,QAAQ;AACb,iBAAK,SAAS;AACd,kBAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAEA,YAAI,SAAS,UAAU,IAAI,SAAS,SAAS;AAC3C,mBAAS,SAAS,SAAS,CAAC,EAAE,SAAS,IAAI;AAAA,QAC7C;AAEA,YAAI,IAAI,SAAS,IAAI;AAAQ,iBAAO,GAAG;AACvC,YAAI,QAAQ,KAAK,SAAS,UAAU,IAAI,SAAS,QAAQ;AACvD,eAAK,SAAS,IAAI;AAClB,eAAK,UAAU,KAAK,UAAU,MAAM,IAAI;AACxC;AAAA,QACF;AAEA,YAAI,OAAO;AACX,eAAO,KAAK,GAAG;AACf,eAAO;AAAA,MACT;AAEA,YAAM,cAAc,CAAC,MAAMA,WAAU;AACnC,cAAM,QAAQ,EAAE,GAAG,cAAcA,MAAK,GAAG,YAAY,GAAG,OAAO,GAAG;AAElE,cAAM,OAAO;AACb,cAAM,SAAS,MAAM;AACrB,cAAM,SAAS,MAAM;AACrB,cAAM,UAAU,KAAK,UAAU,MAAM,MAAM,MAAM;AAEjD,kBAAU,QAAQ;AAClB,aAAK,EAAE,MAAM,OAAAA,QAAO,QAAQ,MAAM,SAAS,KAAK,SAAS,CAAC;AAC1D,aAAK,EAAE,MAAM,SAAS,SAAS,MAAM,OAAO,QAAQ,GAAG,OAAO,CAAC;AAC/D,iBAAS,KAAK,KAAK;AAAA,MACrB;AAEA,YAAM,eAAe,WAAS;AAC5B,YAAI,SAAS,MAAM,SAAS,KAAK,UAAU,MAAM;AACjD,YAAI;AAEJ,YAAI,MAAM,SAAS,UAAU;AAC3B,cAAI,cAAc;AAElB,cAAI,MAAM,SAAS,MAAM,MAAM,SAAS,KAAK,MAAM,MAAM,SAAS,GAAG,GAAG;AACtE,0BAAc,SAAS,IAAI;AAAA,UAC7B;AAEA,cAAI,gBAAgB,QAAQ,IAAI,KAAK,QAAQ,KAAK,UAAU,CAAC,GAAG;AAC9D,qBAAS,MAAM,QAAQ,OAAO;AAAA,UAChC;AAEA,cAAI,MAAM,MAAM,SAAS,GAAG,MAAM,OAAO,UAAU,MAAM,eAAe,KAAK,IAAI,GAAG;AAMlF,kBAAM,aAAaH,OAAM,MAAM,EAAE,GAAGD,UAAS,WAAW,MAAM,CAAC,EAAE;AAEjE,qBAAS,MAAM,QAAQ,IAAI,cAAc;AAAA,UAC3C;AAEA,cAAI,MAAM,KAAK,SAAS,OAAO;AAC7B,kBAAM,iBAAiB;AAAA,UACzB;AAAA,QACF;AAEA,aAAK,EAAE,MAAM,SAAS,SAAS,MAAM,OAAO,OAAO,CAAC;AACpD,kBAAU,QAAQ;AAAA,MACpB;AAMA,UAAI,KAAK,cAAc,SAAS,CAAC,sBAAsB,KAAK,KAAK,GAAG;AAClE,YAAI,cAAc;AAElB,YAAI,SAAS,MAAM,QAAQ,6BAA6B,CAAC,GAAG,KAAK,OAAO,OAAO,MAAMK,WAAU;AAC7F,cAAI,UAAU,MAAM;AAClB,0BAAc;AACd,mBAAO;AAAA,UACT;AAEA,cAAI,UAAU,KAAK;AACjB,gBAAI,KAAK;AACP,qBAAO,MAAM,SAAS,OAAO,MAAM,OAAO,KAAK,MAAM,IAAI;AAAA,YAC3D;AACA,gBAAIA,WAAU,GAAG;AACf,qBAAO,cAAc,OAAO,MAAM,OAAO,KAAK,MAAM,IAAI;AAAA,YAC1D;AACA,mBAAO,MAAM,OAAO,MAAM,MAAM;AAAA,UAClC;AAEA,cAAI,UAAU,KAAK;AACjB,mBAAO,YAAY,OAAO,MAAM,MAAM;AAAA,UACxC;AAEA,cAAI,UAAU,KAAK;AACjB,gBAAI,KAAK;AACP,qBAAO,MAAM,SAAS,OAAO,OAAO;AAAA,YACtC;AACA,mBAAO;AAAA,UACT;AACA,iBAAO,MAAM,IAAI,KAAK;AAAA,QACxB,CAAC;AAED,YAAI,gBAAgB,MAAM;AACxB,cAAI,KAAK,aAAa,MAAM;AAC1B,qBAAS,OAAO,QAAQ,OAAO,EAAE;AAAA,UACnC,OAAO;AACL,qBAAS,OAAO,QAAQ,QAAQ,OAAK;AACnC,qBAAO,EAAE,SAAS,MAAM,IAAI,SAAU,IAAI,OAAO;AAAA,YACnD,CAAC;AAAA,UACH;AAAA,QACF;AAEA,YAAI,WAAW,SAAS,KAAK,aAAa,MAAM;AAC9C,gBAAM,SAAS;AACf,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,MAAM,WAAW,QAAQ,OAAOL,QAAO;AACtD,eAAO;AAAA,MACT;AAMA,aAAO,CAAC,IAAI,GAAG;AACb,gBAAQ,QAAQ;AAEhB,YAAI,UAAU,MAAU;AACtB;AAAA,QACF;AAMA,YAAI,UAAU,MAAM;AAClB,gBAAM,OAAO,KAAK;AAElB,cAAI,SAAS,OAAO,KAAK,SAAS,MAAM;AACtC;AAAA,UACF;AAEA,cAAI,SAAS,OAAO,SAAS,KAAK;AAChC;AAAA,UACF;AAEA,cAAI,CAAC,MAAM;AACT,qBAAS;AACT,iBAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAC5B;AAAA,UACF;AAGA,gBAAM,QAAQ,OAAO,KAAK,UAAU,CAAC;AACrC,cAAI,UAAU;AAEd,cAAI,SAAS,MAAM,CAAC,EAAE,SAAS,GAAG;AAChC,sBAAU,MAAM,CAAC,EAAE;AACnB,kBAAM,SAAS;AACf,gBAAI,UAAU,MAAM,GAAG;AACrB,uBAAS;AAAA,YACX;AAAA,UACF;AAEA,cAAI,KAAK,aAAa,MAAM;AAC1B,oBAAQ,QAAQ;AAAA,UAClB,OAAO;AACL,qBAAS,QAAQ;AAAA,UACnB;AAEA,cAAI,MAAM,aAAa,GAAG;AACxB,iBAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAC5B;AAAA,UACF;AAAA,QACF;AAOA,YAAI,MAAM,WAAW,MAAM,UAAU,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,OAAO;AACtF,cAAI,KAAK,UAAU,SAAS,UAAU,KAAK;AACzC,kBAAM,QAAQ,KAAK,MAAM,MAAM,CAAC;AAChC,gBAAI,MAAM,SAAS,GAAG,GAAG;AACvB,mBAAK,QAAQ;AAEb,kBAAI,MAAM,SAAS,GAAG,GAAG;AACvB,sBAAM,MAAM,KAAK,MAAM,YAAY,GAAG;AACtC,sBAAM,MAAM,KAAK,MAAM,MAAM,GAAG,GAAG;AACnC,sBAAMM,QAAO,KAAK,MAAM,MAAM,MAAM,CAAC;AACrC,sBAAMC,SAAQ,mBAAmBD,KAAI;AACrC,oBAAIC,QAAO;AACT,uBAAK,QAAQ,MAAMA;AACnB,wBAAM,YAAY;AAClB,0BAAQ;AAER,sBAAI,CAAC,IAAI,UAAU,OAAO,QAAQ,IAAI,MAAM,GAAG;AAC7C,wBAAI,SAAS;AAAA,kBACf;AACA;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,cAAK,UAAU,OAAO,KAAK,MAAM,OAAS,UAAU,OAAO,KAAK,MAAM,KAAM;AAC1E,oBAAQ,KAAK;AAAA,UACf;AAEA,cAAI,UAAU,QAAQ,KAAK,UAAU,OAAO,KAAK,UAAU,OAAO;AAChE,oBAAQ,KAAK;AAAA,UACf;AAEA,cAAI,KAAK,UAAU,QAAQ,UAAU,OAAO,KAAK,UAAU,KAAK;AAC9D,oBAAQ;AAAA,UACV;AAEA,eAAK,SAAS;AACd,iBAAO,EAAE,MAAM,CAAC;AAChB;AAAA,QACF;AAOA,YAAI,MAAM,WAAW,KAAK,UAAU,KAAK;AACvC,kBAAQ,MAAM,YAAY,KAAK;AAC/B,eAAK,SAAS;AACd,iBAAO,EAAE,MAAM,CAAC;AAChB;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,gBAAM,SAAS,MAAM,WAAW,IAAI,IAAI;AACxC,cAAI,KAAK,eAAe,MAAM;AAC5B,iBAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAAA,UAC9B;AACA;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,oBAAU,QAAQ;AAClB,eAAK,EAAE,MAAM,SAAS,MAAM,CAAC;AAC7B;AAAA,QACF;AAEA,YAAI,UAAU,KAAK;AACjB,cAAI,MAAM,WAAW,KAAK,KAAK,mBAAmB,MAAM;AACtD,kBAAM,IAAI,YAAY,YAAY,WAAW,GAAG,CAAC;AAAA,UACnD;AAEA,gBAAM,UAAU,SAAS,SAAS,SAAS,CAAC;AAC5C,cAAI,WAAW,MAAM,WAAW,QAAQ,SAAS,GAAG;AAClD,yBAAa,SAAS,IAAI,CAAC;AAC3B;AAAA,UACF;AAEA,eAAK,EAAE,MAAM,SAAS,OAAO,QAAQ,MAAM,SAAS,MAAM,MAAM,CAAC;AACjE,oBAAU,QAAQ;AAClB;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,KAAK,cAAc,QAAQ,CAAC,UAAU,EAAE,SAAS,GAAG,GAAG;AACzD,gBAAI,KAAK,cAAc,QAAQ,KAAK,mBAAmB,MAAM;AAC3D,oBAAM,IAAI,YAAY,YAAY,WAAW,GAAG,CAAC;AAAA,YACnD;AAEA,oBAAQ,KAAK;AAAA,UACf,OAAO;AACL,sBAAU,UAAU;AAAA,UACtB;AAEA,eAAK,EAAE,MAAM,WAAW,MAAM,CAAC;AAC/B;AAAA,QACF;AAEA,YAAI,UAAU,KAAK;AACjB,cAAI,KAAK,cAAc,QAAS,QAAQ,KAAK,SAAS,aAAa,KAAK,MAAM,WAAW,GAAI;AAC3F,iBAAK,EAAE,MAAM,QAAQ,OAAO,QAAQ,KAAK,QAAQ,CAAC;AAClD;AAAA,UACF;AAEA,cAAI,MAAM,aAAa,GAAG;AACxB,gBAAI,KAAK,mBAAmB,MAAM;AAChC,oBAAM,IAAI,YAAY,YAAY,WAAW,GAAG,CAAC;AAAA,YACnD;AAEA,iBAAK,EAAE,MAAM,QAAQ,OAAO,QAAQ,KAAK,QAAQ,CAAC;AAClD;AAAA,UACF;AAEA,oBAAU,UAAU;AAEpB,gBAAM,YAAY,KAAK,MAAM,MAAM,CAAC;AACpC,cAAI,KAAK,UAAU,QAAQ,UAAU,CAAC,MAAM,OAAO,CAAC,UAAU,SAAS,GAAG,GAAG;AAC3E,oBAAQ,IAAI;AAAA,UACd;AAEA,eAAK,SAAS;AACd,iBAAO,EAAE,MAAM,CAAC;AAIhB,cAAI,KAAK,oBAAoB,SAAS,MAAM,cAAc,SAAS,GAAG;AACpE;AAAA,UACF;AAEA,gBAAM,UAAU,MAAM,YAAY,KAAK,KAAK;AAC5C,gBAAM,SAAS,MAAM,OAAO,MAAM,GAAG,CAAC,KAAK,MAAM,MAAM;AAIvD,cAAI,KAAK,oBAAoB,MAAM;AACjC,kBAAM,UAAU;AAChB,iBAAK,QAAQ;AACb;AAAA,UACF;AAGA,eAAK,QAAQ,IAAI,UAAU,WAAW,KAAK;AAC3C,gBAAM,UAAU,KAAK;AACrB;AAAA,QACF;AAMA,YAAI,UAAU,OAAO,KAAK,YAAY,MAAM;AAC1C,oBAAU,QAAQ;AAElB,gBAAM,OAAO;AAAA,YACX,MAAM;AAAA,YACN;AAAA,YACA,QAAQ;AAAA,YACR,aAAa,MAAM,OAAO;AAAA,YAC1B,aAAa,MAAM,OAAO;AAAA,UAC5B;AAEA,iBAAO,KAAK,IAAI;AAChB,eAAK,IAAI;AACT;AAAA,QACF;AAEA,YAAI,UAAU,KAAK;AACjB,gBAAM,QAAQ,OAAO,OAAO,SAAS,CAAC;AAEtC,cAAI,KAAK,YAAY,QAAQ,CAAC,OAAO;AACnC,iBAAK,EAAE,MAAM,QAAQ,OAAO,QAAQ,MAAM,CAAC;AAC3C;AAAA,UACF;AAEA,cAAI,SAAS;AAEb,cAAI,MAAM,SAAS,MAAM;AACvB,kBAAM,MAAM,OAAO,MAAM;AACzB,kBAAM,QAAQ,CAAC;AAEf,qBAAS,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AACxC,qBAAO,IAAI;AACX,kBAAI,IAAI,CAAC,EAAE,SAAS,SAAS;AAC3B;AAAA,cACF;AACA,kBAAI,IAAI,CAAC,EAAE,SAAS,QAAQ;AAC1B,sBAAM,QAAQ,IAAI,CAAC,EAAE,KAAK;AAAA,cAC5B;AAAA,YACF;AAEA,qBAAS,YAAY,OAAO,IAAI;AAChC,kBAAM,YAAY;AAAA,UACpB;AAEA,cAAI,MAAM,UAAU,QAAQ,MAAM,SAAS,MAAM;AAC/C,kBAAM,MAAM,MAAM,OAAO,MAAM,GAAG,MAAM,WAAW;AACnD,kBAAM,OAAO,MAAM,OAAO,MAAM,MAAM,WAAW;AACjD,kBAAM,QAAQ,MAAM,SAAS;AAC7B,oBAAQ,SAAS;AACjB,kBAAM,SAAS;AACf,uBAAW,KAAK,MAAM;AACpB,oBAAM,UAAW,EAAE,UAAU,EAAE;AAAA,YACjC;AAAA,UACF;AAEA,eAAK,EAAE,MAAM,SAAS,OAAO,OAAO,CAAC;AACrC,oBAAU,QAAQ;AAClB,iBAAO,IAAI;AACX;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,SAAS,SAAS,GAAG;AACvB,qBAAS,SAAS,SAAS,CAAC,EAAE;AAAA,UAChC;AACA,eAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAC5B;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,SAAS;AAEb,gBAAM,QAAQ,OAAO,OAAO,SAAS,CAAC;AACtC,cAAI,SAAS,MAAM,MAAM,SAAS,CAAC,MAAM,UAAU;AACjD,kBAAM,QAAQ;AACd,qBAAS;AAAA,UACX;AAEA,eAAK,EAAE,MAAM,SAAS,OAAO,OAAO,CAAC;AACrC;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AAKjB,cAAI,KAAK,SAAS,SAAS,MAAM,UAAU,MAAM,QAAQ,GAAG;AAC1D,kBAAM,QAAQ,MAAM,QAAQ;AAC5B,kBAAM,WAAW;AACjB,kBAAM,SAAS;AACf,mBAAO,IAAI;AACX,mBAAO;AACP;AAAA,UACF;AAEA,eAAK,EAAE,MAAM,SAAS,OAAO,QAAQ,cAAc,CAAC;AACpD;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,MAAM,SAAS,KAAK,KAAK,SAAS,OAAO;AAC3C,gBAAI,KAAK,UAAU;AAAK,mBAAK,SAAS;AACtC,kBAAM,QAAQ,OAAO,OAAO,SAAS,CAAC;AACtC,iBAAK,OAAO;AACZ,iBAAK,UAAU;AACf,iBAAK,SAAS;AACd,kBAAM,OAAO;AACb;AAAA,UACF;AAEA,cAAK,MAAM,SAAS,MAAM,WAAY,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,SAAS;AACvF,iBAAK,EAAE,MAAM,QAAQ,OAAO,QAAQ,YAAY,CAAC;AACjD;AAAA,UACF;AAEA,eAAK,EAAE,MAAM,OAAO,OAAO,QAAQ,YAAY,CAAC;AAChD;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,gBAAM,UAAU,QAAQ,KAAK,UAAU;AACvC,cAAI,CAAC,WAAW,KAAK,cAAc,QAAQ,KAAK,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AAC5E,wBAAY,SAAS,KAAK;AAC1B;AAAA,UACF;AAEA,cAAI,QAAQ,KAAK,SAAS,SAAS;AACjC,kBAAM,OAAO,KAAK;AAClB,gBAAI,SAAS;AAEb,gBAAI,SAAS,OAAO,CAAC,MAAM,oBAAoB,GAAG;AAChD,oBAAM,IAAI,MAAM,yDAAyD;AAAA,YAC3E;AAEA,gBAAK,KAAK,UAAU,OAAO,CAAC,SAAS,KAAK,IAAI,KAAO,SAAS,OAAO,CAAC,eAAe,KAAK,UAAU,CAAC,GAAI;AACvG,uBAAS,KAAK;AAAA,YAChB;AAEA,iBAAK,EAAE,MAAM,QAAQ,OAAO,OAAO,CAAC;AACpC;AAAA,UACF;AAEA,cAAI,KAAK,QAAQ,SAAS,KAAK,SAAS,WAAW,KAAK,SAAS,QAAQ;AACvE,iBAAK,EAAE,MAAM,SAAS,OAAO,QAAQ,aAAa,CAAC;AACnD;AAAA,UACF;AAEA,eAAK,EAAE,MAAM,SAAS,OAAO,QAAQ,MAAM,CAAC;AAC5C;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,KAAK,cAAc,QAAQ,KAAK,MAAM,KAAK;AAC7C,gBAAI,KAAK,CAAC,MAAM,OAAO,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,GAAG;AAC9C,0BAAY,UAAU,KAAK;AAC3B;AAAA,YACF;AAAA,UACF;AAEA,cAAI,KAAK,aAAa,QAAQ,MAAM,UAAU,GAAG;AAC/C,mBAAO;AACP;AAAA,UACF;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,KAAK,cAAc,QAAQ,KAAK,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AAChE,wBAAY,QAAQ,KAAK;AACzB;AAAA,UACF;AAEA,cAAK,QAAQ,KAAK,UAAU,OAAQ,KAAK,UAAU,OAAO;AACxD,iBAAK,EAAE,MAAM,QAAQ,OAAO,QAAQ,aAAa,CAAC;AAClD;AAAA,UACF;AAEA,cAAK,SAAS,KAAK,SAAS,aAAa,KAAK,SAAS,WAAW,KAAK,SAAS,YAAa,MAAM,SAAS,GAAG;AAC7G,iBAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAC5B;AAAA,UACF;AAEA,eAAK,EAAE,MAAM,QAAQ,OAAO,aAAa,CAAC;AAC1C;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,KAAK,cAAc,QAAQ,KAAK,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AAChE,iBAAK,EAAE,MAAM,MAAM,SAAS,MAAM,OAAO,QAAQ,GAAG,CAAC;AACrD;AAAA,UACF;AAEA,eAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAC5B;AAAA,QACF;AAMA,YAAI,UAAU,KAAK;AACjB,cAAI,UAAU,OAAO,UAAU,KAAK;AAClC,oBAAQ,KAAK;AAAA,UACf;AAEA,gBAAM,QAAQ,wBAAwB,KAAK,UAAU,CAAC;AACtD,cAAI,OAAO;AACT,qBAAS,MAAM,CAAC;AAChB,kBAAM,SAAS,MAAM,CAAC,EAAE;AAAA,UAC1B;AAEA,eAAK,EAAE,MAAM,QAAQ,MAAM,CAAC;AAC5B;AAAA,QACF;AAMA,YAAI,SAAS,KAAK,SAAS,cAAc,KAAK,SAAS,OAAO;AAC5D,eAAK,OAAO;AACZ,eAAK,OAAO;AACZ,eAAK,SAAS;AACd,eAAK,SAAS;AACd,gBAAM,YAAY;AAClB,gBAAM,WAAW;AACjB,kBAAQ,KAAK;AACb;AAAA,QACF;AAEA,YAAI,OAAO,UAAU;AACrB,YAAI,KAAK,cAAc,QAAQ,UAAU,KAAK,IAAI,GAAG;AACnD,sBAAY,QAAQ,KAAK;AACzB;AAAA,QACF;AAEA,YAAI,KAAK,SAAS,QAAQ;AACxB,cAAI,KAAK,eAAe,MAAM;AAC5B,oBAAQ,KAAK;AACb;AAAA,UACF;AAEA,gBAAM,QAAQ,KAAK;AACnB,gBAAM,SAAS,MAAM;AACrB,gBAAM,UAAU,MAAM,SAAS,WAAW,MAAM,SAAS;AACzD,gBAAM,YAAY,WAAW,OAAO,SAAS,UAAU,OAAO,SAAS;AAEvE,cAAI,KAAK,SAAS,SAAS,CAAC,WAAY,KAAK,CAAC,KAAK,KAAK,CAAC,MAAM,MAAO;AACpE,iBAAK,EAAE,MAAM,QAAQ,OAAO,QAAQ,GAAG,CAAC;AACxC;AAAA,UACF;AAEA,gBAAM,UAAU,MAAM,SAAS,MAAM,MAAM,SAAS,WAAW,MAAM,SAAS;AAC9E,gBAAM,YAAY,SAAS,WAAW,MAAM,SAAS,UAAU,MAAM,SAAS;AAC9E,cAAI,CAAC,WAAW,MAAM,SAAS,WAAW,CAAC,WAAW,CAAC,WAAW;AAChE,iBAAK,EAAE,MAAM,QAAQ,OAAO,QAAQ,GAAG,CAAC;AACxC;AAAA,UACF;AAGA,iBAAO,KAAK,MAAM,GAAG,CAAC,MAAM,OAAO;AACjC,kBAAM,QAAQ,MAAM,MAAM,QAAQ,CAAC;AACnC,gBAAI,SAAS,UAAU,KAAK;AAC1B;AAAA,YACF;AACA,mBAAO,KAAK,MAAM,CAAC;AACnB,oBAAQ,OAAO,CAAC;AAAA,UAClB;AAEA,cAAI,MAAM,SAAS,SAAS,IAAI,GAAG;AACjC,iBAAK,OAAO;AACZ,iBAAK,SAAS;AACd,iBAAK,SAAS,SAAS,IAAI;AAC3B,kBAAM,SAAS,KAAK;AACpB,kBAAM,WAAW;AACjB,oBAAQ,KAAK;AACb;AAAA,UACF;AAEA,cAAI,MAAM,SAAS,WAAW,MAAM,KAAK,SAAS,SAAS,CAAC,aAAa,IAAI,GAAG;AAC9E,kBAAM,SAAS,MAAM,OAAO,MAAM,GAAG,EAAE,MAAM,SAAS,KAAK,QAAQ,MAAM;AACzE,kBAAM,SAAS,MAAM,MAAM;AAE3B,iBAAK,OAAO;AACZ,iBAAK,SAAS,SAAS,IAAI,KAAK,KAAK,gBAAgB,MAAM;AAC3D,iBAAK,SAAS;AACd,kBAAM,WAAW;AACjB,kBAAM,UAAU,MAAM,SAAS,KAAK;AACpC,oBAAQ,KAAK;AACb;AAAA,UACF;AAEA,cAAI,MAAM,SAAS,WAAW,MAAM,KAAK,SAAS,SAAS,KAAK,CAAC,MAAM,KAAK;AAC1E,kBAAM,MAAM,KAAK,CAAC,MAAM,SAAS,OAAO;AAExC,kBAAM,SAAS,MAAM,OAAO,MAAM,GAAG,EAAE,MAAM,SAAS,KAAK,QAAQ,MAAM;AACzE,kBAAM,SAAS,MAAM,MAAM;AAE3B,iBAAK,OAAO;AACZ,iBAAK,SAAS,GAAG,SAAS,IAAI,IAAI,iBAAiB,gBAAgB;AACnE,iBAAK,SAAS;AAEd,kBAAM,UAAU,MAAM,SAAS,KAAK;AACpC,kBAAM,WAAW;AAEjB,oBAAQ,QAAQ,QAAQ,CAAC;AAEzB,iBAAK,EAAE,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,CAAC;AAC9C;AAAA,UACF;AAEA,cAAI,MAAM,SAAS,SAAS,KAAK,CAAC,MAAM,KAAK;AAC3C,iBAAK,OAAO;AACZ,iBAAK,SAAS;AACd,iBAAK,SAAS,QAAQ,iBAAiB,SAAS,IAAI,IAAI;AACxD,kBAAM,SAAS,KAAK;AACpB,kBAAM,WAAW;AACjB,oBAAQ,QAAQ,QAAQ,CAAC;AACzB,iBAAK,EAAE,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,CAAC;AAC9C;AAAA,UACF;AAGA,gBAAM,SAAS,MAAM,OAAO,MAAM,GAAG,CAAC,KAAK,OAAO,MAAM;AAGxD,eAAK,OAAO;AACZ,eAAK,SAAS,SAAS,IAAI;AAC3B,eAAK,SAAS;AAGd,gBAAM,UAAU,KAAK;AACrB,gBAAM,WAAW;AACjB,kBAAQ,KAAK;AACb;AAAA,QACF;AAEA,cAAM,QAAQ,EAAE,MAAM,QAAQ,OAAO,QAAQ,KAAK;AAElD,YAAI,KAAK,SAAS,MAAM;AACtB,gBAAM,SAAS;AACf,cAAI,KAAK,SAAS,SAAS,KAAK,SAAS,SAAS;AAChD,kBAAM,SAAS,QAAQ,MAAM;AAAA,UAC/B;AACA,eAAK,KAAK;AACV;AAAA,QACF;AAEA,YAAI,SAAS,KAAK,SAAS,aAAa,KAAK,SAAS,YAAY,KAAK,UAAU,MAAM;AACrF,gBAAM,SAAS;AACf,eAAK,KAAK;AACV;AAAA,QACF;AAEA,YAAI,MAAM,UAAU,MAAM,SAAS,KAAK,SAAS,WAAW,KAAK,SAAS,OAAO;AAC/E,cAAI,KAAK,SAAS,OAAO;AACvB,kBAAM,UAAU;AAChB,iBAAK,UAAU;AAAA,UAEjB,WAAW,KAAK,QAAQ,MAAM;AAC5B,kBAAM,UAAU;AAChB,iBAAK,UAAU;AAAA,UAEjB,OAAO;AACL,kBAAM,UAAU;AAChB,iBAAK,UAAU;AAAA,UACjB;AAEA,cAAI,KAAK,MAAM,KAAK;AAClB,kBAAM,UAAU;AAChB,iBAAK,UAAU;AAAA,UACjB;AAAA,QACF;AAEA,aAAK,KAAK;AAAA,MACZ;AAEA,aAAO,MAAM,WAAW,GAAG;AACzB,YAAI,KAAK,mBAAmB;AAAM,gBAAM,IAAI,YAAY,YAAY,WAAW,GAAG,CAAC;AACnF,cAAM,SAAS,MAAM,WAAW,MAAM,QAAQ,GAAG;AACjD,kBAAU,UAAU;AAAA,MACtB;AAEA,aAAO,MAAM,SAAS,GAAG;AACvB,YAAI,KAAK,mBAAmB;AAAM,gBAAM,IAAI,YAAY,YAAY,WAAW,GAAG,CAAC;AACnF,cAAM,SAAS,MAAM,WAAW,MAAM,QAAQ,GAAG;AACjD,kBAAU,QAAQ;AAAA,MACpB;AAEA,aAAO,MAAM,SAAS,GAAG;AACvB,YAAI,KAAK,mBAAmB;AAAM,gBAAM,IAAI,YAAY,YAAY,WAAW,GAAG,CAAC;AACnF,cAAM,SAAS,MAAM,WAAW,MAAM,QAAQ,GAAG;AACjD,kBAAU,QAAQ;AAAA,MACpB;AAEA,UAAI,KAAK,kBAAkB,SAAS,KAAK,SAAS,UAAU,KAAK,SAAS,YAAY;AACpF,aAAK,EAAE,MAAM,eAAe,OAAO,IAAI,QAAQ,GAAG,iBAAiB,CAAC;AAAA,MACtE;AAGA,UAAI,MAAM,cAAc,MAAM;AAC5B,cAAM,SAAS;AAEf,mBAAW,SAAS,MAAM,QAAQ;AAChC,gBAAM,UAAU,MAAM,UAAU,OAAO,MAAM,SAAS,MAAM;AAE5D,cAAI,MAAM,QAAQ;AAChB,kBAAM,UAAU,MAAM;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAQA,IAAAN,OAAM,YAAY,CAAC,OAAOD,aAAY;AACpC,YAAM,OAAO,EAAE,GAAGA,SAAQ;AAC1B,YAAM,MAAM,OAAO,KAAK,cAAc,WAAW,KAAK,IAAI,YAAY,KAAK,SAAS,IAAI;AACxF,YAAM,MAAM,MAAM;AAClB,UAAI,MAAM,KAAK;AACb,cAAM,IAAI,YAAY,iBAAiB,wCAAwC,KAAK;AAAA,MACtF;AAEA,cAAQ,aAAa,KAAK,KAAK;AAC/B,YAAME,SAAQ,MAAM,UAAUF,QAAO;AAGrC,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAID,WAAU,UAAUG,MAAK;AAE7B,YAAM,QAAQ,KAAK,MAAM,UAAU;AACnC,YAAM,WAAW,KAAK,MAAM,gBAAgB;AAC5C,YAAM,UAAU,KAAK,UAAU,KAAK;AACpC,YAAM,QAAQ,EAAE,SAAS,OAAO,QAAQ,GAAG;AAC3C,UAAI,OAAO,KAAK,SAAS,OAAO,QAAQ;AAExC,UAAI,KAAK,SAAS;AAChB,eAAO,IAAI;AAAA,MACb;AAEA,YAAM,WAAW,CAAAC,UAAQ;AACvB,YAAIA,MAAK,eAAe;AAAM,iBAAO;AACrC,eAAO,IAAI,gBAAgB,eAAeA,MAAK,MAAM,aAAa;AAAA,MACpE;AAEA,YAAMK,UAAS,CAAAC,SAAO;AACpB,gBAAQA,MAAK;AAAA,UACX,KAAK;AACH,mBAAO,GAAG,QAAQ,WAAW;AAAA,UAE/B,KAAK;AACH,mBAAO,GAAG,cAAc,WAAW;AAAA,UAErC,KAAK;AACH,mBAAO,GAAG,QAAQ,OAAO,cAAc,WAAW;AAAA,UAEpD,KAAK;AACH,mBAAO,GAAG,QAAQ,OAAO,gBAAgB,WAAW,WAAW;AAAA,UAEjE,KAAK;AACH,mBAAO,QAAQ,SAAS,IAAI;AAAA,UAE9B,KAAK;AACH,mBAAO,MAAM,QAAQ,SAAS,IAAI,IAAI,kBAAkB,WAAW,WAAW;AAAA,UAEhF,KAAK;AACH,mBAAO,MAAM,QAAQ,SAAS,IAAI,IAAI,kBAAkB,WAAW,OAAO,cAAc,WAAW;AAAA,UAErG,KAAK;AACH,mBAAO,MAAM,QAAQ,SAAS,IAAI,IAAI,kBAAkB,cAAc,WAAW;AAAA,UAEnF,SAAS;AACP,kBAAM,QAAQ,iBAAiB,KAAKA,IAAG;AACvC,gBAAI,CAAC;AAAO;AAEZ,kBAAMC,UAASF,QAAO,MAAM,CAAC,CAAC;AAC9B,gBAAI,CAACE;AAAQ;AAEb,mBAAOA,UAAS,cAAc,MAAM,CAAC;AAAA,UACvC;AAAA,QACF;AAAA,MACF;AAEA,YAAM,SAAS,MAAM,aAAa,OAAO,KAAK;AAC9C,UAAI,SAASF,QAAO,MAAM;AAE1B,UAAI,UAAU,KAAK,kBAAkB,MAAM;AACzC,kBAAU,GAAG;AAAA,MACf;AAEA,aAAO;AAAA,IACT;AAEA,IAAAV,QAAO,UAAUG;AAAA;AAAA;;;AClkCjB;AAAA,4CAAAU,UAAAC,SAAA;AAAA;AAEA,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAMC,SAAQ;AACd,QAAM,QAAQ;AACd,QAAMC,aAAY;AAClB,QAAM,WAAW,SAAO,OAAO,OAAO,QAAQ,YAAY,CAAC,MAAM,QAAQ,GAAG;AAwB5E,QAAM,YAAY,CAAC,MAAMC,UAAS,cAAc,UAAU;AACxD,UAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,cAAM,MAAM,KAAK,IAAI,WAAS,UAAU,OAAOA,UAAS,WAAW,CAAC;AACpE,cAAM,eAAe,CAAAC,SAAO;AAC1B,qBAAW,WAAW,KAAK;AACzB,kBAAMC,SAAQ,QAAQD,IAAG;AACzB,gBAAIC;AAAO,qBAAOA;AAAA,UACpB;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAEA,YAAM,UAAU,SAAS,IAAI,KAAK,KAAK,UAAU,KAAK;AAEtD,UAAI,SAAS,MAAO,OAAO,SAAS,YAAY,CAAC,SAAU;AACzD,cAAM,IAAI,UAAU,2CAA2C;AAAA,MACjE;AAEA,YAAM,OAAOF,YAAW,CAAC;AACzB,YAAMG,SAAQ,MAAM,UAAUH,QAAO;AACrC,YAAMI,SAAQ,UACV,UAAU,UAAU,MAAMJ,QAAO,IACjC,UAAU,OAAO,MAAMA,UAAS,OAAO,IAAI;AAE/C,YAAM,QAAQI,OAAM;AACpB,aAAOA,OAAM;AAEb,UAAI,YAAY,MAAM;AACtB,UAAI,KAAK,QAAQ;AACf,cAAM,aAAa,EAAE,GAAGJ,UAAS,QAAQ,MAAM,SAAS,MAAM,UAAU,KAAK;AAC7E,oBAAY,UAAU,KAAK,QAAQ,YAAY,WAAW;AAAA,MAC5D;AAEA,YAAM,UAAU,CAAC,OAAO,eAAe,UAAU;AAC/C,cAAM,EAAE,SAAS,OAAO,OAAO,IAAI,UAAU,KAAK,OAAOI,QAAOJ,UAAS,EAAE,MAAM,OAAAG,OAAM,CAAC;AACxF,cAAM,SAAS,EAAE,MAAM,OAAO,OAAAC,QAAO,OAAAD,QAAO,OAAO,QAAQ,OAAO,QAAQ;AAE1E,YAAI,OAAO,KAAK,aAAa,YAAY;AACvC,eAAK,SAAS,MAAM;AAAA,QACtB;AAEA,YAAI,YAAY,OAAO;AACrB,iBAAO,UAAU;AACjB,iBAAO,eAAe,SAAS;AAAA,QACjC;AAEA,YAAI,UAAU,KAAK,GAAG;AACpB,cAAI,OAAO,KAAK,aAAa,YAAY;AACvC,iBAAK,SAAS,MAAM;AAAA,UACtB;AACA,iBAAO,UAAU;AACjB,iBAAO,eAAe,SAAS;AAAA,QACjC;AAEA,YAAI,OAAO,KAAK,YAAY,YAAY;AACtC,eAAK,QAAQ,MAAM;AAAA,QACrB;AACA,eAAO,eAAe,SAAS;AAAA,MACjC;AAEA,UAAI,aAAa;AACf,gBAAQ,QAAQ;AAAA,MAClB;AAEA,aAAO;AAAA,IACT;AAmBA,cAAU,OAAO,CAAC,OAAOC,QAAOJ,UAAS,EAAE,MAAM,OAAAG,OAAM,IAAI,CAAC,MAAM;AAChE,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,UAAU,+BAA+B;AAAA,MACrD;AAEA,UAAI,UAAU,IAAI;AAChB,eAAO,EAAE,SAAS,OAAO,QAAQ,GAAG;AAAA,MACtC;AAEA,YAAM,OAAOH,YAAW,CAAC;AACzB,YAAM,SAAS,KAAK,WAAWG,SAAQ,MAAM,iBAAiB;AAC9D,UAAI,QAAQ,UAAU;AACtB,UAAI,SAAU,SAAS,SAAU,OAAO,KAAK,IAAI;AAEjD,UAAI,UAAU,OAAO;AACnB,iBAAS,SAAS,OAAO,KAAK,IAAI;AAClC,gBAAQ,WAAW;AAAA,MACrB;AAEA,UAAI,UAAU,SAAS,KAAK,YAAY,MAAM;AAC5C,YAAI,KAAK,cAAc,QAAQ,KAAK,aAAa,MAAM;AACrD,kBAAQ,UAAU,UAAU,OAAOC,QAAOJ,UAASG,MAAK;AAAA,QAC1D,OAAO;AACL,kBAAQC,OAAM,KAAK,MAAM;AAAA,QAC3B;AAAA,MACF;AAEA,aAAO,EAAE,SAAS,QAAQ,KAAK,GAAG,OAAO,OAAO;AAAA,IAClD;AAgBA,cAAU,YAAY,CAAC,OAAO,MAAMJ,UAASG,SAAQ,MAAM,UAAUH,QAAO,MAAM;AAChF,YAAMI,SAAQ,gBAAgB,SAAS,OAAO,UAAU,OAAO,MAAMJ,QAAO;AAC5E,aAAOI,OAAM,KAAK,KAAK,SAAS,KAAK,CAAC;AAAA,IACxC;AAmBA,cAAU,UAAU,CAACH,MAAK,UAAUD,aAAY,UAAU,UAAUA,QAAO,EAAEC,IAAG;AAgBhF,cAAU,QAAQ,CAAC,SAASD,aAAY;AACtC,UAAI,MAAM,QAAQ,OAAO;AAAG,eAAO,QAAQ,IAAI,OAAK,UAAU,MAAM,GAAGA,QAAO,CAAC;AAC/E,aAAOF,OAAM,SAAS,EAAE,GAAGE,UAAS,WAAW,MAAM,CAAC;AAAA,IACxD;AA6BA,cAAU,OAAO,CAAC,OAAOA,aAAY,KAAK,OAAOA,QAAO;AAcxD,cAAU,YAAY,CAAC,OAAOA,UAAS,eAAe,OAAO,cAAc,UAAU;AACnF,UAAI,iBAAiB,MAAM;AACzB,eAAO,MAAM;AAAA,MACf;AAEA,YAAM,OAAOA,YAAW,CAAC;AACzB,YAAM,UAAU,KAAK,WAAW,KAAK;AACrC,YAAM,SAAS,KAAK,WAAW,KAAK;AAEpC,UAAI,SAAS,GAAG,aAAa,MAAM,UAAU;AAC7C,UAAI,SAAS,MAAM,YAAY,MAAM;AACnC,iBAAS,OAAO;AAAA,MAClB;AAEA,YAAMI,SAAQ,UAAU,QAAQ,QAAQJ,QAAO;AAC/C,UAAI,gBAAgB,MAAM;AACxB,QAAAI,OAAM,QAAQ;AAAA,MAChB;AAEA,aAAOA;AAAA,IACT;AAqBA,cAAU,SAAS,CAAC,OAAOJ,WAAU,CAAC,GAAG,eAAe,OAAO,cAAc,UAAU;AACrF,UAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,cAAM,IAAI,UAAU,6BAA6B;AAAA,MACnD;AAEA,UAAI,SAAS,EAAE,SAAS,OAAO,WAAW,KAAK;AAE/C,UAAIA,SAAQ,cAAc,UAAU,MAAM,CAAC,MAAM,OAAO,MAAM,CAAC,MAAM,MAAM;AACzE,eAAO,SAASF,OAAM,UAAU,OAAOE,QAAO;AAAA,MAChD;AAEA,UAAI,CAAC,OAAO,QAAQ;AAClB,iBAASF,OAAM,OAAOE,QAAO;AAAA,MAC/B;AAEA,aAAO,UAAU,UAAU,QAAQA,UAAS,cAAc,WAAW;AAAA,IACvE;AAmBA,cAAU,UAAU,CAAC,QAAQA,aAAY;AACvC,UAAI;AACF,cAAM,OAAOA,YAAW,CAAC;AACzB,eAAO,IAAI,OAAO,QAAQ,KAAK,UAAU,KAAK,SAAS,MAAM,GAAG;AAAA,MAClE,SAAS,KAAP;AACA,YAAIA,YAAWA,SAAQ,UAAU;AAAM,gBAAM;AAC7C,eAAO;AAAA,MACT;AAAA,IACF;AAOA,cAAU,YAAYD;AAMtB,IAAAF,QAAO,UAAU;AAAA;AAAA;;;ACrVjB,IAAAQ,qBAAA;AAAA,oCAAAC,UAAAC,SAAA;AAAA;AAEA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACFjB;AAAA,sCAAAC,UAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,8GAA8G,uIAAuI;AAAA,QACpQ;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA,kCAAAC,UAAAC,SAAA;AAAA,QAAI,WAAW,OAAO,UAAU;AAEhC,IAAAA,QAAO,UAAU,SAAS,OAAO,KAAK;AACpC,UAAI,QAAQ;AAAQ,eAAO;AAC3B,UAAI,QAAQ;AAAM,eAAO;AAEzB,UAAI,OAAO,OAAO;AAClB,UAAI,SAAS;AAAW,eAAO;AAC/B,UAAI,SAAS;AAAU,eAAO;AAC9B,UAAI,SAAS;AAAU,eAAO;AAC9B,UAAI,SAAS;AAAU,eAAO;AAC9B,UAAI,SAAS,YAAY;AACvB,eAAO,cAAc,GAAG,IAAI,sBAAsB;AAAA,MACpD;AAEA,UAAIC,SAAQ,GAAG;AAAG,eAAO;AACzB,UAAI,SAAS,GAAG;AAAG,eAAO;AAC1B,UAAI,YAAY,GAAG;AAAG,eAAO;AAC7B,UAAI,OAAO,GAAG;AAAG,eAAO;AACxB,UAAI,QAAQ,GAAG;AAAG,eAAO;AACzB,UAAI,SAAS,GAAG;AAAG,eAAO;AAE1B,cAAQ,SAAS,GAAG,GAAG;AAAA,QACrB,KAAK;AAAU,iBAAO;AAAA,QACtB,KAAK;AAAW,iBAAO;AAAA,QAGvB,KAAK;AAAW,iBAAO;AAAA,QACvB,KAAK;AAAW,iBAAO;AAAA,QACvB,KAAK;AAAO,iBAAO;AAAA,QACnB,KAAK;AAAO,iBAAO;AAAA,QAGnB,KAAK;AAAa,iBAAO;AAAA,QACzB,KAAK;AAAc,iBAAO;AAAA,QAC1B,KAAK;AAAqB,iBAAO;AAAA,QAGjC,KAAK;AAAc,iBAAO;AAAA,QAC1B,KAAK;AAAe,iBAAO;AAAA,QAG3B,KAAK;AAAc,iBAAO;AAAA,QAC1B,KAAK;AAAe,iBAAO;AAAA,QAC3B,KAAK;AAAgB,iBAAO;AAAA,QAC5B,KAAK;AAAgB,iBAAO;AAAA,MAC9B;AAEA,UAAI,eAAe,GAAG,GAAG;AACvB,eAAO;AAAA,MACT;AAGA,aAAO,SAAS,KAAK,GAAG;AACxB,cAAQ,MAAM;AAAA,QACZ,KAAK;AAAmB,iBAAO;AAAA,QAE/B,KAAK;AAAyB,iBAAO;AAAA,QACrC,KAAK;AAAyB,iBAAO;AAAA,QACrC,KAAK;AAA4B,iBAAO;AAAA,QACxC,KAAK;AAA2B,iBAAO;AAAA,MACzC;AAGA,aAAO,KAAK,MAAM,GAAG,EAAE,EAAE,YAAY,EAAE,QAAQ,OAAO,EAAE;AAAA,IAC1D;AAEA,aAAS,SAAS,KAAK;AACrB,aAAO,OAAO,IAAI,gBAAgB,aAAa,IAAI,YAAY,OAAO;AAAA,IACxE;AAEA,aAASA,SAAQ,KAAK;AACpB,UAAI,MAAM;AAAS,eAAO,MAAM,QAAQ,GAAG;AAC3C,aAAO,eAAe;AAAA,IACxB;AAEA,aAAS,QAAQ,KAAK;AACpB,aAAO,eAAe,SAAU,OAAO,IAAI,YAAY,YAAY,IAAI,eAAe,OAAO,IAAI,YAAY,oBAAoB;AAAA,IACnI;AAEA,aAAS,OAAO,KAAK;AACnB,UAAI,eAAe;AAAM,eAAO;AAChC,aAAO,OAAO,IAAI,iBAAiB,cAC9B,OAAO,IAAI,YAAY,cACvB,OAAO,IAAI,YAAY;AAAA,IAC9B;AAEA,aAAS,SAAS,KAAK;AACrB,UAAI,eAAe;AAAQ,eAAO;AAClC,aAAO,OAAO,IAAI,UAAU,YACvB,OAAO,IAAI,eAAe,aAC1B,OAAO,IAAI,cAAc,aACzB,OAAO,IAAI,WAAW;AAAA,IAC7B;AAEA,aAAS,cAAcC,OAAM,KAAK;AAChC,aAAO,SAASA,KAAI,MAAM;AAAA,IAC5B;AAEA,aAAS,eAAe,KAAK;AAC3B,aAAO,OAAO,IAAI,UAAU,cACvB,OAAO,IAAI,WAAW,cACtB,OAAO,IAAI,SAAS;AAAA,IAC3B;AAEA,aAAS,YAAY,KAAK;AACxB,UAAI;AACF,YAAI,OAAO,IAAI,WAAW,YAAY,OAAO,IAAI,WAAW,YAAY;AACtE,iBAAO;AAAA,QACT;AAAA,MACF,SAAS,KAAP;AACA,YAAI,IAAI,QAAQ,QAAQ,QAAQ,MAAM,IAAI;AACxC,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAOA,aAAS,SAAS,KAAK;AACrB,UAAI,IAAI,eAAe,OAAO,IAAI,YAAY,aAAa,YAAY;AACrE,eAAO,IAAI,YAAY,SAAS,GAAG;AAAA,MACrC;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;AChIA;AAAA,wCAAAC,UAAAC,SAAA;AAAA;AASA,IAAAA,QAAO,UAAU,SAAS,aAAa,KAAK;AAC1C,aAAO,OAAO,QAAQ,eAAe,QAAQ,SACvC,OAAO,QAAQ,YAAY,OAAO,QAAQ;AAAA,IAClD;AAAA;AAAA;;;ACZA;AAAA,yCAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,WAAW;AAEf,IAAAA,QAAO,UAAU,SAAS,OAAO,GAAgB;AAC/C,UAAI,CAAC,SAAS,CAAC,GAAG;AAAE,YAAI,CAAC;AAAA,MAAG;AAE5B,UAAI,MAAM,UAAU;AACpB,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,YAAI,MAAM,UAAU,CAAC;AAErB,YAAI,SAAS,GAAG,GAAG;AACjB,iBAAO,GAAG,GAAG;AAAA,QACf;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,GAAG,GAAG;AACpB,eAAS,OAAO,GAAG;AACjB,YAAI,OAAO,GAAG,GAAG,GAAG;AAClB,YAAE,GAAG,IAAI,EAAE,GAAG;AAAA,QAChB;AAAA,MACF;AAAA,IACF;AAMA,aAAS,OAAO,KAAK,KAAK;AACxB,aAAO,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG;AAAA,IACtD;AAAA;AAAA;;;AChCA;AAAA,yCAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,SAAS;AACb,QAAI,SAAS;AAgBb,IAAAA,QAAO,UAAU,SAAS,OAAOC,UAAS;AACxC,UAAI,OAAOA,aAAY,YAAY;AACjC,QAAAA,WAAU,EAAE,OAAOA,SAAQ;AAAA,MAC7B;AAEA,UAAI,OAAO,SAAS,KAAK;AACzB,UAAI,WAAW,EAAC,mBAAmB,OAAO,OAAO,SAAQ;AACzD,UAAI,OAAO,OAAO,CAAC,GAAG,UAAUA,QAAO;AACvC,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK,QAAQ,MAAM,OAAO;AACtC,UAAI,WAAW;AACf,UAAI,UAAU,cAAc;AAC5B,UAAI,UAAU,CAAC;AACf,UAAI,QAAQ,CAAC;AAEb,eAAS,aAAa,KAAK;AACzB,aAAK,UAAU;AACf,mBAAW,CAAC;AACZ,kBAAU,CAAC;AAAA,MACb;AAEA,eAAS,aAAa,KAAK;AACzB,YAAI,MAAM,QAAQ;AAChB,kBAAQ,MAAM,OAAO,MAAM,CAAC,GAAG,KAAK;AACpC,kBAAQ,UAAU;AAClB,eAAK,MAAM,SAAS,QAAQ;AAC5B,mBAAS,KAAK,OAAO;AACrB,oBAAU,cAAc;AACxB,oBAAU,CAAC;AACX,kBAAQ,CAAC;AAAA,QACX;AAAA,MACF;AAEA,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,OAAO,MAAM,CAAC;AAClB,YAAI,MAAM,MAAM;AAChB,YAAI,KAAK,KAAK,KAAK;AAEnB,YAAI,YAAY,IAAI,KAAK,GAAG;AAC1B,cAAI,GAAG,WAAW,KAAK,MAAM,GAAG;AAC9B,gBAAI,QAAQ,KAAK,QAAQ,GAAG;AAC1B,sBAAQ,KAAK,IAAI;AACjB;AAAA,YACF;AACA,kBAAM,KAAK,EAAE;AACb,oBAAQ,OAAO,QAAQ,KAAK,IAAI;AAChC,sBAAU,CAAC;AACX;AAAA,UACF;AAEA,cAAI,aAAa,MAAM;AACrB,yBAAa,QAAQ,KAAK,IAAI,CAAC;AAAA,UACjC;AAEA,cAAI,QAAQ,GAAG;AACb,yBAAa,QAAQ,KAAK,IAAI,CAAC;AAAA,UACjC;AAEA,gBAAM,KAAK,EAAE;AACb;AAAA,QACF;AAEA,gBAAQ,KAAK,IAAI;AAAA,MACnB;AAEA,UAAI,aAAa,MAAM;AACrB,qBAAa,QAAQ,KAAK,IAAI,CAAC;AAAA,MACjC,OAAO;AACL,qBAAa,QAAQ,KAAK,IAAI,CAAC;AAAA,MACjC;AAEA,WAAK,WAAW;AAChB,aAAO;AAAA,IACT;AAEA,aAAS,YAAY,MAAM,OAAO;AAChC,UAAI,KAAK,MAAM,GAAG,MAAM,MAAM,MAAM,OAAO;AACzC,eAAO;AAAA,MACT;AACA,UAAI,KAAK,OAAO,MAAM,SAAS,CAAC,MAAM,MAAM,MAAM,EAAE,GAAG;AACrD,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,aAAS,SAAS,OAAO;AACvB,UAAI,OAAO,KAAK,MAAM,UAAU;AAC9B,gBAAQ,EAAE,SAAS,MAAM;AAAA,MAC3B;AAEA,UAAI,OAAO,MAAM,YAAY,YAAY,CAAC,SAAS,MAAM,OAAO,GAAG;AACjE,cAAM,IAAI,UAAU,6BAA6B;AAAA,MACnD;AAEA,YAAM,UAAU,MAAM,QAAQ,SAAS;AACvC,YAAM,WAAW,CAAC;AAClB,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,KAAK,OAAO;AAC1B,aAAO,MAAM,IAAI,MAAM,MAAM,MAAM,EAAE,KAAK,IAAI;AAAA,IAChD;AAEA,aAAS,gBAAgB;AACvB,aAAO,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS,GAAG;AAAA,IAC1C;AAEA,aAAS,SAAS,KAAK;AACrB,aAAO;AAAA,IACT;AAEA,aAAS,SAAS,KAAK;AACrB,UAAI,OAAO,IAAI,eAAe,OAAO,IAAI,YAAY,aAAa,YAAY;AAC5E,eAAO,IAAI,YAAY,SAAS,GAAG;AAAA,MACrC;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACvIA;AAAA,wEAAAC,UAAAC,SAAA;AAAA;AAGA,aAAS,UAAU,SAAS;AAC1B,aAAQ,OAAO,YAAY,eAAiB,YAAY;AAAA,IAC1D;AAGA,aAAS,SAAS,SAAS;AACzB,aAAQ,OAAO,YAAY,YAAc,YAAY;AAAA,IACvD;AAGA,aAAS,QAAQ,UAAU;AACzB,UAAI,MAAM,QAAQ,QAAQ;AAAG,eAAO;AAAA,eAC3B,UAAU,QAAQ;AAAG,eAAO,CAAC;AAEtC,aAAO,CAAE,QAAS;AAAA,IACpB;AAGA,aAAS,OAAO,QAAQ,QAAQ;AAC9B,UAAIC,QAAO,QAAQ,KAAK;AAExB,UAAI,QAAQ;AACV,qBAAa,OAAO,KAAK,MAAM;AAE/B,aAAKA,SAAQ,GAAG,SAAS,WAAW,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACtE,gBAAM,WAAWA,MAAK;AACtB,iBAAO,GAAG,IAAI,OAAO,GAAG;AAAA,QAC1B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAGA,aAAS,OAAO,QAAQ,OAAO;AAC7B,UAAI,SAAS,IAAI;AAEjB,WAAK,QAAQ,GAAG,QAAQ,OAAO,SAAS,GAAG;AACzC,kBAAU;AAAA,MACZ;AAEA,aAAO;AAAA,IACT;AAGA,aAAS,eAAe,QAAQ;AAC9B,aAAQ,WAAW,KAAO,OAAO,sBAAsB,IAAI;AAAA,IAC7D;AAGA,IAAAD,QAAO,QAAQ,YAAiB;AAChC,IAAAA,QAAO,QAAQ,WAAiB;AAChC,IAAAA,QAAO,QAAQ,UAAiB;AAChC,IAAAA,QAAO,QAAQ,SAAiB;AAChC,IAAAA,QAAO,QAAQ,iBAAiB;AAChC,IAAAA,QAAO,QAAQ,SAAiB;AAAA;AAAA;;;AC1DhC;AAAA,2EAAAE,UAAAC,SAAA;AAAA;AAIA,aAAS,cAAc,QAAQ,MAAM;AAEnC,YAAM,KAAK,IAAI;AAEf,WAAK,OAAO;AACZ,WAAK,SAAS;AACd,WAAK,OAAO;AACZ,WAAK,WAAW,KAAK,UAAU,uBAAuB,KAAK,OAAO,MAAM,KAAK,KAAK,SAAS,IAAI;AAG/F,UAAI,MAAM,mBAAmB;AAE3B,cAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,MAChD,OAAO;AAEL,aAAK,QAAS,IAAI,MAAM,EAAG,SAAS;AAAA,MACtC;AAAA,IACF;AAIA,kBAAc,YAAY,OAAO,OAAO,MAAM,SAAS;AACvD,kBAAc,UAAU,cAAc;AAGtC,kBAAc,UAAU,WAAW,SAAS,SAAS,SAAS;AAC5D,UAAI,SAAS,KAAK,OAAO;AAEzB,gBAAU,KAAK,UAAU;AAEzB,UAAI,CAAC,WAAW,KAAK,MAAM;AACzB,kBAAU,MAAM,KAAK,KAAK,SAAS;AAAA,MACrC;AAEA,aAAO;AAAA,IACT;AAGA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;AC1CjB;AAAA,sEAAAC,UAAAC,SAAA;AAAA;AAGA,QAAI,SAAS;AAGb,aAAS,KAAKC,OAAM,QAAQC,WAAU,MAAM,QAAQ;AAClD,WAAK,OAAWD;AAChB,WAAK,SAAW;AAChB,WAAK,WAAWC;AAChB,WAAK,OAAW;AAChB,WAAK,SAAW;AAAA,IAClB;AAGA,SAAK,UAAU,aAAa,SAAS,WAAW,QAAQ,WAAW;AACjE,UAAI,MAAMC,QAAO,MAAM,KAAK;AAE5B,UAAI,CAAC,KAAK;AAAQ,eAAO;AAEzB,eAAS,UAAU;AACnB,kBAAY,aAAa;AAEzB,aAAO;AACP,MAAAA,SAAQ,KAAK;AAEb,aAAOA,SAAQ,KAAK,sBAA2B,QAAQ,KAAK,OAAO,OAAOA,SAAQ,CAAC,CAAC,MAAM,IAAI;AAC5F,QAAAA,UAAS;AACT,YAAI,KAAK,WAAWA,SAAS,YAAY,IAAI,GAAI;AAC/C,iBAAO;AACP,UAAAA,UAAS;AACT;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AACP,YAAM,KAAK;AAEX,aAAO,MAAM,KAAK,OAAO,UAAU,sBAA2B,QAAQ,KAAK,OAAO,OAAO,GAAG,CAAC,MAAM,IAAI;AACrG,eAAO;AACP,YAAI,MAAM,KAAK,WAAY,YAAY,IAAI,GAAI;AAC7C,iBAAO;AACP,iBAAO;AACP;AAAA,QACF;AAAA,MACF;AAEA,gBAAU,KAAK,OAAO,MAAMA,QAAO,GAAG;AAEtC,aAAO,OAAO,OAAO,KAAK,MAAM,IAAI,OAAO,UAAU,OAAO,OACrD,OAAO,OAAO,KAAK,SAAS,KAAK,WAAWA,SAAQ,KAAK,MAAM,IAAI;AAAA,IAC5E;AAGA,SAAK,UAAU,WAAW,SAAS,SAAS,SAAS;AACnD,UAAI,SAAS,QAAQ;AAErB,UAAI,KAAK,MAAM;AACb,iBAAS,SAAS,KAAK,OAAO;AAAA,MAChC;AAEA,eAAS,cAAc,KAAK,OAAO,KAAK,eAAe,KAAK,SAAS;AAErE,UAAI,CAAC,SAAS;AACZ,kBAAU,KAAK,WAAW;AAE1B,YAAI,SAAS;AACX,mBAAS,QAAQ;AAAA,QACnB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAGA,IAAAH,QAAO,UAAU;AAAA;AAAA;;;AC3EjB;AAAA,sEAAAI,UAAAC,SAAA;AAAA;AAEA,QAAI,gBAAgB;AAEpB,QAAI,2BAA2B;AAAA,MAC7B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAI,kBAAkB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,aAAS,oBAAoB,KAAK;AAChC,UAAI,SAAS,CAAC;AAEd,UAAI,QAAQ,MAAM;AAChB,eAAO,KAAK,GAAG,EAAE,QAAQ,SAAU,OAAO;AACxC,cAAI,KAAK,EAAE,QAAQ,SAAU,OAAO;AAClC,mBAAO,OAAO,KAAK,CAAC,IAAI;AAAA,UAC1B,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,KAAK,KAAKC,UAAS;AAC1B,MAAAA,WAAUA,YAAW,CAAC;AAEtB,aAAO,KAAKA,QAAO,EAAE,QAAQ,SAAUC,OAAM;AAC3C,YAAI,yBAAyB,QAAQA,KAAI,MAAM,IAAI;AACjD,gBAAM,IAAI,cAAc,qBAAqBA,QAAO,gCAAgC,MAAM,cAAc;AAAA,QAC1G;AAAA,MACF,CAAC;AAGD,WAAK,MAAe;AACpB,WAAK,OAAeD,SAAQ,MAAM,KAAa;AAC/C,WAAK,UAAeA,SAAQ,SAAS,KAAU,WAAY;AAAE,eAAO;AAAA,MAAM;AAC1E,WAAK,YAAeA,SAAQ,WAAW,KAAQ,SAAU,MAAM;AAAE,eAAO;AAAA,MAAM;AAC9E,WAAK,aAAeA,SAAQ,YAAY,KAAO;AAC/C,WAAK,YAAeA,SAAQ,WAAW,KAAQ;AAC/C,WAAK,YAAeA,SAAQ,WAAW,KAAQ;AAC/C,WAAK,eAAeA,SAAQ,cAAc,KAAK;AAC/C,WAAK,eAAe,oBAAoBA,SAAQ,cAAc,KAAK,IAAI;AAEvE,UAAI,gBAAgB,QAAQ,KAAK,IAAI,MAAM,IAAI;AAC7C,cAAM,IAAI,cAAc,mBAAmB,KAAK,OAAO,yBAAyB,MAAM,cAAc;AAAA,MACtG;AAAA,IACF;AAEA,IAAAD,QAAO,UAAU;AAAA;AAAA;;;AC5DjB;AAAA,wEAAAG,UAAAC,SAAA;AAAA;AAIA,QAAI,SAAgB;AACpB,QAAI,gBAAgB;AACpB,QAAI,OAAgB;AAGpB,aAAS,YAAY,QAAQC,OAAM,QAAQ;AACzC,UAAI,UAAU,CAAC;AAEf,aAAO,QAAQ,QAAQ,SAAU,gBAAgB;AAC/C,iBAAS,YAAY,gBAAgBA,OAAM,MAAM;AAAA,MACnD,CAAC;AAED,aAAOA,KAAI,EAAE,QAAQ,SAAU,aAAa;AAC1C,eAAO,QAAQ,SAAU,cAAc,eAAe;AACpD,cAAI,aAAa,QAAQ,YAAY,OAAO,aAAa,SAAS,YAAY,MAAM;AAClF,oBAAQ,KAAK,aAAa;AAAA,UAC5B;AAAA,QACF,CAAC;AAED,eAAO,KAAK,WAAW;AAAA,MACzB,CAAC;AAED,aAAO,OAAO,OAAO,SAAU,MAAMC,QAAO;AAC1C,eAAO,QAAQ,QAAQA,MAAK,MAAM;AAAA,MACpC,CAAC;AAAA,IACH;AAGA,aAAS,aAA2B;AAClC,UAAI,SAAS;AAAA,QACP,QAAQ,CAAC;AAAA,QACT,UAAU,CAAC;AAAA,QACX,SAAS,CAAC;AAAA,QACV,UAAU,CAAC;AAAA,MACb,GAAGA,QAAO;AAEd,eAAS,YAAY,MAAM;AACzB,eAAO,KAAK,IAAI,EAAE,KAAK,GAAG,IAAI,OAAO,UAAU,EAAE,KAAK,GAAG,IAAI;AAAA,MAC/D;AAEA,WAAKA,SAAQ,GAAG,SAAS,UAAU,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACrE,kBAAUA,MAAK,EAAE,QAAQ,WAAW;AAAA,MACtC;AACA,aAAO;AAAA,IACT;AAGA,aAAS,OAAO,YAAY;AAC1B,WAAK,UAAW,WAAW,WAAY,CAAC;AACxC,WAAK,WAAW,WAAW,YAAY,CAAC;AACxC,WAAK,WAAW,WAAW,YAAY,CAAC;AAExC,WAAK,SAAS,QAAQ,SAAU,MAAM;AACpC,YAAI,KAAK,YAAY,KAAK,aAAa,UAAU;AAC/C,gBAAM,IAAI,cAAc,iHAAiH;AAAA,QAC3I;AAAA,MACF,CAAC;AAED,WAAK,mBAAmB,YAAY,MAAM,YAAY,CAAC,CAAC;AACxD,WAAK,mBAAmB,YAAY,MAAM,YAAY,CAAC,CAAC;AACxD,WAAK,kBAAmB,WAAW,KAAK,kBAAkB,KAAK,gBAAgB;AAAA,IACjF;AAGA,WAAO,UAAU;AAGjB,WAAO,SAAS,SAAS,eAAe;AACtC,UAAI,SAASC;AAEb,cAAQ,UAAU,QAAQ;AAAA,QACxB,KAAK;AACH,oBAAU,OAAO;AACjB,UAAAA,SAAQ,UAAU,CAAC;AACnB;AAAA,QAEF,KAAK;AACH,oBAAU,UAAU,CAAC;AACrB,UAAAA,SAAQ,UAAU,CAAC;AACnB;AAAA,QAEF;AACE,gBAAM,IAAI,cAAc,sDAAsD;AAAA,MAClF;AAEA,gBAAU,OAAO,QAAQ,OAAO;AAChC,MAAAA,SAAQ,OAAO,QAAQA,MAAK;AAE5B,UAAI,CAAC,QAAQ,MAAM,SAAU,QAAQ;AAAE,eAAO,kBAAkB;AAAA,MAAQ,CAAC,GAAG;AAC1E,cAAM,IAAI,cAAc,2FAA2F;AAAA,MACrH;AAEA,UAAI,CAACA,OAAM,MAAM,SAAU,MAAM;AAAE,eAAO,gBAAgB;AAAA,MAAM,CAAC,GAAG;AAClE,cAAM,IAAI,cAAc,oFAAoF;AAAA,MAC9G;AAEA,aAAO,IAAI,OAAO;AAAA,QAChB,SAAS;AAAA,QACT,UAAUA;AAAA,MACZ,CAAC;AAAA,IACH;AAGA,IAAAH,QAAO,UAAU;AAAA;AAAA;;;AC3GjB;AAAA,0EAAAI,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,IAAAA,QAAO,UAAU,IAAI,KAAK,yBAAyB;AAAA,MACjD,MAAM;AAAA,MACN,WAAW,SAAU,MAAM;AAAE,eAAO,SAAS,OAAO,OAAO;AAAA,MAAI;AAAA,IACjE,CAAC;AAAA;AAAA;;;ACPD;AAAA,0EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,IAAAA,QAAO,UAAU,IAAI,KAAK,yBAAyB;AAAA,MACjD,MAAM;AAAA,MACN,WAAW,SAAU,MAAM;AAAE,eAAO,SAAS,OAAO,OAAO,CAAC;AAAA,MAAG;AAAA,IACjE,CAAC;AAAA;AAAA;;;ACPD;AAAA,0EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,IAAAA,QAAO,UAAU,IAAI,KAAK,yBAAyB;AAAA,MACjD,MAAM;AAAA,MACN,WAAW,SAAU,MAAM;AAAE,eAAO,SAAS,OAAO,OAAO,CAAC;AAAA,MAAG;AAAA,IACjE,CAAC;AAAA;AAAA;;;ACPD;AAAA,iFAAAC,UAAAC,SAAA;AAAA;AAOA,QAAI,SAAS;AAGb,IAAAA,QAAO,UAAU,IAAI,OAAO;AAAA,MAC1B,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;AChBD;AAAA,2EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,aAAS,gBAAgB,MAAM;AAC7B,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI,MAAM,KAAK;AAEf,aAAQ,QAAQ,KAAK,SAAS,OACtB,QAAQ,MAAM,SAAS,UAAU,SAAS,UAAU,SAAS;AAAA,IACvE;AAEA,aAAS,oBAAoB;AAC3B,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,QAAQ;AACtB,aAAO,WAAW;AAAA,IACpB;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,0BAA0B;AAAA,MAClD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,QACT,WAAW,WAAY;AAAE,iBAAO;AAAA,QAAQ;AAAA,QACxC,WAAW,WAAY;AAAE,iBAAO;AAAA,QAAQ;AAAA,QACxC,WAAW,WAAY;AAAE,iBAAO;AAAA,QAAQ;AAAA,QACxC,WAAW,WAAY;AAAE,iBAAO;AAAA,QAAQ;AAAA,MAC1C;AAAA,MACA,cAAc;AAAA,IAChB,CAAC;AAAA;AAAA;;;ACjCD;AAAA,2EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,aAAS,mBAAmB,MAAM;AAChC,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI,MAAM,KAAK;AAEf,aAAQ,QAAQ,MAAM,SAAS,UAAU,SAAS,UAAU,SAAS,WAC7D,QAAQ,MAAM,SAAS,WAAW,SAAS,WAAW,SAAS;AAAA,IACzE;AAEA,aAAS,qBAAqB,MAAM;AAClC,aAAO,SAAS,UACT,SAAS,UACT,SAAS;AAAA,IAClB;AAEA,aAAS,UAAU,QAAQ;AACzB,aAAO,OAAO,UAAU,SAAS,KAAK,MAAM,MAAM;AAAA,IACpD;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,0BAA0B;AAAA,MAClD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,QACT,WAAW,SAAU,QAAQ;AAAE,iBAAO,SAAS,SAAS;AAAA,QAAS;AAAA,QACjE,WAAW,SAAU,QAAQ;AAAE,iBAAO,SAAS,SAAS;AAAA,QAAS;AAAA,QACjE,WAAW,SAAU,QAAQ;AAAE,iBAAO,SAAS,SAAS;AAAA,QAAS;AAAA,MACnE;AAAA,MACA,cAAc;AAAA,IAChB,CAAC;AAAA;AAAA;;;AClCD;AAAA,0EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,SAAS;AACb,QAAI,OAAS;AAEb,aAAS,UAAU,GAAG;AACpB,aAAS,MAAe,KAAO,KAAK,MAC3B,MAAe,KAAO,KAAK,MAC3B,MAAe,KAAO,KAAK;AAAA,IACtC;AAEA,aAAS,UAAU,GAAG;AACpB,aAAS,MAAe,KAAO,KAAK;AAAA,IACtC;AAEA,aAAS,UAAU,GAAG;AACpB,aAAS,MAAe,KAAO,KAAK;AAAA,IACtC;AAEA,aAAS,mBAAmB,MAAM;AAChC,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI,MAAM,KAAK,QACXC,SAAQ,GACR,YAAY,OACZ;AAEJ,UAAI,CAAC;AAAK,eAAO;AAEjB,WAAK,KAAKA,MAAK;AAGf,UAAI,OAAO,OAAO,OAAO,KAAK;AAC5B,aAAK,KAAK,EAAEA,MAAK;AAAA,MACnB;AAEA,UAAI,OAAO,KAAK;AAEd,YAAIA,SAAQ,MAAM;AAAK,iBAAO;AAC9B,aAAK,KAAK,EAAEA,MAAK;AAIjB,YAAI,OAAO,KAAK;AAEd,UAAAA;AAEA,iBAAOA,SAAQ,KAAKA,UAAS;AAC3B,iBAAK,KAAKA,MAAK;AACf,gBAAI,OAAO;AAAK;AAChB,gBAAI,OAAO,OAAO,OAAO;AAAK,qBAAO;AACrC,wBAAY;AAAA,UACd;AACA,iBAAO,aAAa,OAAO;AAAA,QAC7B;AAGA,YAAI,OAAO,KAAK;AAEd,UAAAA;AAEA,iBAAOA,SAAQ,KAAKA,UAAS;AAC3B,iBAAK,KAAKA,MAAK;AACf,gBAAI,OAAO;AAAK;AAChB,gBAAI,CAAC,UAAU,KAAK,WAAWA,MAAK,CAAC;AAAG,qBAAO;AAC/C,wBAAY;AAAA,UACd;AACA,iBAAO,aAAa,OAAO;AAAA,QAC7B;AAGA,eAAOA,SAAQ,KAAKA,UAAS;AAC3B,eAAK,KAAKA,MAAK;AACf,cAAI,OAAO;AAAK;AAChB,cAAI,CAAC,UAAU,KAAK,WAAWA,MAAK,CAAC;AAAG,mBAAO;AAC/C,sBAAY;AAAA,QACd;AACA,eAAO,aAAa,OAAO;AAAA,MAC7B;AAKA,UAAI,OAAO;AAAK,eAAO;AAEvB,aAAOA,SAAQ,KAAKA,UAAS;AAC3B,aAAK,KAAKA,MAAK;AACf,YAAI,OAAO;AAAK;AAChB,YAAI,OAAO;AAAK;AAChB,YAAI,CAAC,UAAU,KAAK,WAAWA,MAAK,CAAC,GAAG;AACtC,iBAAO;AAAA,QACT;AACA,oBAAY;AAAA,MACd;AAGA,UAAI,CAAC,aAAa,OAAO;AAAK,eAAO;AAGrC,UAAI,OAAO;AAAK,eAAO;AAGvB,aAAO,oBAAoB,KAAK,KAAK,MAAMA,MAAK,CAAC;AAAA,IACnD;AAEA,aAAS,qBAAqB,MAAM;AAClC,UAAI,QAAQ,MAAM,OAAO,GAAG,IAAI,MAAM,SAAS,CAAC;AAEhD,UAAI,MAAM,QAAQ,GAAG,MAAM,IAAI;AAC7B,gBAAQ,MAAM,QAAQ,MAAM,EAAE;AAAA,MAChC;AAEA,WAAK,MAAM,CAAC;AAEZ,UAAI,OAAO,OAAO,OAAO,KAAK;AAC5B,YAAI,OAAO;AAAK,iBAAO;AACvB,gBAAQ,MAAM,MAAM,CAAC;AACrB,aAAK,MAAM,CAAC;AAAA,MACd;AAEA,UAAI,UAAU;AAAK,eAAO;AAE1B,UAAI,OAAO,KAAK;AACd,YAAI,MAAM,CAAC,MAAM;AAAK,iBAAO,OAAO,SAAS,MAAM,MAAM,CAAC,GAAG,CAAC;AAC9D,YAAI,MAAM,CAAC,MAAM;AAAK,iBAAO,OAAO,SAAS,OAAO,EAAE;AACtD,eAAO,OAAO,SAAS,OAAO,CAAC;AAAA,MACjC;AAEA,UAAI,MAAM,QAAQ,GAAG,MAAM,IAAI;AAC7B,cAAM,MAAM,GAAG,EAAE,QAAQ,SAAU,GAAG;AACpC,iBAAO,QAAQ,SAAS,GAAG,EAAE,CAAC;AAAA,QAChC,CAAC;AAED,gBAAQ;AACR,eAAO;AAEP,eAAO,QAAQ,SAAU,GAAG;AAC1B,mBAAU,IAAI;AACd,kBAAQ;AAAA,QACV,CAAC;AAED,eAAO,OAAO;AAAA,MAEhB;AAEA,aAAO,OAAO,SAAS,OAAO,EAAE;AAAA,IAClC;AAEA,aAAS,UAAU,QAAQ;AACzB,aAAQ,OAAO,UAAU,SAAS,KAAK,MAAM,MAAO,sBAC5C,SAAS,MAAM,KAAK,CAAC,OAAO,eAAe,MAAM;AAAA,IAC3D;AAEA,IAAAD,QAAO,UAAU,IAAI,KAAK,yBAAyB;AAAA,MACjD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,QACT,QAAa,SAAU,KAAK;AAAE,iBAAO,OAAO,IAAI,OAAO,IAAI,SAAS,CAAC,IAAI,QAAQ,IAAI,SAAS,CAAC,EAAE,MAAM,CAAC;AAAA,QAAG;AAAA,QAC3G,OAAa,SAAU,KAAK;AAAE,iBAAO,OAAO,IAAI,MAAO,IAAI,SAAS,CAAC,IAAI,OAAQ,IAAI,SAAS,CAAC,EAAE,MAAM,CAAC;AAAA,QAAG;AAAA,QAC3G,SAAa,SAAU,KAAK;AAAE,iBAAO,IAAI,SAAS,EAAE;AAAA,QAAG;AAAA;AAAA,QAEvD,aAAa,SAAU,KAAK;AAAE,iBAAO,OAAO,IAAI,OAAO,IAAI,SAAS,EAAE,EAAE,YAAY,IAAK,QAAQ,IAAI,SAAS,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC;AAAA,QAAG;AAAA,MAC5I;AAAA,MACA,cAAc;AAAA,MACd,cAAc;AAAA,QACZ,QAAa,CAAE,GAAI,KAAM;AAAA,QACzB,OAAa,CAAE,GAAI,KAAM;AAAA,QACzB,SAAa,CAAE,IAAI,KAAM;AAAA,QACzB,aAAa,CAAE,IAAI,KAAM;AAAA,MAC3B;AAAA,IACF,CAAC;AAAA;AAAA;;;AC5KD;AAAA,4EAAAE,UAAAC,SAAA;AAAA;AAEA,QAAI,SAAS;AACb,QAAI,OAAS;AAEb,QAAI,qBAAqB,IAAI;AAAA;AAAA,MAE3B;AAAA,IASuB;AAEzB,aAAS,iBAAiB,MAAM;AAC9B,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI,CAAC,mBAAmB,KAAK,IAAI;AAAA;AAAA,MAG7B,KAAK,KAAK,SAAS,CAAC,MAAM,KAAK;AACjC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAmB,MAAM;AAChC,UAAI,OAAO,MAAM,MAAM;AAEvB,cAAS,KAAK,QAAQ,MAAM,EAAE,EAAE,YAAY;AAC5C,aAAS,MAAM,CAAC,MAAM,MAAM,KAAK;AACjC,eAAS,CAAC;AAEV,UAAI,KAAK,QAAQ,MAAM,CAAC,CAAC,KAAK,GAAG;AAC/B,gBAAQ,MAAM,MAAM,CAAC;AAAA,MACvB;AAEA,UAAI,UAAU,QAAQ;AACpB,eAAQ,SAAS,IAAK,OAAO,oBAAoB,OAAO;AAAA,MAE1D,WAAW,UAAU,QAAQ;AAC3B,eAAO;AAAA,MAET,WAAW,MAAM,QAAQ,GAAG,KAAK,GAAG;AAClC,cAAM,MAAM,GAAG,EAAE,QAAQ,SAAU,GAAG;AACpC,iBAAO,QAAQ,WAAW,GAAG,EAAE,CAAC;AAAA,QAClC,CAAC;AAED,gBAAQ;AACR,eAAO;AAEP,eAAO,QAAQ,SAAU,GAAG;AAC1B,mBAAS,IAAI;AACb,kBAAQ;AAAA,QACV,CAAC;AAED,eAAO,OAAO;AAAA,MAEhB;AACA,aAAO,OAAO,WAAW,OAAO,EAAE;AAAA,IACpC;AAGA,QAAI,yBAAyB;AAE7B,aAAS,mBAAmB,QAAQ,OAAO;AACzC,UAAI;AAEJ,UAAI,MAAM,MAAM,GAAG;AACjB,gBAAQ,OAAO;AAAA,UACb,KAAK;AAAa,mBAAO;AAAA,UACzB,KAAK;AAAa,mBAAO;AAAA,UACzB,KAAK;AAAa,mBAAO;AAAA,QAC3B;AAAA,MACF,WAAW,OAAO,sBAAsB,QAAQ;AAC9C,gBAAQ,OAAO;AAAA,UACb,KAAK;AAAa,mBAAO;AAAA,UACzB,KAAK;AAAa,mBAAO;AAAA,UACzB,KAAK;AAAa,mBAAO;AAAA,QAC3B;AAAA,MACF,WAAW,OAAO,sBAAsB,QAAQ;AAC9C,gBAAQ,OAAO;AAAA,UACb,KAAK;AAAa,mBAAO;AAAA,UACzB,KAAK;AAAa,mBAAO;AAAA,UACzB,KAAK;AAAa,mBAAO;AAAA,QAC3B;AAAA,MACF,WAAW,OAAO,eAAe,MAAM,GAAG;AACxC,eAAO;AAAA,MACT;AAEA,YAAM,OAAO,SAAS,EAAE;AAKxB,aAAO,uBAAuB,KAAK,GAAG,IAAI,IAAI,QAAQ,KAAK,IAAI,IAAI;AAAA,IACrE;AAEA,aAAS,QAAQ,QAAQ;AACvB,aAAQ,OAAO,UAAU,SAAS,KAAK,MAAM,MAAM,sBAC3C,SAAS,MAAM,KAAK,OAAO,eAAe,MAAM;AAAA,IAC1D;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,2BAA2B;AAAA,MACnD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,cAAc;AAAA,IAChB,CAAC;AAAA;AAAA;;;ACnHD;AAAA,6EAAAC,UAAAC,SAAA;AAAA;AAWA,QAAI,SAAS;AAGb,IAAAA,QAAO,UAAU,IAAI,OAAO;AAAA,MAC1B,SAAS;AAAA,QACP;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACxBD;AAAA,6EAAAC,UAAAC,SAAA;AAAA;AAUA,QAAI,SAAS;AAGb,IAAAA,QAAO,UAAU,IAAI,OAAO;AAAA,MAC1B,SAAS;AAAA,QACP;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACjBD;AAAA,gFAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,QAAI,mBAAmB,IAAI;AAAA,MACzB;AAAA,IAEgB;AAElB,QAAI,wBAAwB,IAAI;AAAA,MAC9B;AAAA,IASwB;AAE1B,aAAS,qBAAqB,MAAM;AAClC,UAAI,SAAS;AAAM,eAAO;AAC1B,UAAI,iBAAiB,KAAK,IAAI,MAAM;AAAM,eAAO;AACjD,UAAI,sBAAsB,KAAK,IAAI,MAAM;AAAM,eAAO;AACtD,aAAO;AAAA,IACT;AAEA,aAAS,uBAAuB,MAAM;AACpC,UAAI,OAAO,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,WAAW,GAC1D,QAAQ,MAAM,SAAS,WAAW;AAEtC,cAAQ,iBAAiB,KAAK,IAAI;AAClC,UAAI,UAAU;AAAM,gBAAQ,sBAAsB,KAAK,IAAI;AAE3D,UAAI,UAAU;AAAM,cAAM,IAAI,MAAM,oBAAoB;AAIxD,aAAO,CAAE,MAAM,CAAC;AAChB,cAAQ,CAAE,MAAM,CAAC,IAAK;AACtB,YAAM,CAAE,MAAM,CAAC;AAEf,UAAI,CAAC,MAAM,CAAC,GAAG;AACb,eAAO,IAAI,KAAK,KAAK,IAAI,MAAM,OAAO,GAAG,CAAC;AAAA,MAC5C;AAIA,aAAO,CAAE,MAAM,CAAC;AAChB,eAAS,CAAE,MAAM,CAAC;AAClB,eAAS,CAAE,MAAM,CAAC;AAElB,UAAI,MAAM,CAAC,GAAG;AACZ,mBAAW,MAAM,CAAC,EAAE,MAAM,GAAG,CAAC;AAC9B,eAAO,SAAS,SAAS,GAAG;AAC1B,sBAAY;AAAA,QACd;AACA,mBAAW,CAAC;AAAA,MACd;AAIA,UAAI,MAAM,CAAC,GAAG;AACZ,kBAAU,CAAE,MAAM,EAAE;AACpB,oBAAY,EAAE,MAAM,EAAE,KAAK;AAC3B,iBAAS,UAAU,KAAK,aAAa;AACrC,YAAI,MAAM,CAAC,MAAM;AAAK,kBAAQ,CAAC;AAAA,MACjC;AAEA,aAAO,IAAI,KAAK,KAAK,IAAI,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,QAAQ,CAAC;AAE1E,UAAI;AAAO,aAAK,QAAQ,KAAK,QAAQ,IAAI,KAAK;AAE9C,aAAO;AAAA,IACT;AAEA,aAAS,uBAAuB,QAAoB;AAClD,aAAO,OAAO,YAAY;AAAA,IAC5B;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,+BAA+B;AAAA,MACvD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;ACvFD;AAAA,4EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,aAAS,iBAAiB,MAAM;AAC9B,aAAO,SAAS,QAAQ,SAAS;AAAA,IACnC;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,2BAA2B;AAAA,MACnD,MAAM;AAAA,MACN,SAAS;AAAA,IACX,CAAC;AAAA;AAAA;;;ACXD;AAAA,6EAAAC,UAAAC,SAAA;AAAA;AAIA,QAAI;AAEJ,QAAI;AAEE,iBAAW;AACf,mBAAa,SAAS,QAAQ,EAAE;AAAA,IAClC,SAAS,IAAP;AAAA,IAAY;AAFR;AAIN,QAAI,OAAa;AAIjB,QAAI,aAAa;AAGjB,aAAS,kBAAkB,MAAM;AAC/B,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI,MAAM,KAAK,SAAS,GAAG,MAAM,KAAK,QAAQ,MAAM;AAGpD,WAAK,MAAM,GAAG,MAAM,KAAK,OAAO;AAC9B,eAAO,IAAI,QAAQ,KAAK,OAAO,GAAG,CAAC;AAGnC,YAAI,OAAO;AAAI;AAGf,YAAI,OAAO;AAAG,iBAAO;AAErB,kBAAU;AAAA,MACZ;AAGA,aAAQ,SAAS,MAAO;AAAA,IAC1B;AAEA,aAAS,oBAAoB,MAAM;AACjC,UAAI,KAAK,UACL,QAAQ,KAAK,QAAQ,YAAY,EAAE,GACnC,MAAM,MAAM,QACZ,MAAM,YACN,OAAO,GACP,SAAS,CAAC;AAId,WAAK,MAAM,GAAG,MAAM,KAAK,OAAO;AAC9B,YAAK,MAAM,MAAM,KAAM,KAAK;AAC1B,iBAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,iBAAO,KAAM,QAAQ,IAAK,GAAI;AAC9B,iBAAO,KAAK,OAAO,GAAI;AAAA,QACzB;AAEA,eAAQ,QAAQ,IAAK,IAAI,QAAQ,MAAM,OAAO,GAAG,CAAC;AAAA,MACpD;AAIA,iBAAY,MAAM,IAAK;AAEvB,UAAI,aAAa,GAAG;AAClB,eAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,eAAO,KAAM,QAAQ,IAAK,GAAI;AAC9B,eAAO,KAAK,OAAO,GAAI;AAAA,MACzB,WAAW,aAAa,IAAI;AAC1B,eAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,eAAO,KAAM,QAAQ,IAAK,GAAI;AAAA,MAChC,WAAW,aAAa,IAAI;AAC1B,eAAO,KAAM,QAAQ,IAAK,GAAI;AAAA,MAChC;AAGA,UAAI,YAAY;AAEd,eAAO,WAAW,OAAO,WAAW,KAAK,MAAM,IAAI,IAAI,WAAW,MAAM;AAAA,MAC1E;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,oBAAoB,QAAoB;AAC/C,UAAI,SAAS,IAAI,OAAO,GAAG,KAAK,MAC5B,MAAM,OAAO,QACb,MAAM;AAIV,WAAK,MAAM,GAAG,MAAM,KAAK,OAAO;AAC9B,YAAK,MAAM,MAAM,KAAM,KAAK;AAC1B,oBAAU,IAAK,QAAQ,KAAM,EAAI;AACjC,oBAAU,IAAK,QAAQ,KAAM,EAAI;AACjC,oBAAU,IAAK,QAAQ,IAAK,EAAI;AAChC,oBAAU,IAAI,OAAO,EAAI;AAAA,QAC3B;AAEA,gBAAQ,QAAQ,KAAK,OAAO,GAAG;AAAA,MACjC;AAIA,aAAO,MAAM;AAEb,UAAI,SAAS,GAAG;AACd,kBAAU,IAAK,QAAQ,KAAM,EAAI;AACjC,kBAAU,IAAK,QAAQ,KAAM,EAAI;AACjC,kBAAU,IAAK,QAAQ,IAAK,EAAI;AAChC,kBAAU,IAAI,OAAO,EAAI;AAAA,MAC3B,WAAW,SAAS,GAAG;AACrB,kBAAU,IAAK,QAAQ,KAAM,EAAI;AACjC,kBAAU,IAAK,QAAQ,IAAK,EAAI;AAChC,kBAAU,IAAK,QAAQ,IAAK,EAAI;AAChC,kBAAU,IAAI,EAAE;AAAA,MAClB,WAAW,SAAS,GAAG;AACrB,kBAAU,IAAK,QAAQ,IAAK,EAAI;AAChC,kBAAU,IAAK,QAAQ,IAAK,EAAI;AAChC,kBAAU,IAAI,EAAE;AAChB,kBAAU,IAAI,EAAE;AAAA,MAClB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,SAAS,QAAQ;AACxB,aAAO,cAAc,WAAW,SAAS,MAAM;AAAA,IACjD;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,4BAA4B;AAAA,MACpD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;ACzID;AAAA,2EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,QAAI,kBAAkB,OAAO,UAAU;AACvC,QAAI,YAAkB,OAAO,UAAU;AAEvC,aAAS,gBAAgB,MAAM;AAC7B,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI,aAAa,CAAC,GAAGC,QAAO,QAAQ,MAAM,SAAS,YAC/C,SAAS;AAEb,WAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,eAAO,OAAOA,MAAK;AACnB,qBAAa;AAEb,YAAI,UAAU,KAAK,IAAI,MAAM;AAAmB,iBAAO;AAEvD,aAAK,WAAW,MAAM;AACpB,cAAI,gBAAgB,KAAK,MAAM,OAAO,GAAG;AACvC,gBAAI,CAAC;AAAY,2BAAa;AAAA;AACzB,qBAAO;AAAA,UACd;AAAA,QACF;AAEA,YAAI,CAAC;AAAY,iBAAO;AAExB,YAAI,WAAW,QAAQ,OAAO,MAAM;AAAI,qBAAW,KAAK,OAAO;AAAA;AAC1D,iBAAO;AAAA,MACd;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB,MAAM;AAC/B,aAAO,SAAS,OAAO,OAAO,CAAC;AAAA,IACjC;AAEA,IAAAD,QAAO,UAAU,IAAI,KAAK,0BAA0B;AAAA,MAClD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;AC3CD;AAAA,4EAAAE,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,QAAI,YAAY,OAAO,UAAU;AAEjC,aAAS,iBAAiB,MAAM;AAC9B,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAIC,QAAO,QAAQ,MAAM,MAAM,QAC3B,SAAS;AAEb,eAAS,IAAI,MAAM,OAAO,MAAM;AAEhC,WAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,eAAO,OAAOA,MAAK;AAEnB,YAAI,UAAU,KAAK,IAAI,MAAM;AAAmB,iBAAO;AAEvD,eAAO,OAAO,KAAK,IAAI;AAEvB,YAAI,KAAK,WAAW;AAAG,iBAAO;AAE9B,eAAOA,MAAK,IAAI,CAAE,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAE;AAAA,MAC3C;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAmB,MAAM;AAChC,UAAI,SAAS;AAAM,eAAO,CAAC;AAE3B,UAAIA,QAAO,QAAQ,MAAM,MAAM,QAC3B,SAAS;AAEb,eAAS,IAAI,MAAM,OAAO,MAAM;AAEhC,WAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,eAAO,OAAOA,MAAK;AAEnB,eAAO,OAAO,KAAK,IAAI;AAEvB,eAAOA,MAAK,IAAI,CAAE,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAE;AAAA,MAC3C;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAU,IAAI,KAAK,2BAA2B;AAAA,MACnD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;ACpDD;AAAA,0EAAAE,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,QAAI,kBAAkB,OAAO,UAAU;AAEvC,aAAS,eAAe,MAAM;AAC5B,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI,KAAK,SAAS;AAElB,WAAK,OAAO,QAAQ;AAClB,YAAI,gBAAgB,KAAK,QAAQ,GAAG,GAAG;AACrC,cAAI,OAAO,GAAG,MAAM;AAAM,mBAAO;AAAA,QACnC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,MAAM;AAC9B,aAAO,SAAS,OAAO,OAAO,CAAC;AAAA,IACjC;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,yBAAyB;AAAA,MACjD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;AC5BD;AAAA,qFAAAC,UAAAC,SAAA;AAAA;AAUA,QAAI,SAAS;AAGb,IAAAA,QAAO,UAAU,IAAI,OAAO;AAAA,MAC1B,SAAS;AAAA,QACP;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR;AAAA,QACA;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;AC3BD;AAAA,mFAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,aAAS,6BAA6B;AACpC,aAAO;AAAA,IACT;AAEA,aAAS,+BAA+B;AAEtC,aAAO;AAAA,IACT;AAEA,aAAS,+BAA+B;AACtC,aAAO;AAAA,IACT;AAEA,aAAS,YAAY,QAAQ;AAC3B,aAAO,OAAO,WAAW;AAAA,IAC3B;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,kCAAkC;AAAA,MAC1D,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;AC3BD;AAAA,gFAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,OAAO;AAEX,aAAS,wBAAwB,MAAM;AACrC,UAAI,SAAS;AAAM,eAAO;AAC1B,UAAI,KAAK,WAAW;AAAG,eAAO;AAE9B,UAAI,SAAS,MACT,OAAS,cAAc,KAAK,IAAI,GAChC,YAAY;AAIhB,UAAI,OAAO,CAAC,MAAM,KAAK;AACrB,YAAI;AAAM,sBAAY,KAAK,CAAC;AAE5B,YAAI,UAAU,SAAS;AAAG,iBAAO;AAEjC,YAAI,OAAO,OAAO,SAAS,UAAU,SAAS,CAAC,MAAM;AAAK,iBAAO;AAAA,MACnE;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,0BAA0B,MAAM;AACvC,UAAI,SAAS,MACT,OAAS,cAAc,KAAK,IAAI,GAChC,YAAY;AAGhB,UAAI,OAAO,CAAC,MAAM,KAAK;AACrB,YAAI;AAAM,sBAAY,KAAK,CAAC;AAC5B,iBAAS,OAAO,MAAM,GAAG,OAAO,SAAS,UAAU,SAAS,CAAC;AAAA,MAC/D;AAEA,aAAO,IAAI,OAAO,QAAQ,SAAS;AAAA,IACrC;AAEA,aAAS,0BAA0B,QAAoB;AACrD,UAAI,SAAS,MAAM,OAAO,SAAS;AAEnC,UAAI,OAAO;AAAQ,kBAAU;AAC7B,UAAI,OAAO;AAAW,kBAAU;AAChC,UAAI,OAAO;AAAY,kBAAU;AAEjC,aAAO;AAAA,IACT;AAEA,aAAS,SAAS,QAAQ;AACxB,aAAO,OAAO,UAAU,SAAS,KAAK,MAAM,MAAM;AAAA,IACpD;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,+BAA+B;AAAA,MACvD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;AC3DD;AAAA,kFAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI;AASJ,QAAI;AAEE,iBAAW;AACf,gBAAU,SAAS,SAAS;AAAA,IAC9B,SAAS,GAAP;AAGA,UAAI,OAAO,WAAW;AAAa,kBAAU,OAAO;AAAA,IACtD;AANM;AAQN,QAAI,OAAO;AAEX,aAAS,0BAA0B,MAAM;AACvC,UAAI,SAAS;AAAM,eAAO;AAE1B,UAAI;AACF,YAAI,SAAS,MAAM,OAAO,KACtB,MAAS,QAAQ,MAAM,QAAQ,EAAE,OAAO,KAAK,CAAC;AAElD,YAAI,IAAI,SAA4B,aAChC,IAAI,KAAK,WAAuB,KAChC,IAAI,KAAK,CAAC,EAAE,SAAoB,yBAC/B,IAAI,KAAK,CAAC,EAAE,WAAW,SAAS,6BAC/B,IAAI,KAAK,CAAC,EAAE,WAAW,SAAS,sBAAuB;AAC3D,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT,SAAS,KAAP;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,4BAA4B,MAAM;AAGzC,UAAI,SAAS,MAAM,OAAO,KACtB,MAAS,QAAQ,MAAM,QAAQ,EAAE,OAAO,KAAK,CAAC,GAC9C,SAAS,CAAC,GACV;AAEJ,UAAI,IAAI,SAA4B,aAChC,IAAI,KAAK,WAAuB,KAChC,IAAI,KAAK,CAAC,EAAE,SAAoB,yBAC/B,IAAI,KAAK,CAAC,EAAE,WAAW,SAAS,6BAC/B,IAAI,KAAK,CAAC,EAAE,WAAW,SAAS,sBAAuB;AAC3D,cAAM,IAAI,MAAM,4BAA4B;AAAA,MAC9C;AAEA,UAAI,KAAK,CAAC,EAAE,WAAW,OAAO,QAAQ,SAAU,OAAO;AACrD,eAAO,KAAK,MAAM,IAAI;AAAA,MACxB,CAAC;AAED,aAAO,IAAI,KAAK,CAAC,EAAE,WAAW,KAAK;AAInC,UAAI,IAAI,KAAK,CAAC,EAAE,WAAW,KAAK,SAAS,kBAAkB;AAEzD,eAAO,IAAI,SAAS,QAAQ,OAAO,MAAM,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AAAA,MACpE;AAIA,aAAO,IAAI,SAAS,QAAQ,YAAY,OAAO,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAAA,IACxE;AAEA,aAAS,4BAA4B,QAAoB;AACvD,aAAO,OAAO,SAAS;AAAA,IACzB;AAEA,aAAS,WAAW,QAAQ;AAC1B,aAAO,OAAO,UAAU,SAAS,KAAK,MAAM,MAAM;AAAA,IACpD;AAEA,IAAAA,QAAO,UAAU,IAAI,KAAK,iCAAiC;AAAA,MACzD,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;AC5FD;AAAA,qFAAAC,UAAAC,SAAA;AAAA;AAYA,QAAI,SAAS;AAGb,IAAAA,QAAO,UAAU,OAAO,UAAU,IAAI,OAAO;AAAA,MAC3C,SAAS;AAAA,QACP;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACxBD;AAAA,wEAAAC,UAAAC,SAAA;AAAA;AAIA,QAAI,SAAsB;AAC1B,QAAI,gBAAsB;AAC1B,QAAI,OAAsB;AAC1B,QAAI,sBAAsB;AAC1B,QAAI,sBAAsB;AAG1B,QAAI,kBAAkB,OAAO,UAAU;AAGvC,QAAI,kBAAoB;AACxB,QAAI,mBAAoB;AACxB,QAAI,mBAAoB;AACxB,QAAI,oBAAoB;AAGxB,QAAI,gBAAiB;AACrB,QAAI,iBAAiB;AACrB,QAAI,gBAAiB;AAGrB,QAAI,wBAAgC;AACpC,QAAI,gCAAgC;AACpC,QAAI,0BAAgC;AACpC,QAAI,qBAAgC;AACpC,QAAI,kBAAgC;AAGpC,aAAS,OAAO,KAAK;AAAE,aAAO,OAAO,UAAU,SAAS,KAAK,GAAG;AAAA,IAAG;AAEnE,aAAS,OAAO,GAAG;AACjB,aAAQ,MAAM,MAAkB,MAAM;AAAA,IACxC;AAEA,aAAS,eAAe,GAAG;AACzB,aAAQ,MAAM,KAAmB,MAAM;AAAA,IACzC;AAEA,aAAS,aAAa,GAAG;AACvB,aAAQ,MAAM,KACN,MAAM,MACN,MAAM,MACN,MAAM;AAAA,IAChB;AAEA,aAAS,kBAAkB,GAAG;AAC5B,aAAO,MAAM,MACN,MAAM,MACN,MAAM,MACN,MAAM,OACN,MAAM;AAAA,IACf;AAEA,aAAS,YAAY,GAAG;AACtB,UAAI;AAEJ,UAAK,MAAe,KAAO,KAAK,IAAc;AAC5C,eAAO,IAAI;AAAA,MACb;AAGA,WAAK,IAAI;AAET,UAAK,MAAe,MAAQ,MAAM,KAAc;AAC9C,eAAO,KAAK,KAAO;AAAA,MACrB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,GAAG;AACxB,UAAI,MAAM,KAAa;AAAE,eAAO;AAAA,MAAG;AACnC,UAAI,MAAM,KAAa;AAAE,eAAO;AAAA,MAAG;AACnC,UAAI,MAAM,IAAa;AAAE,eAAO;AAAA,MAAG;AACnC,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB,GAAG;AAC1B,UAAK,MAAe,KAAO,KAAK,IAAc;AAC5C,eAAO,IAAI;AAAA,MACb;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,qBAAqB,GAAG;AAE/B,aAAQ,MAAM,KAAe,OACtB,MAAM,KAAe,SACrB,MAAM,KAAe,OACrB,MAAM,MAAe,MACrB,MAAM,IAAiB,MACvB,MAAM,MAAe,OACrB,MAAM,MAAe,OACrB,MAAM,MAAe,OACrB,MAAM,MAAe,OACrB,MAAM,MAAe,SACrB,MAAM,KAAmB,MACzB,MAAM,KAAe,MACrB,MAAM,KAAe,MACrB,MAAM,KAAe,OACrB,MAAM,KAAe,MACrB,MAAM,KAAe,MACrB,MAAM,KAAe,WACrB,MAAM,KAAe,WAAW;AAAA,IACzC;AAEA,aAAS,kBAAkB,GAAG;AAC5B,UAAI,KAAK,OAAQ;AACf,eAAO,OAAO,aAAa,CAAC;AAAA,MAC9B;AAGA,aAAO,OAAO;AAAA,SACV,IAAI,SAAa,MAAM;AAAA,SACvB,IAAI,QAAY,QAAU;AAAA,MAC9B;AAAA,IACF;AAEA,QAAI,oBAAoB,IAAI,MAAM,GAAG;AACrC,QAAI,kBAAkB,IAAI,MAAM,GAAG;AACnC,SAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,wBAAkB,CAAC,IAAI,qBAAqB,CAAC,IAAI,IAAI;AACrD,sBAAgB,CAAC,IAAI,qBAAqB,CAAC;AAAA,IAC7C;AAHS;AAMT,aAASC,OAAM,OAAOC,UAAS;AAC7B,WAAK,QAAQ;AAEb,WAAK,WAAYA,SAAQ,UAAU,KAAM;AACzC,WAAK,SAAYA,SAAQ,QAAQ,KAAQ;AACzC,WAAK,YAAYA,SAAQ,WAAW,KAAK;AACzC,WAAK,SAAYA,SAAQ,QAAQ,KAAQ;AACzC,WAAK,OAAYA,SAAQ,MAAM,KAAU;AACzC,WAAK,WAAYA,SAAQ,UAAU,KAAM;AAEzC,WAAK,gBAAgB,KAAK,OAAO;AACjC,WAAK,UAAgB,KAAK,OAAO;AAEjC,WAAK,SAAa,MAAM;AACxB,WAAK,WAAa;AAClB,WAAK,OAAa;AAClB,WAAK,YAAa;AAClB,WAAK,aAAa;AAElB,WAAK,YAAY,CAAC;AAAA,IAYpB;AAGA,aAAS,cAAc,OAAO,SAAS;AACrC,aAAO,IAAI;AAAA,QACT;AAAA,QACA,IAAI,KAAK,MAAM,UAAU,MAAM,OAAO,MAAM,UAAU,MAAM,MAAO,MAAM,WAAW,MAAM,SAAU;AAAA,MAAC;AAAA,IACzG;AAEA,aAAS,WAAW,OAAO,SAAS;AAClC,YAAM,cAAc,OAAO,OAAO;AAAA,IACpC;AAEA,aAAS,aAAa,OAAO,SAAS;AACpC,UAAI,MAAM,WAAW;AACnB,cAAM,UAAU,KAAK,MAAM,cAAc,OAAO,OAAO,CAAC;AAAA,MAC1D;AAAA,IACF;AAGA,QAAI,oBAAoB;AAAA,MAEtB,MAAM,SAAS,oBAAoB,OAAOC,OAAM,MAAM;AAEpD,YAAI,OAAO,OAAO;AAElB,YAAI,MAAM,YAAY,MAAM;AAC1B,qBAAW,OAAO,gCAAgC;AAAA,QACpD;AAEA,YAAI,KAAK,WAAW,GAAG;AACrB,qBAAW,OAAO,6CAA6C;AAAA,QACjE;AAEA,gBAAQ,uBAAuB,KAAK,KAAK,CAAC,CAAC;AAE3C,YAAI,UAAU,MAAM;AAClB,qBAAW,OAAO,2CAA2C;AAAA,QAC/D;AAEA,gBAAQ,SAAS,MAAM,CAAC,GAAG,EAAE;AAC7B,gBAAQ,SAAS,MAAM,CAAC,GAAG,EAAE;AAE7B,YAAI,UAAU,GAAG;AACf,qBAAW,OAAO,2CAA2C;AAAA,QAC/D;AAEA,cAAM,UAAU,KAAK,CAAC;AACtB,cAAM,kBAAmB,QAAQ;AAEjC,YAAI,UAAU,KAAK,UAAU,GAAG;AAC9B,uBAAa,OAAO,0CAA0C;AAAA,QAChE;AAAA,MACF;AAAA,MAEA,KAAK,SAAS,mBAAmB,OAAOA,OAAM,MAAM;AAElD,YAAI,QAAQ;AAEZ,YAAI,KAAK,WAAW,GAAG;AACrB,qBAAW,OAAO,6CAA6C;AAAA,QACjE;AAEA,iBAAS,KAAK,CAAC;AACf,iBAAS,KAAK,CAAC;AAEf,YAAI,CAAC,mBAAmB,KAAK,MAAM,GAAG;AACpC,qBAAW,OAAO,6DAA6D;AAAA,QACjF;AAEA,YAAI,gBAAgB,KAAK,MAAM,QAAQ,MAAM,GAAG;AAC9C,qBAAW,OAAO,gDAAgD,SAAS,cAAc;AAAA,QAC3F;AAEA,YAAI,CAAC,gBAAgB,KAAK,MAAM,GAAG;AACjC,qBAAW,OAAO,8DAA8D;AAAA,QAClF;AAEA,cAAM,OAAO,MAAM,IAAI;AAAA,MACzB;AAAA,IACF;AAGA,aAAS,eAAe,OAAOC,QAAO,KAAK,WAAW;AACpD,UAAI,WAAW,SAAS,YAAY;AAEpC,UAAIA,SAAQ,KAAK;AACf,kBAAU,MAAM,MAAM,MAAMA,QAAO,GAAG;AAEtC,YAAI,WAAW;AACb,eAAK,YAAY,GAAG,UAAU,QAAQ,QAAQ,YAAY,SAAS,aAAa,GAAG;AACjF,yBAAa,QAAQ,WAAW,SAAS;AACzC,gBAAI,EAAE,eAAe,KACd,MAAQ,cAAc,cAAc,UAAY;AACrD,yBAAW,OAAO,+BAA+B;AAAA,YACnD;AAAA,UACF;AAAA,QACF,WAAW,sBAAsB,KAAK,OAAO,GAAG;AAC9C,qBAAW,OAAO,8CAA8C;AAAA,QAClE;AAEA,cAAM,UAAU;AAAA,MAClB;AAAA,IACF;AAEA,aAAS,cAAc,OAAO,aAAa,QAAQ,iBAAiB;AAClE,UAAI,YAAY,KAAKC,QAAO;AAE5B,UAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,mBAAW,OAAO,mEAAmE;AAAA,MACvF;AAEA,mBAAa,OAAO,KAAK,MAAM;AAE/B,WAAKA,SAAQ,GAAG,WAAW,WAAW,QAAQA,SAAQ,UAAUA,UAAS,GAAG;AAC1E,cAAM,WAAWA,MAAK;AAEtB,YAAI,CAAC,gBAAgB,KAAK,aAAa,GAAG,GAAG;AAC3C,sBAAY,GAAG,IAAI,OAAO,GAAG;AAC7B,0BAAgB,GAAG,IAAI;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AAEA,aAAS,iBAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,WAAW,WAAW,UAAU;AAC1G,UAAIA,QAAO;AAKX,UAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,kBAAU,MAAM,UAAU,MAAM,KAAK,OAAO;AAE5C,aAAKA,SAAQ,GAAG,WAAW,QAAQ,QAAQA,SAAQ,UAAUA,UAAS,GAAG;AACvE,cAAI,MAAM,QAAQ,QAAQA,MAAK,CAAC,GAAG;AACjC,uBAAW,OAAO,6CAA6C;AAAA,UACjE;AAEA,cAAI,OAAO,YAAY,YAAY,OAAO,QAAQA,MAAK,CAAC,MAAM,mBAAmB;AAC/E,oBAAQA,MAAK,IAAI;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAKA,UAAI,OAAO,YAAY,YAAY,OAAO,OAAO,MAAM,mBAAmB;AACxE,kBAAU;AAAA,MACZ;AAGA,gBAAU,OAAO,OAAO;AAExB,UAAI,YAAY,MAAM;AACpB,kBAAU,CAAC;AAAA,MACb;AAEA,UAAI,WAAW,2BAA2B;AACxC,YAAI,MAAM,QAAQ,SAAS,GAAG;AAC5B,eAAKA,SAAQ,GAAG,WAAW,UAAU,QAAQA,SAAQ,UAAUA,UAAS,GAAG;AACzE,0BAAc,OAAO,SAAS,UAAUA,MAAK,GAAG,eAAe;AAAA,UACjE;AAAA,QACF,OAAO;AACL,wBAAc,OAAO,SAAS,WAAW,eAAe;AAAA,QAC1D;AAAA,MACF,OAAO;AACL,YAAI,CAAC,MAAM,QACP,CAAC,gBAAgB,KAAK,iBAAiB,OAAO,KAC9C,gBAAgB,KAAK,SAAS,OAAO,GAAG;AAC1C,gBAAM,OAAO,aAAa,MAAM;AAChC,gBAAM,WAAW,YAAY,MAAM;AACnC,qBAAW,OAAO,wBAAwB;AAAA,QAC5C;AACA,gBAAQ,OAAO,IAAI;AACnB,eAAO,gBAAgB,OAAO;AAAA,MAChC;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,OAAO;AAC5B,UAAI;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO,IAAc;AACvB,cAAM;AAAA,MACR,WAAW,OAAO,IAAc;AAC9B,cAAM;AACN,YAAI,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAM,IAAc;AAC3D,gBAAM;AAAA,QACR;AAAA,MACF,OAAO;AACL,mBAAW,OAAO,0BAA0B;AAAA,MAC9C;AAEA,YAAM,QAAQ;AACd,YAAM,YAAY,MAAM;AAAA,IAC1B;AAEA,aAAS,oBAAoB,OAAO,eAAe,aAAa;AAC9D,UAAI,aAAa,GACb,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE9C,aAAO,OAAO,GAAG;AACf,eAAO,eAAe,EAAE,GAAG;AACzB,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C;AAEA,YAAI,iBAAiB,OAAO,IAAa;AACvC,aAAG;AACD,iBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,UAC9C,SAAS,OAAO,MAAgB,OAAO,MAAgB,OAAO;AAAA,QAChE;AAEA,YAAI,OAAO,EAAE,GAAG;AACd,wBAAc,KAAK;AAEnB,eAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1C;AACA,gBAAM,aAAa;AAEnB,iBAAO,OAAO,IAAiB;AAC7B,kBAAM;AACN,iBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,UAC9C;AAAA,QACF,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAEA,UAAI,gBAAgB,MAAM,eAAe,KAAK,MAAM,aAAa,aAAa;AAC5E,qBAAa,OAAO,uBAAuB;AAAA,MAC7C;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,sBAAsB,OAAO;AACpC,UAAI,YAAY,MAAM,UAClB;AAEJ,WAAK,MAAM,MAAM,WAAW,SAAS;AAIrC,WAAK,OAAO,MAAe,OAAO,OAC9B,OAAO,MAAM,MAAM,WAAW,YAAY,CAAC,KAC3C,OAAO,MAAM,MAAM,WAAW,YAAY,CAAC,GAAG;AAEhD,qBAAa;AAEb,aAAK,MAAM,MAAM,WAAW,SAAS;AAErC,YAAI,OAAO,KAAK,aAAa,EAAE,GAAG;AAChC,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,OAAO,OAAO;AACtC,UAAI,UAAU,GAAG;AACf,cAAM,UAAU;AAAA,MAClB,WAAW,QAAQ,GAAG;AACpB,cAAM,UAAU,OAAO,OAAO,MAAM,QAAQ,CAAC;AAAA,MAC/C;AAAA,IACF;AAGA,aAAS,gBAAgB,OAAO,YAAY,sBAAsB;AAChE,UAAI,WACA,WACA,cACA,YACA,mBACA,OACA,YACA,aACA,QAAQ,MAAM,MACd,UAAU,MAAM,QAChB;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,aAAa,EAAE,KACf,kBAAkB,EAAE,KACpB,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,OACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,IAAa;AACtB,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,MAAe,OAAO,IAAa;AAC5C,oBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,YAAI,aAAa,SAAS,KACtB,wBAAwB,kBAAkB,SAAS,GAAG;AACxD,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,YAAM,OAAO;AACb,YAAM,SAAS;AACf,qBAAe,aAAa,MAAM;AAClC,0BAAoB;AAEpB,aAAO,OAAO,GAAG;AACf,YAAI,OAAO,IAAa;AACtB,sBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,cAAI,aAAa,SAAS,KACtB,wBAAwB,kBAAkB,SAAS,GAAG;AACxD;AAAA,UACF;AAAA,QAEF,WAAW,OAAO,IAAa;AAC7B,sBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,cAAI,aAAa,SAAS,GAAG;AAC3B;AAAA,UACF;AAAA,QAEF,WAAY,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,KAClE,wBAAwB,kBAAkB,EAAE,GAAG;AACxD;AAAA,QAEF,WAAW,OAAO,EAAE,GAAG;AACrB,kBAAQ,MAAM;AACd,uBAAa,MAAM;AACnB,wBAAc,MAAM;AACpB,8BAAoB,OAAO,OAAO,EAAE;AAEpC,cAAI,MAAM,cAAc,YAAY;AAClC,gCAAoB;AACpB,iBAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1C;AAAA,UACF,OAAO;AACL,kBAAM,WAAW;AACjB,kBAAM,OAAO;AACb,kBAAM,YAAY;AAClB,kBAAM,aAAa;AACnB;AAAA,UACF;AAAA,QACF;AAEA,YAAI,mBAAmB;AACrB,yBAAe,OAAO,cAAc,YAAY,KAAK;AACrD,2BAAiB,OAAO,MAAM,OAAO,KAAK;AAC1C,yBAAe,aAAa,MAAM;AAClC,8BAAoB;AAAA,QACtB;AAEA,YAAI,CAAC,eAAe,EAAE,GAAG;AACvB,uBAAa,MAAM,WAAW;AAAA,QAChC;AAEA,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAC9C;AAEA,qBAAe,OAAO,cAAc,YAAY,KAAK;AAErD,UAAI,MAAM,QAAQ;AAChB,eAAO;AAAA,MACT;AAEA,YAAM,OAAO;AACb,YAAM,SAAS;AACf,aAAO;AAAA,IACT;AAEA,aAAS,uBAAuB,OAAO,YAAY;AACjD,UAAI,IACA,cAAc;AAElB,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO,IAAa;AACtB,eAAO;AAAA,MACT;AAEA,YAAM,OAAO;AACb,YAAM,SAAS;AACf,YAAM;AACN,qBAAe,aAAa,MAAM;AAElC,cAAQ,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ,OAAO,GAAG;AAC1D,YAAI,OAAO,IAAa;AACtB,yBAAe,OAAO,cAAc,MAAM,UAAU,IAAI;AACxD,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,cAAI,OAAO,IAAa;AACtB,2BAAe,MAAM;AACrB,kBAAM;AACN,yBAAa,MAAM;AAAA,UACrB,OAAO;AACL,mBAAO;AAAA,UACT;AAAA,QAEF,WAAW,OAAO,EAAE,GAAG;AACrB,yBAAe,OAAO,cAAc,YAAY,IAAI;AACpD,2BAAiB,OAAO,oBAAoB,OAAO,OAAO,UAAU,CAAC;AACrE,yBAAe,aAAa,MAAM;AAAA,QAEpC,WAAW,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,GAAG;AAC7E,qBAAW,OAAO,8DAA8D;AAAA,QAElF,OAAO;AACL,gBAAM;AACN,uBAAa,MAAM;AAAA,QACrB;AAAA,MACF;AAEA,iBAAW,OAAO,4DAA4D;AAAA,IAChF;AAEA,aAAS,uBAAuB,OAAO,YAAY;AACjD,UAAI,cACA,YACA,WACA,WACA,KACA;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO,IAAa;AACtB,eAAO;AAAA,MACT;AAEA,YAAM,OAAO;AACb,YAAM,SAAS;AACf,YAAM;AACN,qBAAe,aAAa,MAAM;AAElC,cAAQ,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ,OAAO,GAAG;AAC1D,YAAI,OAAO,IAAa;AACtB,yBAAe,OAAO,cAAc,MAAM,UAAU,IAAI;AACxD,gBAAM;AACN,iBAAO;AAAA,QAET,WAAW,OAAO,IAAa;AAC7B,yBAAe,OAAO,cAAc,MAAM,UAAU,IAAI;AACxD,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,cAAI,OAAO,EAAE,GAAG;AACd,gCAAoB,OAAO,OAAO,UAAU;AAAA,UAG9C,WAAW,KAAK,OAAO,kBAAkB,EAAE,GAAG;AAC5C,kBAAM,UAAU,gBAAgB,EAAE;AAClC,kBAAM;AAAA,UAER,YAAY,MAAM,cAAc,EAAE,KAAK,GAAG;AACxC,wBAAY;AACZ,wBAAY;AAEZ,mBAAO,YAAY,GAAG,aAAa;AACjC,mBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,mBAAK,MAAM,YAAY,EAAE,MAAM,GAAG;AAChC,6BAAa,aAAa,KAAK;AAAA,cAEjC,OAAO;AACL,2BAAW,OAAO,gCAAgC;AAAA,cACpD;AAAA,YACF;AAEA,kBAAM,UAAU,kBAAkB,SAAS;AAE3C,kBAAM;AAAA,UAER,OAAO;AACL,uBAAW,OAAO,yBAAyB;AAAA,UAC7C;AAEA,yBAAe,aAAa,MAAM;AAAA,QAEpC,WAAW,OAAO,EAAE,GAAG;AACrB,yBAAe,OAAO,cAAc,YAAY,IAAI;AACpD,2BAAiB,OAAO,oBAAoB,OAAO,OAAO,UAAU,CAAC;AACrE,yBAAe,aAAa,MAAM;AAAA,QAEpC,WAAW,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,GAAG;AAC7E,qBAAW,OAAO,8DAA8D;AAAA,QAElF,OAAO;AACL,gBAAM;AACN,uBAAa,MAAM;AAAA,QACrB;AAAA,MACF;AAEA,iBAAW,OAAO,4DAA4D;AAAA,IAChF;AAEA,aAAS,mBAAmB,OAAO,YAAY;AAC7C,UAAI,WAAW,MACX,OACA,OAAW,MAAM,KACjB,SACA,UAAW,MAAM,QACjB,WACA,YACA,QACA,gBACA,WACA,kBAAkB,CAAC,GACnB,SACA,QACA,WACA;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO,IAAa;AACtB,qBAAa;AACb,oBAAY;AACZ,kBAAU,CAAC;AAAA,MACb,WAAW,OAAO,KAAa;AAC7B,qBAAa;AACb,oBAAY;AACZ,kBAAU,CAAC;AAAA,MACb,OAAO;AACL,eAAO;AAAA,MACT;AAEA,UAAI,MAAM,WAAW,MAAM;AACzB,cAAM,UAAU,MAAM,MAAM,IAAI;AAAA,MAClC;AAEA,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,aAAO,OAAO,GAAG;AACf,4BAAoB,OAAO,MAAM,UAAU;AAE3C,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,YAAI,OAAO,YAAY;AACrB,gBAAM;AACN,gBAAM,MAAM;AACZ,gBAAM,SAAS;AACf,gBAAM,OAAO,YAAY,YAAY;AACrC,gBAAM,SAAS;AACf,iBAAO;AAAA,QACT,WAAW,CAAC,UAAU;AACpB,qBAAW,OAAO,8CAA8C;AAAA,QAClE;AAEA,iBAAS,UAAU,YAAY;AAC/B,iBAAS,iBAAiB;AAE1B,YAAI,OAAO,IAAa;AACtB,sBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,cAAI,aAAa,SAAS,GAAG;AAC3B,qBAAS,iBAAiB;AAC1B,kBAAM;AACN,gCAAoB,OAAO,MAAM,UAAU;AAAA,UAC7C;AAAA,QACF;AAEA,gBAAQ,MAAM;AACd,oBAAY,OAAO,YAAY,iBAAiB,OAAO,IAAI;AAC3D,iBAAS,MAAM;AACf,kBAAU,MAAM;AAChB,4BAAoB,OAAO,MAAM,UAAU;AAE3C,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,aAAK,kBAAkB,MAAM,SAAS,UAAU,OAAO,IAAa;AAClE,mBAAS;AACT,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,8BAAoB,OAAO,MAAM,UAAU;AAC3C,sBAAY,OAAO,YAAY,iBAAiB,OAAO,IAAI;AAC3D,sBAAY,MAAM;AAAA,QACpB;AAEA,YAAI,WAAW;AACb,2BAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,SAAS;AAAA,QAC9E,WAAW,QAAQ;AACjB,kBAAQ,KAAK,iBAAiB,OAAO,MAAM,iBAAiB,QAAQ,SAAS,SAAS,CAAC;AAAA,QACzF,OAAO;AACL,kBAAQ,KAAK,OAAO;AAAA,QACtB;AAEA,4BAAoB,OAAO,MAAM,UAAU;AAE3C,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,YAAI,OAAO,IAAa;AACtB,qBAAW;AACX,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C,OAAO;AACL,qBAAW;AAAA,QACb;AAAA,MACF;AAEA,iBAAW,OAAO,uDAAuD;AAAA,IAC3E;AAEA,aAAS,gBAAgB,OAAO,YAAY;AAC1C,UAAI,cACA,SACA,WAAiB,eACjB,iBAAiB,OACjB,iBAAiB,OACjB,aAAiB,YACjB,aAAiB,GACjB,iBAAiB,OACjB,KACA;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO,KAAa;AACtB,kBAAU;AAAA,MACZ,WAAW,OAAO,IAAa;AAC7B,kBAAU;AAAA,MACZ,OAAO;AACL,eAAO;AAAA,MACT;AAEA,YAAM,OAAO;AACb,YAAM,SAAS;AAEf,aAAO,OAAO,GAAG;AACf,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,YAAI,OAAO,MAAe,OAAO,IAAa;AAC5C,cAAI,kBAAkB,UAAU;AAC9B,uBAAY,OAAO,KAAe,gBAAgB;AAAA,UACpD,OAAO;AACL,uBAAW,OAAO,sCAAsC;AAAA,UAC1D;AAAA,QAEF,YAAY,MAAM,gBAAgB,EAAE,MAAM,GAAG;AAC3C,cAAI,QAAQ,GAAG;AACb,uBAAW,OAAO,8EAA8E;AAAA,UAClG,WAAW,CAAC,gBAAgB;AAC1B,yBAAa,aAAa,MAAM;AAChC,6BAAiB;AAAA,UACnB,OAAO;AACL,uBAAW,OAAO,2CAA2C;AAAA,UAC/D;AAAA,QAEF,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAEA,UAAI,eAAe,EAAE,GAAG;AACtB,WAAG;AAAE,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAAG,SAC7C,eAAe,EAAE;AAExB,YAAI,OAAO,IAAa;AACtB,aAAG;AAAE,iBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,UAAG,SAC7C,CAAC,OAAO,EAAE,KAAM,OAAO;AAAA,QAChC;AAAA,MACF;AAEA,aAAO,OAAO,GAAG;AACf,sBAAc,KAAK;AACnB,cAAM,aAAa;AAEnB,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,gBAAQ,CAAC,kBAAkB,MAAM,aAAa,eACtC,OAAO,IAAkB;AAC/B,gBAAM;AACN,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C;AAEA,YAAI,CAAC,kBAAkB,MAAM,aAAa,YAAY;AACpD,uBAAa,MAAM;AAAA,QACrB;AAEA,YAAI,OAAO,EAAE,GAAG;AACd;AACA;AAAA,QACF;AAGA,YAAI,MAAM,aAAa,YAAY;AAGjC,cAAI,aAAa,eAAe;AAC9B,kBAAM,UAAU,OAAO,OAAO,MAAM,iBAAiB,IAAI,aAAa,UAAU;AAAA,UAClF,WAAW,aAAa,eAAe;AACrC,gBAAI,gBAAgB;AAClB,oBAAM,UAAU;AAAA,YAClB;AAAA,UACF;AAGA;AAAA,QACF;AAGA,YAAI,SAAS;AAGX,cAAI,eAAe,EAAE,GAAG;AACtB,6BAAiB;AAEjB,kBAAM,UAAU,OAAO,OAAO,MAAM,iBAAiB,IAAI,aAAa,UAAU;AAAA,UAGlF,WAAW,gBAAgB;AACzB,6BAAiB;AACjB,kBAAM,UAAU,OAAO,OAAO,MAAM,aAAa,CAAC;AAAA,UAGpD,WAAW,eAAe,GAAG;AAC3B,gBAAI,gBAAgB;AAClB,oBAAM,UAAU;AAAA,YAClB;AAAA,UAGF,OAAO;AACL,kBAAM,UAAU,OAAO,OAAO,MAAM,UAAU;AAAA,UAChD;AAAA,QAGF,OAAO;AAEL,gBAAM,UAAU,OAAO,OAAO,MAAM,iBAAiB,IAAI,aAAa,UAAU;AAAA,QAClF;AAEA,yBAAiB;AACjB,yBAAiB;AACjB,qBAAa;AACb,uBAAe,MAAM;AAErB,eAAO,CAAC,OAAO,EAAE,KAAM,OAAO,GAAI;AAChC,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C;AAEA,uBAAe,OAAO,cAAc,MAAM,UAAU,KAAK;AAAA,MAC3D;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB,OAAO,YAAY;AAC5C,UAAI,OACA,OAAY,MAAM,KAClB,UAAY,MAAM,QAClB,UAAY,CAAC,GACb,WACA,WAAY,OACZ;AAEJ,UAAI,MAAM,WAAW,MAAM;AACzB,cAAM,UAAU,MAAM,MAAM,IAAI;AAAA,MAClC;AAEA,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,aAAO,OAAO,GAAG;AAEf,YAAI,OAAO,IAAa;AACtB;AAAA,QACF;AAEA,oBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,YAAI,CAAC,aAAa,SAAS,GAAG;AAC5B;AAAA,QACF;AAEA,mBAAW;AACX,cAAM;AAEN,YAAI,oBAAoB,OAAO,MAAM,EAAE,GAAG;AACxC,cAAI,MAAM,cAAc,YAAY;AAClC,oBAAQ,KAAK,IAAI;AACjB,iBAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1C;AAAA,UACF;AAAA,QACF;AAEA,gBAAQ,MAAM;AACd,oBAAY,OAAO,YAAY,kBAAkB,OAAO,IAAI;AAC5D,gBAAQ,KAAK,MAAM,MAAM;AACzB,4BAAoB,OAAO,MAAM,EAAE;AAEnC,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,aAAK,MAAM,SAAS,SAAS,MAAM,aAAa,eAAgB,OAAO,GAAI;AACzE,qBAAW,OAAO,qCAAqC;AAAA,QACzD,WAAW,MAAM,aAAa,YAAY;AACxC;AAAA,QACF;AAAA,MACF;AAEA,UAAI,UAAU;AACZ,cAAM,MAAM;AACZ,cAAM,SAAS;AACf,cAAM,OAAO;AACb,cAAM,SAAS;AACf,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,OAAO,YAAY,YAAY;AACvD,UAAI,WACA,cACA,OACA,MACA,OAAgB,MAAM,KACtB,UAAgB,MAAM,QACtB,UAAgB,CAAC,GACjB,kBAAkB,CAAC,GACnB,SAAgB,MAChB,UAAgB,MAChB,YAAgB,MAChB,gBAAgB,OAChB,WAAgB,OAChB;AAEJ,UAAI,MAAM,WAAW,MAAM;AACzB,cAAM,UAAU,MAAM,MAAM,IAAI;AAAA,MAClC;AAEA,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,aAAO,OAAO,GAAG;AACf,oBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AACrD,gBAAQ,MAAM;AACd,eAAO,MAAM;AAMb,aAAK,OAAO,MAAe,OAAO,OAAgB,aAAa,SAAS,GAAG;AAEzE,cAAI,OAAO,IAAa;AACtB,gBAAI,eAAe;AACjB,+BAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,IAAI;AACvE,uBAAS,UAAU,YAAY;AAAA,YACjC;AAEA,uBAAW;AACX,4BAAgB;AAChB,2BAAe;AAAA,UAEjB,WAAW,eAAe;AAExB,4BAAgB;AAChB,2BAAe;AAAA,UAEjB,OAAO;AACL,uBAAW,OAAO,mGAAmG;AAAA,UACvH;AAEA,gBAAM,YAAY;AAClB,eAAK;AAAA,QAKP,WAAW,YAAY,OAAO,YAAY,kBAAkB,OAAO,IAAI,GAAG;AAExE,cAAI,MAAM,SAAS,OAAO;AACxB,iBAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,mBAAO,eAAe,EAAE,GAAG;AACzB,mBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,YAC9C;AAEA,gBAAI,OAAO,IAAa;AACtB,mBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,kBAAI,CAAC,aAAa,EAAE,GAAG;AACrB,2BAAW,OAAO,yFAAyF;AAAA,cAC7G;AAEA,kBAAI,eAAe;AACjB,iCAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,IAAI;AACvE,yBAAS,UAAU,YAAY;AAAA,cACjC;AAEA,yBAAW;AACX,8BAAgB;AAChB,6BAAe;AACf,uBAAS,MAAM;AACf,wBAAU,MAAM;AAAA,YAElB,WAAW,UAAU;AACnB,yBAAW,OAAO,0DAA0D;AAAA,YAE9E,OAAO;AACL,oBAAM,MAAM;AACZ,oBAAM,SAAS;AACf,qBAAO;AAAA,YACT;AAAA,UAEF,WAAW,UAAU;AACnB,uBAAW,OAAO,gFAAgF;AAAA,UAEpG,OAAO;AACL,kBAAM,MAAM;AACZ,kBAAM,SAAS;AACf,mBAAO;AAAA,UACT;AAAA,QAEF,OAAO;AACL;AAAA,QACF;AAKA,YAAI,MAAM,SAAS,SAAS,MAAM,aAAa,YAAY;AACzD,cAAI,YAAY,OAAO,YAAY,mBAAmB,MAAM,YAAY,GAAG;AACzE,gBAAI,eAAe;AACjB,wBAAU,MAAM;AAAA,YAClB,OAAO;AACL,0BAAY,MAAM;AAAA,YACpB;AAAA,UACF;AAEA,cAAI,CAAC,eAAe;AAClB,6BAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,WAAW,OAAO,IAAI;AACzF,qBAAS,UAAU,YAAY;AAAA,UACjC;AAEA,8BAAoB,OAAO,MAAM,EAAE;AACnC,eAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAAA,QAC5C;AAEA,YAAI,MAAM,aAAa,cAAe,OAAO,GAAI;AAC/C,qBAAW,OAAO,oCAAoC;AAAA,QACxD,WAAW,MAAM,aAAa,YAAY;AACxC;AAAA,QACF;AAAA,MACF;AAOA,UAAI,eAAe;AACjB,yBAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,IAAI;AAAA,MACzE;AAGA,UAAI,UAAU;AACZ,cAAM,MAAM;AACZ,cAAM,SAAS;AACf,cAAM,OAAO;AACb,cAAM,SAAS;AAAA,MACjB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB,OAAO;AAC9B,UAAI,WACA,aAAa,OACb,UAAa,OACb,WACA,SACA;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO;AAAa,eAAO;AAE/B,UAAI,MAAM,QAAQ,MAAM;AACtB,mBAAW,OAAO,+BAA+B;AAAA,MACnD;AAEA,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,UAAI,OAAO,IAAa;AACtB,qBAAa;AACb,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAE9C,WAAW,OAAO,IAAa;AAC7B,kBAAU;AACV,oBAAY;AACZ,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAE9C,OAAO;AACL,oBAAY;AAAA,MACd;AAEA,kBAAY,MAAM;AAElB,UAAI,YAAY;AACd,WAAG;AAAE,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAAG,SAC7C,OAAO,KAAK,OAAO;AAE1B,YAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,oBAAU,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AACrD,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C,OAAO;AACL,qBAAW,OAAO,oDAAoD;AAAA,QACxE;AAAA,MACF,OAAO;AACL,eAAO,OAAO,KAAK,CAAC,aAAa,EAAE,GAAG;AAEpC,cAAI,OAAO,IAAa;AACtB,gBAAI,CAAC,SAAS;AACZ,0BAAY,MAAM,MAAM,MAAM,YAAY,GAAG,MAAM,WAAW,CAAC;AAE/D,kBAAI,CAAC,mBAAmB,KAAK,SAAS,GAAG;AACvC,2BAAW,OAAO,iDAAiD;AAAA,cACrE;AAEA,wBAAU;AACV,0BAAY,MAAM,WAAW;AAAA,YAC/B,OAAO;AACL,yBAAW,OAAO,6CAA6C;AAAA,YACjE;AAAA,UACF;AAEA,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C;AAEA,kBAAU,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAErD,YAAI,wBAAwB,KAAK,OAAO,GAAG;AACzC,qBAAW,OAAO,qDAAqD;AAAA,QACzE;AAAA,MACF;AAEA,UAAI,WAAW,CAAC,gBAAgB,KAAK,OAAO,GAAG;AAC7C,mBAAW,OAAO,8CAA8C,OAAO;AAAA,MACzE;AAEA,UAAI,YAAY;AACd,cAAM,MAAM;AAAA,MAEd,WAAW,gBAAgB,KAAK,MAAM,QAAQ,SAAS,GAAG;AACxD,cAAM,MAAM,MAAM,OAAO,SAAS,IAAI;AAAA,MAExC,WAAW,cAAc,KAAK;AAC5B,cAAM,MAAM,MAAM;AAAA,MAEpB,WAAW,cAAc,MAAM;AAC7B,cAAM,MAAM,uBAAuB;AAAA,MAErC,OAAO;AACL,mBAAW,OAAO,4BAA4B,YAAY,GAAG;AAAA,MAC/D;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAmB,OAAO;AACjC,UAAI,WACA;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO;AAAa,eAAO;AAE/B,UAAI,MAAM,WAAW,MAAM;AACzB,mBAAW,OAAO,mCAAmC;AAAA,MACvD;AAEA,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,kBAAY,MAAM;AAElB,aAAO,OAAO,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,kBAAkB,EAAE,GAAG;AAC9D,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAC9C;AAEA,UAAI,MAAM,aAAa,WAAW;AAChC,mBAAW,OAAO,4DAA4D;AAAA,MAChF;AAEA,YAAM,SAAS,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1D,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,OAAO;AACxB,UAAI,WAAW,OACX;AAEJ,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,UAAI,OAAO;AAAa,eAAO;AAE/B,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,kBAAY,MAAM;AAElB,aAAO,OAAO,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,kBAAkB,EAAE,GAAG;AAC9D,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAC9C;AAEA,UAAI,MAAM,aAAa,WAAW;AAChC,mBAAW,OAAO,2DAA2D;AAAA,MAC/E;AAEA,cAAQ,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAEnD,UAAI,CAAC,gBAAgB,KAAK,MAAM,WAAW,KAAK,GAAG;AACjD,mBAAW,OAAO,yBAAyB,QAAQ,GAAG;AAAA,MACxD;AAEA,YAAM,SAAS,MAAM,UAAU,KAAK;AACpC,0BAAoB,OAAO,MAAM,EAAE;AACnC,aAAO;AAAA,IACT;AAEA,aAAS,YAAY,OAAO,cAAc,aAAa,aAAa,cAAc;AAChF,UAAI,kBACA,mBACA,uBACA,eAAe,GACf,YAAa,OACb,aAAa,OACb,WACA,cACA,MACA,YACA;AAEJ,UAAI,MAAM,aAAa,MAAM;AAC3B,cAAM,SAAS,QAAQ,KAAK;AAAA,MAC9B;AAEA,YAAM,MAAS;AACf,YAAM,SAAS;AACf,YAAM,OAAS;AACf,YAAM,SAAS;AAEf,yBAAmB,oBAAoB,wBACrC,sBAAsB,eACtB,qBAAsB;AAExB,UAAI,aAAa;AACf,YAAI,oBAAoB,OAAO,MAAM,EAAE,GAAG;AACxC,sBAAY;AAEZ,cAAI,MAAM,aAAa,cAAc;AACnC,2BAAe;AAAA,UACjB,WAAW,MAAM,eAAe,cAAc;AAC5C,2BAAe;AAAA,UACjB,WAAW,MAAM,aAAa,cAAc;AAC1C,2BAAe;AAAA,UACjB;AAAA,QACF;AAAA,MACF;AAEA,UAAI,iBAAiB,GAAG;AACtB,eAAO,gBAAgB,KAAK,KAAK,mBAAmB,KAAK,GAAG;AAC1D,cAAI,oBAAoB,OAAO,MAAM,EAAE,GAAG;AACxC,wBAAY;AACZ,oCAAwB;AAExB,gBAAI,MAAM,aAAa,cAAc;AACnC,6BAAe;AAAA,YACjB,WAAW,MAAM,eAAe,cAAc;AAC5C,6BAAe;AAAA,YACjB,WAAW,MAAM,aAAa,cAAc;AAC1C,6BAAe;AAAA,YACjB;AAAA,UACF,OAAO;AACL,oCAAwB;AAAA,UAC1B;AAAA,QACF;AAAA,MACF;AAEA,UAAI,uBAAuB;AACzB,gCAAwB,aAAa;AAAA,MACvC;AAEA,UAAI,iBAAiB,KAAK,sBAAsB,aAAa;AAC3D,YAAI,oBAAoB,eAAe,qBAAqB,aAAa;AACvE,uBAAa;AAAA,QACf,OAAO;AACL,uBAAa,eAAe;AAAA,QAC9B;AAEA,sBAAc,MAAM,WAAW,MAAM;AAErC,YAAI,iBAAiB,GAAG;AACtB,cAAI,0BACC,kBAAkB,OAAO,WAAW,KACpC,iBAAiB,OAAO,aAAa,UAAU,MAChD,mBAAmB,OAAO,UAAU,GAAG;AACzC,yBAAa;AAAA,UACf,OAAO;AACL,gBAAK,qBAAqB,gBAAgB,OAAO,UAAU,KACvD,uBAAuB,OAAO,UAAU,KACxC,uBAAuB,OAAO,UAAU,GAAG;AAC7C,2BAAa;AAAA,YAEf,WAAW,UAAU,KAAK,GAAG;AAC3B,2BAAa;AAEb,kBAAI,MAAM,QAAQ,QAAQ,MAAM,WAAW,MAAM;AAC/C,2BAAW,OAAO,2CAA2C;AAAA,cAC/D;AAAA,YAEF,WAAW,gBAAgB,OAAO,YAAY,oBAAoB,WAAW,GAAG;AAC9E,2BAAa;AAEb,kBAAI,MAAM,QAAQ,MAAM;AACtB,sBAAM,MAAM;AAAA,cACd;AAAA,YACF;AAEA,gBAAI,MAAM,WAAW,MAAM;AACzB,oBAAM,UAAU,MAAM,MAAM,IAAI,MAAM;AAAA,YACxC;AAAA,UACF;AAAA,QACF,WAAW,iBAAiB,GAAG;AAG7B,uBAAa,yBAAyB,kBAAkB,OAAO,WAAW;AAAA,QAC5E;AAAA,MACF;AAEA,UAAI,MAAM,QAAQ,QAAQ,MAAM,QAAQ,KAAK;AAC3C,YAAI,MAAM,QAAQ,KAAK;AAOrB,cAAI,MAAM,WAAW,QAAQ,MAAM,SAAS,UAAU;AACpD,uBAAW,OAAO,sEAAsE,MAAM,OAAO,GAAG;AAAA,UAC1G;AAEA,eAAK,YAAY,GAAG,eAAe,MAAM,cAAc,QAAQ,YAAY,cAAc,aAAa,GAAG;AACvG,mBAAO,MAAM,cAAc,SAAS;AAEpC,gBAAI,KAAK,QAAQ,MAAM,MAAM,GAAG;AAC9B,oBAAM,SAAS,KAAK,UAAU,MAAM,MAAM;AAC1C,oBAAM,MAAM,KAAK;AACjB,kBAAI,MAAM,WAAW,MAAM;AACzB,sBAAM,UAAU,MAAM,MAAM,IAAI,MAAM;AAAA,cACxC;AACA;AAAA,YACF;AAAA,UACF;AAAA,QACF,WAAW,gBAAgB,KAAK,MAAM,QAAQ,MAAM,QAAQ,UAAU,GAAG,MAAM,GAAG,GAAG;AACnF,iBAAO,MAAM,QAAQ,MAAM,QAAQ,UAAU,EAAE,MAAM,GAAG;AAExD,cAAI,MAAM,WAAW,QAAQ,KAAK,SAAS,MAAM,MAAM;AACrD,uBAAW,OAAO,kCAAkC,MAAM,MAAM,0BAA0B,KAAK,OAAO,aAAa,MAAM,OAAO,GAAG;AAAA,UACrI;AAEA,cAAI,CAAC,KAAK,QAAQ,MAAM,MAAM,GAAG;AAC/B,uBAAW,OAAO,kCAAkC,MAAM,MAAM,gBAAgB;AAAA,UAClF,OAAO;AACL,kBAAM,SAAS,KAAK,UAAU,MAAM,MAAM;AAC1C,gBAAI,MAAM,WAAW,MAAM;AACzB,oBAAM,UAAU,MAAM,MAAM,IAAI,MAAM;AAAA,YACxC;AAAA,UACF;AAAA,QACF,OAAO;AACL,qBAAW,OAAO,mBAAmB,MAAM,MAAM,GAAG;AAAA,QACtD;AAAA,MACF;AAEA,UAAI,MAAM,aAAa,MAAM;AAC3B,cAAM,SAAS,SAAS,KAAK;AAAA,MAC/B;AACA,aAAO,MAAM,QAAQ,QAAS,MAAM,WAAW,QAAQ;AAAA,IACzD;AAEA,aAAS,aAAa,OAAO;AAC3B,UAAI,gBAAgB,MAAM,UACtB,WACA,eACA,eACA,gBAAgB,OAChB;AAEJ,YAAM,UAAU;AAChB,YAAM,kBAAkB,MAAM;AAC9B,YAAM,SAAS,CAAC;AAChB,YAAM,YAAY,CAAC;AAEnB,cAAQ,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ,OAAO,GAAG;AAC1D,4BAAoB,OAAO,MAAM,EAAE;AAEnC,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,YAAI,MAAM,aAAa,KAAK,OAAO,IAAa;AAC9C;AAAA,QACF;AAEA,wBAAgB;AAChB,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,oBAAY,MAAM;AAElB,eAAO,OAAO,KAAK,CAAC,aAAa,EAAE,GAAG;AACpC,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C;AAEA,wBAAgB,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC3D,wBAAgB,CAAC;AAEjB,YAAI,cAAc,SAAS,GAAG;AAC5B,qBAAW,OAAO,8DAA8D;AAAA,QAClF;AAEA,eAAO,OAAO,GAAG;AACf,iBAAO,eAAe,EAAE,GAAG;AACzB,iBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,UAC9C;AAEA,cAAI,OAAO,IAAa;AACtB,eAAG;AAAE,mBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,YAAG,SAC7C,OAAO,KAAK,CAAC,OAAO,EAAE;AAC7B;AAAA,UACF;AAEA,cAAI,OAAO,EAAE;AAAG;AAEhB,sBAAY,MAAM;AAElB,iBAAO,OAAO,KAAK,CAAC,aAAa,EAAE,GAAG;AACpC,iBAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,UAC9C;AAEA,wBAAc,KAAK,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ,CAAC;AAAA,QACjE;AAEA,YAAI,OAAO;AAAG,wBAAc,KAAK;AAEjC,YAAI,gBAAgB,KAAK,mBAAmB,aAAa,GAAG;AAC1D,4BAAkB,aAAa,EAAE,OAAO,eAAe,aAAa;AAAA,QACtE,OAAO;AACL,uBAAa,OAAO,iCAAiC,gBAAgB,GAAG;AAAA,QAC1E;AAAA,MACF;AAEA,0BAAoB,OAAO,MAAM,EAAE;AAEnC,UAAI,MAAM,eAAe,KACrB,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAU,MAC/C,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC,MAAM,MAC/C,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC,MAAM,IAAa;AAC9D,cAAM,YAAY;AAClB,4BAAoB,OAAO,MAAM,EAAE;AAAA,MAErC,WAAW,eAAe;AACxB,mBAAW,OAAO,iCAAiC;AAAA,MACrD;AAEA,kBAAY,OAAO,MAAM,aAAa,GAAG,mBAAmB,OAAO,IAAI;AACvE,0BAAoB,OAAO,MAAM,EAAE;AAEnC,UAAI,MAAM,mBACN,8BAA8B,KAAK,MAAM,MAAM,MAAM,eAAe,MAAM,QAAQ,CAAC,GAAG;AACxF,qBAAa,OAAO,kDAAkD;AAAA,MACxE;AAEA,YAAM,UAAU,KAAK,MAAM,MAAM;AAEjC,UAAI,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,GAAG;AAEtE,YAAI,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAM,IAAa;AAC1D,gBAAM,YAAY;AAClB,8BAAoB,OAAO,MAAM,EAAE;AAAA,QACrC;AACA;AAAA,MACF;AAEA,UAAI,MAAM,WAAY,MAAM,SAAS,GAAI;AACvC,mBAAW,OAAO,uDAAuD;AAAA,MAC3E,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAGA,aAAS,cAAc,OAAOH,UAAS;AACrC,cAAQ,OAAO,KAAK;AACpB,MAAAA,WAAUA,YAAW,CAAC;AAEtB,UAAI,MAAM,WAAW,GAAG;AAGtB,YAAI,MAAM,WAAW,MAAM,SAAS,CAAC,MAAM,MACvC,MAAM,WAAW,MAAM,SAAS,CAAC,MAAM,IAAc;AACvD,mBAAS;AAAA,QACX;AAGA,YAAI,MAAM,WAAW,CAAC,MAAM,OAAQ;AAClC,kBAAQ,MAAM,MAAM,CAAC;AAAA,QACvB;AAAA,MACF;AAEA,UAAI,QAAQ,IAAID,OAAM,OAAOC,QAAO;AAEpC,UAAI,UAAU,MAAM,QAAQ,IAAI;AAEhC,UAAI,YAAY,IAAI;AAClB,cAAM,WAAW;AACjB,mBAAW,OAAO,mCAAmC;AAAA,MACvD;AAGA,YAAM,SAAS;AAEf,aAAO,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAM,IAAiB;AACjE,cAAM,cAAc;AACpB,cAAM,YAAY;AAAA,MACpB;AAEA,aAAO,MAAM,WAAY,MAAM,SAAS,GAAI;AAC1C,qBAAa,KAAK;AAAA,MACpB;AAEA,aAAO,MAAM;AAAA,IACf;AAGA,aAAS,QAAQ,OAAO,UAAUA,UAAS;AACzC,UAAI,aAAa,QAAQ,OAAO,aAAa,YAAY,OAAOA,aAAY,aAAa;AACvF,QAAAA,WAAU;AACV,mBAAW;AAAA,MACb;AAEA,UAAI,YAAY,cAAc,OAAOA,QAAO;AAE5C,UAAI,OAAO,aAAa,YAAY;AAClC,eAAO;AAAA,MACT;AAEA,eAASG,SAAQ,GAAG,SAAS,UAAU,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACzE,iBAAS,UAAUA,MAAK,CAAC;AAAA,MAC3B;AAAA,IACF;AAGA,aAAS,KAAK,OAAOH,UAAS;AAC5B,UAAI,YAAY,cAAc,OAAOA,QAAO;AAE5C,UAAI,UAAU,WAAW,GAAG;AAE1B,eAAO;AAAA,MACT,WAAW,UAAU,WAAW,GAAG;AACjC,eAAO,UAAU,CAAC;AAAA,MACpB;AACA,YAAM,IAAI,cAAc,0DAA0D;AAAA,IACpF;AAGA,aAAS,YAAY,OAAO,UAAUA,UAAS;AAC7C,UAAI,OAAO,aAAa,YAAY,aAAa,QAAQ,OAAOA,aAAY,aAAa;AACvF,QAAAA,WAAU;AACV,mBAAW;AAAA,MACb;AAEA,aAAO,QAAQ,OAAO,UAAU,OAAO,OAAO,EAAE,QAAQ,oBAAoB,GAAGA,QAAO,CAAC;AAAA,IACzF;AAGA,aAAS,SAAS,OAAOA,UAAS;AAChC,aAAO,KAAK,OAAO,OAAO,OAAO,EAAE,QAAQ,oBAAoB,GAAGA,QAAO,CAAC;AAAA,IAC5E;AAGA,IAAAF,QAAO,QAAQ,UAAc;AAC7B,IAAAA,QAAO,QAAQ,OAAc;AAC7B,IAAAA,QAAO,QAAQ,cAAc;AAC7B,IAAAA,QAAO,QAAQ,WAAc;AAAA;AAAA;;;AC3mD7B;AAAA,wEAAAM,UAAAC,SAAA;AAAA;AAIA,QAAI,SAAsB;AAC1B,QAAI,gBAAsB;AAC1B,QAAI,sBAAsB;AAC1B,QAAI,sBAAsB;AAE1B,QAAI,YAAkB,OAAO,UAAU;AACvC,QAAI,kBAAkB,OAAO,UAAU;AAEvC,QAAI,WAA4B;AAChC,QAAI,iBAA4B;AAChC,QAAI,uBAA4B;AAChC,QAAI,aAA4B;AAChC,QAAI,mBAA4B;AAChC,QAAI,oBAA4B;AAChC,QAAI,aAA4B;AAChC,QAAI,eAA4B;AAChC,QAAI,iBAA4B;AAChC,QAAI,oBAA4B;AAChC,QAAI,gBAA4B;AAChC,QAAI,aAA4B;AAChC,QAAI,aAA4B;AAChC,QAAI,aAA4B;AAChC,QAAI,cAA4B;AAChC,QAAI,oBAA4B;AAChC,QAAI,gBAA4B;AAChC,QAAI,qBAA4B;AAChC,QAAI,2BAA4B;AAChC,QAAI,4BAA4B;AAChC,QAAI,oBAA4B;AAChC,QAAI,0BAA4B;AAChC,QAAI,qBAA4B;AAChC,QAAI,2BAA4B;AAEhC,QAAI,mBAAmB,CAAC;AAExB,qBAAiB,CAAI,IAAM;AAC3B,qBAAiB,CAAI,IAAM;AAC3B,qBAAiB,CAAI,IAAM;AAC3B,qBAAiB,CAAI,IAAM;AAC3B,qBAAiB,EAAI,IAAM;AAC3B,qBAAiB,EAAI,IAAM;AAC3B,qBAAiB,EAAI,IAAM;AAC3B,qBAAiB,EAAI,IAAM;AAC3B,qBAAiB,EAAI,IAAM;AAC3B,qBAAiB,EAAI,IAAM;AAC3B,qBAAiB,EAAI,IAAM;AAC3B,qBAAiB,GAAI,IAAM;AAC3B,qBAAiB,GAAI,IAAM;AAC3B,qBAAiB,IAAM,IAAI;AAC3B,qBAAiB,IAAM,IAAI;AAE3B,QAAI,6BAA6B;AAAA,MAC/B;AAAA,MAAK;AAAA,MAAK;AAAA,MAAO;AAAA,MAAO;AAAA,MAAO;AAAA,MAAM;AAAA,MAAM;AAAA,MAC3C;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAO;AAAA,MAAO;AAAA,IAC5C;AAEA,aAAS,gBAAgB,QAAQ,KAAK;AACpC,UAAI,QAAQ,MAAMC,QAAO,QAAQ,KAAK,OAAO;AAE7C,UAAI,QAAQ;AAAM,eAAO,CAAC;AAE1B,eAAS,CAAC;AACV,aAAO,OAAO,KAAK,GAAG;AAEtB,WAAKA,SAAQ,GAAG,SAAS,KAAK,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAChE,cAAM,KAAKA,MAAK;AAChB,gBAAQ,OAAO,IAAI,GAAG,CAAC;AAEvB,YAAI,IAAI,MAAM,GAAG,CAAC,MAAM,MAAM;AAC5B,gBAAM,uBAAuB,IAAI,MAAM,CAAC;AAAA,QAC1C;AACA,eAAO,OAAO,gBAAgB,UAAU,EAAE,GAAG;AAE7C,YAAI,QAAQ,gBAAgB,KAAK,KAAK,cAAc,KAAK,GAAG;AAC1D,kBAAQ,KAAK,aAAa,KAAK;AAAA,QACjC;AAEA,eAAO,GAAG,IAAI;AAAA,MAChB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,WAAW;AAC5B,UAAI,QAAQ,QAAQ;AAEpB,eAAS,UAAU,SAAS,EAAE,EAAE,YAAY;AAE5C,UAAI,aAAa,KAAM;AACrB,iBAAS;AACT,iBAAS;AAAA,MACX,WAAW,aAAa,OAAQ;AAC9B,iBAAS;AACT,iBAAS;AAAA,MACX,WAAW,aAAa,YAAY;AAClC,iBAAS;AACT,iBAAS;AAAA,MACX,OAAO;AACL,cAAM,IAAI,cAAc,+DAA+D;AAAA,MACzF;AAEA,aAAO,OAAO,SAAS,OAAO,OAAO,KAAK,SAAS,OAAO,MAAM,IAAI;AAAA,IACtE;AAEA,aAASC,OAAMC,UAAS;AACtB,WAAK,SAAgBA,SAAQ,QAAQ,KAAK;AAC1C,WAAK,SAAgB,KAAK,IAAI,GAAIA,SAAQ,QAAQ,KAAK,CAAE;AACzD,WAAK,gBAAgBA,SAAQ,eAAe,KAAK;AACjD,WAAK,cAAgBA,SAAQ,aAAa,KAAK;AAC/C,WAAK,YAAiB,OAAO,UAAUA,SAAQ,WAAW,CAAC,IAAI,KAAKA,SAAQ,WAAW;AACvF,WAAK,WAAgB,gBAAgB,KAAK,QAAQA,SAAQ,QAAQ,KAAK,IAAI;AAC3E,WAAK,WAAgBA,SAAQ,UAAU,KAAK;AAC5C,WAAK,YAAgBA,SAAQ,WAAW,KAAK;AAC7C,WAAK,SAAgBA,SAAQ,QAAQ,KAAK;AAC1C,WAAK,eAAgBA,SAAQ,cAAc,KAAK;AAChD,WAAK,eAAgBA,SAAQ,cAAc,KAAK;AAEhD,WAAK,gBAAgB,KAAK,OAAO;AACjC,WAAK,gBAAgB,KAAK,OAAO;AAEjC,WAAK,MAAM;AACX,WAAK,SAAS;AAEd,WAAK,aAAa,CAAC;AACnB,WAAK,iBAAiB;AAAA,IACxB;AAGA,aAAS,aAAa,QAAQ,QAAQ;AACpC,UAAI,MAAM,OAAO,OAAO,KAAK,MAAM,GAC/BC,YAAW,GACX,OAAO,IACP,SAAS,IACT,MACA,SAAS,OAAO;AAEpB,aAAOA,YAAW,QAAQ;AACxB,eAAO,OAAO,QAAQ,MAAMA,SAAQ;AACpC,YAAI,SAAS,IAAI;AACf,iBAAO,OAAO,MAAMA,SAAQ;AAC5B,UAAAA,YAAW;AAAA,QACb,OAAO;AACL,iBAAO,OAAO,MAAMA,WAAU,OAAO,CAAC;AACtC,UAAAA,YAAW,OAAO;AAAA,QACpB;AAEA,YAAI,KAAK,UAAU,SAAS;AAAM,oBAAU;AAE5C,kBAAU;AAAA,MACZ;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,OAAO,OAAO;AACtC,aAAO,OAAO,OAAO,OAAO,KAAK,MAAM,SAAS,KAAK;AAAA,IACvD;AAEA,aAAS,sBAAsB,OAAOC,MAAK;AACzC,UAAIJ,QAAO,QAAQ;AAEnB,WAAKA,SAAQ,GAAG,SAAS,MAAM,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAC/E,eAAO,MAAM,cAAcA,MAAK;AAEhC,YAAI,KAAK,QAAQI,IAAG,GAAG;AACrB,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAGA,aAAS,aAAa,GAAG;AACvB,aAAO,MAAM,cAAc,MAAM;AAAA,IACnC;AAMA,aAAS,YAAY,GAAG;AACtB,aAAS,MAAW,KAAK,KAAK,OACrB,OAAW,KAAK,KAAK,SAAa,MAAM,QAAU,MAAM,QACxD,SAAW,KAAK,KAAK,SAAa,MAAM,SACxC,SAAW,KAAK,KAAK;AAAA,IAChC;AAQA,aAAS,SAAS,GAAG;AACnB,aAAO,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,KAEnC,MAAM,SAEN,MAAM,wBACN,MAAM;AAAA,IACb;AAGA,aAAS,YAAY,GAAG,MAAM;AAG5B,aAAO,YAAY,CAAC,KAAK,MAAM,SAE1B,MAAM,cACN,MAAM,4BACN,MAAM,6BACN,MAAM,2BACN,MAAM,4BAGN,MAAM,eACJ,MAAM,cAAgB,QAAQ,SAAS,IAAI;AAAA,IACpD;AAGA,aAAS,iBAAiB,GAAG;AAG3B,aAAO,YAAY,CAAC,KAAK,MAAM,SAC1B,CAAC,aAAa,CAAC,KAGf,MAAM,cACN,MAAM,iBACN,MAAM,cACN,MAAM,cACN,MAAM,4BACN,MAAM,6BACN,MAAM,2BACN,MAAM,4BAEN,MAAM,cACN,MAAM,kBACN,MAAM,iBACN,MAAM,oBACN,MAAM,sBACN,MAAM,eACN,MAAM,qBACN,MAAM,qBACN,MAAM,qBAEN,MAAM,gBACN,MAAM,sBACN,MAAM;AAAA,IACb;AAGA,aAAS,oBAAoB,QAAQ;AACnC,UAAI,iBAAiB;AACrB,aAAO,eAAe,KAAK,MAAM;AAAA,IACnC;AAEA,QAAI,cAAgB;AAApB,QACI,eAAgB;AADpB,QAEI,gBAAgB;AAFpB,QAGI,eAAgB;AAHpB,QAII,eAAgB;AASpB,aAAS,kBAAkB,QAAQ,gBAAgB,gBAAgB,WAAW,mBAAmB;AAC/F,UAAI;AACJ,UAAI,MAAM;AACV,UAAI,eAAe;AACnB,UAAI,kBAAkB;AACtB,UAAI,mBAAmB,cAAc;AACrC,UAAI,oBAAoB;AACxB,UAAI,QAAQ,iBAAiB,OAAO,WAAW,CAAC,CAAC,KACtC,CAAC,aAAa,OAAO,WAAW,OAAO,SAAS,CAAC,CAAC;AAE7D,UAAI,gBAAgB;AAGlB,aAAK,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAClC,iBAAO,OAAO,WAAW,CAAC;AAC1B,cAAI,CAAC,YAAY,IAAI,GAAG;AACtB,mBAAO;AAAA,UACT;AACA,sBAAY,IAAI,IAAI,OAAO,WAAW,IAAI,CAAC,IAAI;AAC/C,kBAAQ,SAAS,YAAY,MAAM,SAAS;AAAA,QAC9C;AAAA,MACF,OAAO;AAEL,aAAK,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAClC,iBAAO,OAAO,WAAW,CAAC;AAC1B,cAAI,SAAS,gBAAgB;AAC3B,2BAAe;AAEf,gBAAI,kBAAkB;AACpB,gCAAkB;AAAA,cAEf,IAAI,oBAAoB,IAAI,aAC5B,OAAO,oBAAoB,CAAC,MAAM;AACrC,kCAAoB;AAAA,YACtB;AAAA,UACF,WAAW,CAAC,YAAY,IAAI,GAAG;AAC7B,mBAAO;AAAA,UACT;AACA,sBAAY,IAAI,IAAI,OAAO,WAAW,IAAI,CAAC,IAAI;AAC/C,kBAAQ,SAAS,YAAY,MAAM,SAAS;AAAA,QAC9C;AAEA,0BAAkB,mBAAoB,qBACnC,IAAI,oBAAoB,IAAI,aAC5B,OAAO,oBAAoB,CAAC,MAAM;AAAA,MACvC;AAIA,UAAI,CAAC,gBAAgB,CAAC,iBAAiB;AAGrC,eAAO,SAAS,CAAC,kBAAkB,MAAM,IACrC,cAAc;AAAA,MACpB;AAEA,UAAI,iBAAiB,KAAK,oBAAoB,MAAM,GAAG;AACrD,eAAO;AAAA,MACT;AAGA,aAAO,kBAAkB,eAAe;AAAA,IAC1C;AAQA,aAAS,YAAY,OAAO,QAAQ,OAAO,OAAO;AAChD,YAAM,OAAQ,WAAY;AACxB,YAAI,OAAO,WAAW,GAAG;AACvB,iBAAO;AAAA,QACT;AACA,YAAI,CAAC,MAAM,gBACP,2BAA2B,QAAQ,MAAM,MAAM,IAAI;AACrD,iBAAO,MAAM,SAAS;AAAA,QACxB;AAEA,YAAI,SAAS,MAAM,SAAS,KAAK,IAAI,GAAG,KAAK;AAQ7C,YAAI,YAAY,MAAM,cAAc,KAChC,KAAK,KAAK,IAAI,KAAK,IAAI,MAAM,WAAW,EAAE,GAAG,MAAM,YAAY,MAAM;AAGzE,YAAI,iBAAiB,SAEf,MAAM,YAAY,MAAM,SAAS,MAAM;AAC7C,iBAAS,cAAcC,SAAQ;AAC7B,iBAAO,sBAAsB,OAAOA,OAAM;AAAA,QAC5C;AAEA,gBAAQ,kBAAkB,QAAQ,gBAAgB,MAAM,QAAQ,WAAW,aAAa,GAAG;AAAA,UACzF,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO,MAAM,OAAO,QAAQ,MAAM,IAAI,IAAI;AAAA,UAC5C,KAAK;AACH,mBAAO,MAAM,YAAY,QAAQ,MAAM,MAAM,IACzC,kBAAkB,aAAa,QAAQ,MAAM,CAAC;AAAA,UACpD,KAAK;AACH,mBAAO,MAAM,YAAY,QAAQ,MAAM,MAAM,IACzC,kBAAkB,aAAa,WAAW,QAAQ,SAAS,GAAG,MAAM,CAAC;AAAA,UAC3E,KAAK;AACH,mBAAO,MAAM,aAAa,QAAQ,SAAS,IAAI;AAAA,UACjD;AACE,kBAAM,IAAI,cAAc,wCAAwC;AAAA,QACpE;AAAA,MACF,EAAE;AAAA,IACJ;AAGA,aAAS,YAAY,QAAQ,gBAAgB;AAC3C,UAAI,kBAAkB,oBAAoB,MAAM,IAAI,OAAO,cAAc,IAAI;AAG7E,UAAI,OAAgB,OAAO,OAAO,SAAS,CAAC,MAAM;AAClD,UAAI,OAAO,SAAS,OAAO,OAAO,SAAS,CAAC,MAAM,QAAQ,WAAW;AACrE,UAAI,QAAQ,OAAO,MAAO,OAAO,KAAK;AAEtC,aAAO,kBAAkB,QAAQ;AAAA,IACnC;AAGA,aAAS,kBAAkB,QAAQ;AACjC,aAAO,OAAO,OAAO,SAAS,CAAC,MAAM,OAAO,OAAO,MAAM,GAAG,EAAE,IAAI;AAAA,IACpE;AAIA,aAAS,WAAW,QAAQ,OAAO;AAKjC,UAAI,SAAS;AAGb,UAAI,SAAU,WAAY;AACxB,YAAI,SAAS,OAAO,QAAQ,IAAI;AAChC,iBAAS,WAAW,KAAK,SAAS,OAAO;AACzC,eAAO,YAAY;AACnB,eAAO,SAAS,OAAO,MAAM,GAAG,MAAM,GAAG,KAAK;AAAA,MAChD,EAAE;AAEF,UAAI,mBAAmB,OAAO,CAAC,MAAM,QAAQ,OAAO,CAAC,MAAM;AAC3D,UAAI;AAGJ,UAAI;AACJ,aAAQ,QAAQ,OAAO,KAAK,MAAM,GAAI;AACpC,YAAI,SAAS,MAAM,CAAC,GAAG,OAAO,MAAM,CAAC;AACrC,uBAAgB,KAAK,CAAC,MAAM;AAC5B,kBAAU,UACL,CAAC,oBAAoB,CAAC,gBAAgB,SAAS,KAC9C,OAAO,MACT,SAAS,MAAM,KAAK;AACxB,2BAAmB;AAAA,MACrB;AAEA,aAAO;AAAA,IACT;AAMA,aAAS,SAAS,MAAM,OAAO;AAC7B,UAAI,SAAS,MAAM,KAAK,CAAC,MAAM;AAAK,eAAO;AAG3C,UAAI,UAAU;AACd,UAAI;AAEJ,UAAIC,SAAQ,GAAG,KAAK,OAAO,GAAG,OAAO;AACrC,UAAI,SAAS;AAMb,aAAQ,QAAQ,QAAQ,KAAK,IAAI,GAAI;AACnC,eAAO,MAAM;AAEb,YAAI,OAAOA,SAAQ,OAAO;AACxB,gBAAO,OAAOA,SAAS,OAAO;AAC9B,oBAAU,OAAO,KAAK,MAAMA,QAAO,GAAG;AAEtC,UAAAA,SAAQ,MAAM;AAAA,QAChB;AACA,eAAO;AAAA,MACT;AAIA,gBAAU;AAEV,UAAI,KAAK,SAASA,SAAQ,SAAS,OAAOA,QAAO;AAC/C,kBAAU,KAAK,MAAMA,QAAO,IAAI,IAAI,OAAO,KAAK,MAAM,OAAO,CAAC;AAAA,MAChE,OAAO;AACL,kBAAU,KAAK,MAAMA,MAAK;AAAA,MAC5B;AAEA,aAAO,OAAO,MAAM,CAAC;AAAA,IACvB;AAGA,aAAS,aAAa,QAAQ;AAC5B,UAAI,SAAS;AACb,UAAI,MAAM;AACV,UAAI;AAEJ,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,eAAO,OAAO,WAAW,CAAC;AAE1B,YAAI,QAAQ,SAAU,QAAQ,OAA4B;AACxD,qBAAW,OAAO,WAAW,IAAI,CAAC;AAClC,cAAI,YAAY,SAAU,YAAY,OAA2B;AAE/D,sBAAU,WAAW,OAAO,SAAU,OAAQ,WAAW,QAAS,KAAO;AAEzE;AAAK;AAAA,UACP;AAAA,QACF;AACA,oBAAY,iBAAiB,IAAI;AACjC,kBAAU,CAAC,aAAa,YAAY,IAAI,IACpC,OAAO,CAAC,IACR,aAAa,UAAU,IAAI;AAAA,MACjC;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB,OAAO,OAAO,QAAQ;AAC/C,UAAI,UAAU,IACV,OAAU,MAAM,KAChBN,QACA;AAEJ,WAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAElE,YAAI,UAAU,OAAO,OAAO,OAAOA,MAAK,GAAG,OAAO,KAAK,GAAG;AACxD,cAAIA,WAAU;AAAG,uBAAW,OAAO,CAAC,MAAM,eAAe,MAAM;AAC/D,qBAAW,MAAM;AAAA,QACnB;AAAA,MACF;AAEA,YAAM,MAAM;AACZ,YAAM,OAAO,MAAM,UAAU;AAAA,IAC/B;AAEA,aAAS,mBAAmB,OAAO,OAAO,QAAQ,SAAS;AACzD,UAAI,UAAU,IACV,OAAU,MAAM,KAChBA,QACA;AAEJ,WAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAElE,YAAI,UAAU,OAAO,QAAQ,GAAG,OAAOA,MAAK,GAAG,MAAM,IAAI,GAAG;AAC1D,cAAI,CAAC,WAAWA,WAAU,GAAG;AAC3B,uBAAW,iBAAiB,OAAO,KAAK;AAAA,UAC1C;AAEA,cAAI,MAAM,QAAQ,mBAAmB,MAAM,KAAK,WAAW,CAAC,GAAG;AAC7D,uBAAW;AAAA,UACb,OAAO;AACL,uBAAW;AAAA,UACb;AAEA,qBAAW,MAAM;AAAA,QACnB;AAAA,MACF;AAEA,YAAM,MAAM;AACZ,YAAM,OAAO,WAAW;AAAA,IAC1B;AAEA,aAAS,iBAAiB,OAAO,OAAO,QAAQ;AAC9C,UAAI,UAAgB,IAChB,OAAgB,MAAM,KACtB,gBAAgB,OAAO,KAAK,MAAM,GAClCA,QACA,QACA,WACA,aACA;AAEJ,WAAKA,SAAQ,GAAG,SAAS,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAEzE,qBAAa;AACb,YAAIA,WAAU;AAAG,wBAAc;AAE/B,YAAI,MAAM;AAAc,wBAAc;AAEtC,oBAAY,cAAcA,MAAK;AAC/B,sBAAc,OAAO,SAAS;AAE9B,YAAI,CAAC,UAAU,OAAO,OAAO,WAAW,OAAO,KAAK,GAAG;AACrD;AAAA,QACF;AAEA,YAAI,MAAM,KAAK,SAAS;AAAM,wBAAc;AAE5C,sBAAc,MAAM,QAAQ,MAAM,eAAe,MAAM,MAAM,OAAO,MAAM,eAAe,KAAK;AAE9F,YAAI,CAAC,UAAU,OAAO,OAAO,aAAa,OAAO,KAAK,GAAG;AACvD;AAAA,QACF;AAEA,sBAAc,MAAM;AAGpB,mBAAW;AAAA,MACb;AAEA,YAAM,MAAM;AACZ,YAAM,OAAO,MAAM,UAAU;AAAA,IAC/B;AAEA,aAAS,kBAAkB,OAAO,OAAO,QAAQ,SAAS;AACxD,UAAI,UAAgB,IAChB,OAAgB,MAAM,KACtB,gBAAgB,OAAO,KAAK,MAAM,GAClCA,QACA,QACA,WACA,aACA,cACA;AAGJ,UAAI,MAAM,aAAa,MAAM;AAE3B,sBAAc,KAAK;AAAA,MACrB,WAAW,OAAO,MAAM,aAAa,YAAY;AAE/C,sBAAc,KAAK,MAAM,QAAQ;AAAA,MACnC,WAAW,MAAM,UAAU;AAEzB,cAAM,IAAI,cAAc,0CAA0C;AAAA,MACpE;AAEA,WAAKA,SAAQ,GAAG,SAAS,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACzE,qBAAa;AAEb,YAAI,CAAC,WAAWA,WAAU,GAAG;AAC3B,wBAAc,iBAAiB,OAAO,KAAK;AAAA,QAC7C;AAEA,oBAAY,cAAcA,MAAK;AAC/B,sBAAc,OAAO,SAAS;AAE9B,YAAI,CAAC,UAAU,OAAO,QAAQ,GAAG,WAAW,MAAM,MAAM,IAAI,GAAG;AAC7D;AAAA,QACF;AAEA,uBAAgB,MAAM,QAAQ,QAAQ,MAAM,QAAQ,OACpC,MAAM,QAAQ,MAAM,KAAK,SAAS;AAElD,YAAI,cAAc;AAChB,cAAI,MAAM,QAAQ,mBAAmB,MAAM,KAAK,WAAW,CAAC,GAAG;AAC7D,0BAAc;AAAA,UAChB,OAAO;AACL,0BAAc;AAAA,UAChB;AAAA,QACF;AAEA,sBAAc,MAAM;AAEpB,YAAI,cAAc;AAChB,wBAAc,iBAAiB,OAAO,KAAK;AAAA,QAC7C;AAEA,YAAI,CAAC,UAAU,OAAO,QAAQ,GAAG,aAAa,MAAM,YAAY,GAAG;AACjE;AAAA,QACF;AAEA,YAAI,MAAM,QAAQ,mBAAmB,MAAM,KAAK,WAAW,CAAC,GAAG;AAC7D,wBAAc;AAAA,QAChB,OAAO;AACL,wBAAc;AAAA,QAChB;AAEA,sBAAc,MAAM;AAGpB,mBAAW;AAAA,MACb;AAEA,YAAM,MAAM;AACZ,YAAM,OAAO,WAAW;AAAA,IAC1B;AAEA,aAAS,WAAW,OAAO,QAAQ,UAAU;AAC3C,UAAI,SAAS,UAAUA,QAAO,QAAQ,MAAM;AAE5C,iBAAW,WAAW,MAAM,gBAAgB,MAAM;AAElD,WAAKA,SAAQ,GAAG,SAAS,SAAS,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACpE,eAAO,SAASA,MAAK;AAErB,aAAK,KAAK,cAAe,KAAK,eACzB,CAAC,KAAK,cAAgB,OAAO,WAAW,YAAc,kBAAkB,KAAK,gBAC7E,CAAC,KAAK,aAAc,KAAK,UAAU,MAAM,IAAI;AAEhD,gBAAM,MAAM,WAAW,KAAK,MAAM;AAElC,cAAI,KAAK,WAAW;AAClB,oBAAQ,MAAM,SAAS,KAAK,GAAG,KAAK,KAAK;AAEzC,gBAAI,UAAU,KAAK,KAAK,SAAS,MAAM,qBAAqB;AAC1D,wBAAU,KAAK,UAAU,QAAQ,KAAK;AAAA,YACxC,WAAW,gBAAgB,KAAK,KAAK,WAAW,KAAK,GAAG;AACtD,wBAAU,KAAK,UAAU,KAAK,EAAE,QAAQ,KAAK;AAAA,YAC/C,OAAO;AACL,oBAAM,IAAI,cAAc,OAAO,KAAK,MAAM,iCAAiC,QAAQ,SAAS;AAAA,YAC9F;AAEA,kBAAM,OAAO;AAAA,UACf;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,UAAU,OAAO,OAAO,QAAQ,OAAO,SAAS,OAAO;AAC9D,YAAM,MAAM;AACZ,YAAM,OAAO;AAEb,UAAI,CAAC,WAAW,OAAO,QAAQ,KAAK,GAAG;AACrC,mBAAW,OAAO,QAAQ,IAAI;AAAA,MAChC;AAEA,UAAI,OAAO,UAAU,KAAK,MAAM,IAAI;AAEpC,UAAI,OAAO;AACT,gBAAS,MAAM,YAAY,KAAK,MAAM,YAAY;AAAA,MACpD;AAEA,UAAI,gBAAgB,SAAS,qBAAqB,SAAS,kBACvD,gBACA;AAEJ,UAAI,eAAe;AACjB,yBAAiB,MAAM,WAAW,QAAQ,MAAM;AAChD,oBAAY,mBAAmB;AAAA,MACjC;AAEA,UAAK,MAAM,QAAQ,QAAQ,MAAM,QAAQ,OAAQ,aAAc,MAAM,WAAW,KAAK,QAAQ,GAAI;AAC/F,kBAAU;AAAA,MACZ;AAEA,UAAI,aAAa,MAAM,eAAe,cAAc,GAAG;AACrD,cAAM,OAAO,UAAU;AAAA,MACzB,OAAO;AACL,YAAI,iBAAiB,aAAa,CAAC,MAAM,eAAe,cAAc,GAAG;AACvE,gBAAM,eAAe,cAAc,IAAI;AAAA,QACzC;AACA,YAAI,SAAS,mBAAmB;AAC9B,cAAI,SAAU,OAAO,KAAK,MAAM,IAAI,EAAE,WAAW,GAAI;AACnD,8BAAkB,OAAO,OAAO,MAAM,MAAM,OAAO;AACnD,gBAAI,WAAW;AACb,oBAAM,OAAO,UAAU,iBAAiB,MAAM;AAAA,YAChD;AAAA,UACF,OAAO;AACL,6BAAiB,OAAO,OAAO,MAAM,IAAI;AACzC,gBAAI,WAAW;AACb,oBAAM,OAAO,UAAU,iBAAiB,MAAM,MAAM;AAAA,YACtD;AAAA,UACF;AAAA,QACF,WAAW,SAAS,kBAAkB;AACpC,cAAI,aAAc,MAAM,iBAAkB,QAAQ,IAAM,QAAQ,IAAI;AACpE,cAAI,SAAU,MAAM,KAAK,WAAW,GAAI;AACtC,+BAAmB,OAAO,YAAY,MAAM,MAAM,OAAO;AACzD,gBAAI,WAAW;AACb,oBAAM,OAAO,UAAU,iBAAiB,MAAM;AAAA,YAChD;AAAA,UACF,OAAO;AACL,8BAAkB,OAAO,YAAY,MAAM,IAAI;AAC/C,gBAAI,WAAW;AACb,oBAAM,OAAO,UAAU,iBAAiB,MAAM,MAAM;AAAA,YACtD;AAAA,UACF;AAAA,QACF,WAAW,SAAS,mBAAmB;AACrC,cAAI,MAAM,QAAQ,KAAK;AACrB,wBAAY,OAAO,MAAM,MAAM,OAAO,KAAK;AAAA,UAC7C;AAAA,QACF,OAAO;AACL,cAAI,MAAM;AAAa,mBAAO;AAC9B,gBAAM,IAAI,cAAc,4CAA4C,IAAI;AAAA,QAC1E;AAEA,YAAI,MAAM,QAAQ,QAAQ,MAAM,QAAQ,KAAK;AAC3C,gBAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM;AAAA,QAC/C;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,uBAAuB,QAAQ,OAAO;AAC7C,UAAI,UAAU,CAAC,GACX,oBAAoB,CAAC,GACrBA,QACA;AAEJ,kBAAY,QAAQ,SAAS,iBAAiB;AAE9C,WAAKA,SAAQ,GAAG,SAAS,kBAAkB,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAC7E,cAAM,WAAW,KAAK,QAAQ,kBAAkBA,MAAK,CAAC,CAAC;AAAA,MACzD;AACA,YAAM,iBAAiB,IAAI,MAAM,MAAM;AAAA,IACzC;AAEA,aAAS,YAAY,QAAQ,SAAS,mBAAmB;AACvD,UAAI,eACAA,QACA;AAEJ,UAAI,WAAW,QAAQ,OAAO,WAAW,UAAU;AACjD,QAAAA,SAAQ,QAAQ,QAAQ,MAAM;AAC9B,YAAIA,WAAU,IAAI;AAChB,cAAI,kBAAkB,QAAQA,MAAK,MAAM,IAAI;AAC3C,8BAAkB,KAAKA,MAAK;AAAA,UAC9B;AAAA,QACF,OAAO;AACL,kBAAQ,KAAK,MAAM;AAEnB,cAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,iBAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,0BAAY,OAAOA,MAAK,GAAG,SAAS,iBAAiB;AAAA,YACvD;AAAA,UACF,OAAO;AACL,4BAAgB,OAAO,KAAK,MAAM;AAElC,iBAAKA,SAAQ,GAAG,SAAS,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACzE,0BAAY,OAAO,cAAcA,MAAK,CAAC,GAAG,SAAS,iBAAiB;AAAA,YACtE;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,KAAK,OAAOE,UAAS;AAC5B,MAAAA,WAAUA,YAAW,CAAC;AAEtB,UAAI,QAAQ,IAAID,OAAMC,QAAO;AAE7B,UAAI,CAAC,MAAM;AAAQ,+BAAuB,OAAO,KAAK;AAEtD,UAAI,UAAU,OAAO,GAAG,OAAO,MAAM,IAAI;AAAG,eAAO,MAAM,OAAO;AAEhE,aAAO;AAAA,IACT;AAEA,aAAS,SAAS,OAAOA,UAAS;AAChC,aAAO,KAAK,OAAO,OAAO,OAAO,EAAE,QAAQ,oBAAoB,GAAGA,QAAO,CAAC;AAAA,IAC5E;AAEA,IAAAH,QAAO,QAAQ,OAAW;AAC1B,IAAAA,QAAO,QAAQ,WAAW;AAAA;AAAA;;;ACj1B1B;AAAA,iEAAAQ,UAAAC,SAAA;AAAA;AAGA,QAAI,SAAS;AACb,QAAI,SAAS;AAGb,aAAS,WAAWC,OAAM;AACxB,aAAO,WAAY;AACjB,cAAM,IAAI,MAAM,cAAcA,QAAO,oCAAoC;AAAA,MAC3E;AAAA,IACF;AAGA,IAAAD,QAAO,QAAQ,OAAsB;AACrC,IAAAA,QAAO,QAAQ,SAAsB;AACrC,IAAAA,QAAO,QAAQ,kBAAsB;AACrC,IAAAA,QAAO,QAAQ,cAAsB;AACrC,IAAAA,QAAO,QAAQ,cAAsB;AACrC,IAAAA,QAAO,QAAQ,sBAAsB;AACrC,IAAAA,QAAO,QAAQ,sBAAsB;AACrC,IAAAA,QAAO,QAAQ,OAAsB,OAAO;AAC5C,IAAAA,QAAO,QAAQ,UAAsB,OAAO;AAC5C,IAAAA,QAAO,QAAQ,WAAsB,OAAO;AAC5C,IAAAA,QAAO,QAAQ,cAAsB,OAAO;AAC5C,IAAAA,QAAO,QAAQ,OAAsB,OAAO;AAC5C,IAAAA,QAAO,QAAQ,WAAsB,OAAO;AAC5C,IAAAA,QAAO,QAAQ,gBAAsB;AAGrC,IAAAA,QAAO,QAAQ,iBAAiB;AAChC,IAAAA,QAAO,QAAQ,cAAiB;AAChC,IAAAA,QAAO,QAAQ,iBAAiB;AAGhC,IAAAA,QAAO,QAAQ,OAAiB,WAAW,MAAM;AACjD,IAAAA,QAAO,QAAQ,QAAiB,WAAW,OAAO;AAClD,IAAAA,QAAO,QAAQ,UAAiB,WAAW,SAAS;AACpD,IAAAA,QAAO,QAAQ,iBAAiB,WAAW,gBAAgB;AAAA;AAAA;;;ACtC3D,IAAAE,mBAAA;AAAA,2DAAAC,UAAAC,SAAA;AAAA;AAGA,QAAIC,QAAO;AAGX,IAAAD,QAAO,UAAUC;AAAA;AAAA;;;ACNjB;AAAA;AAAA;AAEA,QAAM,OAAO;AAMb,QAAM,UAAU,UAAU,OAAO;AAMjC,YAAQ,OAAO;AAAA,MACb,OAAO,KAAK,SAAS,KAAK,IAAI;AAAA,MAC9B,WAAW,KAAK,SAAS,KAAK,IAAI;AAAA,IACpC;AAMA,YAAQ,OAAO;AAAA,MACb,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,MAC3B,WAAW,SAAS,KAAKC,UAAS;AAChC,cAAM,OAAO,OAAO,OAAO,EAAC,UAAU,MAAM,OAAO,EAAC,GAAGA,QAAO;AAC9D,eAAO,KAAK,UAAU,KAAK,KAAK,UAAU,KAAK,KAAK;AAAA,MACtD;AAAA,IACF;AAMA,YAAQ,aAAa;AAAA,MACnB,OAAO,SAAS,MAAM,KAAK,SAAS,MAAM;AAExC,YAAI;AACF,cAAI,SAAS,OAAO;AAClB,kBAAM,2BAA2B,IAAI,KAAK,IAAI;AAAA,UAChD;AACA,iBAAO,KAAK,GAAG,KAAK,CAAC;AAAA,QACvB,SAAS,KAAP;AACA,cAAI,SAAS,SAAS,2BAA2B,KAAK,IAAI,OAAO,GAAG;AAClE,mBAAO,MAAM,KAAK,SAAS,KAAK;AAAA,UAClC;AACA,gBAAM,IAAI,YAAY,GAAG;AAAA,QAC3B;AAAA,MACF;AAAA,MACA,WAAW,WAAW;AACpB,cAAM,IAAI,MAAM,0CAA0C;AAAA,MAC5D;AAAA,IACF;AAAA;AAAA;;;ACrDA;AAAA,2CAAAC,UAAAC,SAAA;AAAA;AASA,IAAAA,QAAO,UAAU,SAASC,MAAK;AAC7B,UAAI,OAAOA,SAAQ,YAAYA,KAAI,OAAO,CAAC,MAAM,UAAU;AACzD,eAAOA,KAAI,MAAM,CAAC;AAAA,MACpB;AACA,aAAOA;AAAA,IACT;AAAA;AAAA;;;ACdA,IAAAC,iBAAA;AAAA,0CAAAC,UAAA;AAAA;AAEA,QAAM,WAAW;AACjB,QAAM,SAAS;AAEf,IAAAA,SAAQ,SAAS,SAAS,KAAK,KAAK,KAAK;AACvC,cAAQ,eAAe,KAAK,KAAK;AAAA,QAC/B,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,UAAU;AAAA,QACV,OAAO;AAAA,MACT,CAAC;AAAA,IACH;AAMA,IAAAA,SAAQ,WAAW,SAAS,KAAK;AAC/B,aAAO,OAAO,GAAG,MAAM;AAAA,IACzB;AAMA,IAAAA,SAAQ,WAAW,SAAS,KAAK;AAC/B,aAAO,OAAO,GAAG,MAAM;AAAA,IACzB;AAMA,IAAAA,SAAQ,WAAW,SAAS,OAAO;AACjC,aAAO,OAAO,UAAU,WAAW,OAAO,KAAK,KAAK,IAAI;AAAA,IAC1D;AAMA,IAAAA,SAAQ,WAAW,SAAS,OAAO;AACjC,UAAIA,SAAQ,SAAS,KAAK;AAAG,eAAO,SAAS,OAAO,KAAK,CAAC;AAC1D,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,UAAU,yCAAyC;AAAA,MAC/D;AACA,aAAO,SAAS,KAAK;AAAA,IACvB;AAMA,IAAAA,SAAQ,WAAW,SAAS,KAAK;AAC/B,aAAO,MAAO,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,IAAK,CAAC;AAAA,IACrD;AAMA,IAAAA,SAAQ,aAAa,SAASC,MAAK,QAAQ,KAAK;AAC9C,UAAI,OAAO,QAAQ;AAAU,cAAM,OAAO;AAC1C,aAAOA,KAAI,MAAM,GAAG,GAAG,MAAM;AAAA,IAC/B;AAAA;AAAA;;;ACjEA;AAAA,6CAAAC,UAAAC,SAAA;AAAA;AAEA,QAAMC,WAAU;AAChB,QAAM,QAAQ;AAEd,IAAAD,QAAO,UAAU,SAASE,UAAS;AACjC,YAAM,OAAO,OAAO,OAAO,CAAC,GAAGA,QAAO;AAGtC,WAAK,aAAa,MAAM,SAAS,KAAK,UAAU,KAAK,cAAc,KAAK;AACxE,UAAI,KAAK,WAAW,WAAW,GAAG;AAChC,aAAK,WAAW,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,MACzC;AAEA,WAAK,YAAY,KAAK,YAAY,KAAK,QAAQ,QAAQ,YAAY;AACnE,WAAK,UAAU,OAAO,OAAO,CAAC,GAAGD,UAAS,KAAK,SAAS,KAAK,OAAO;AACpE,aAAO;AAAA,IACT;AAAA;AAAA;;;ACjBA;AAAA,2CAAAE,UAAAC,SAAA;AAAA;AAEA,IAAAA,QAAO,UAAU,SAASC,OAAMC,UAAS;AACvC,UAAI,SAASA,SAAQ,QAAQD,KAAI,KAAKC,SAAQ,QAAQ,OAAOD,KAAI,CAAC;AAClE,UAAI,OAAO,WAAW,aAAa;AACjC,cAAM,IAAI,MAAM,yBAAyBA,QAAO,qBAAqB;AAAA,MACvE;AACA,UAAI,OAAO,WAAW,YAAY;AAChC,iBAAS,EAAE,OAAO,OAAO;AAAA,MAC3B;AACA,aAAO;AAAA,IACT;AAEA,aAAS,OAAOA,OAAM;AACpB,cAAQA,MAAK,YAAY,GAAG;AAAA,QAC1B,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,SAAS;AACP,iBAAOA;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC7BA;AAAA,8CAAAE,UAAAC,SAAA;AAAA;AAEA,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,WAAW;AAEjB,IAAAA,QAAO,UAAU,SAAS,MAAM,MAAMC,UAAS;AAC7C,UAAI,QAAQ,QAAQA,YAAW,MAAM;AACnC,gBAAQ,OAAO,IAAI,GAAG;AAAA,UACpB,KAAK;AACH,mBAAO,KAAK;AACZ,YAAAA,WAAU,CAAC;AACX;AAAA,UACF,KAAK;AACH,mBAAO;AAAA,UACT,SAAS;AACP,kBAAM,IAAI,UAAU,wCAAwC;AAAA,UAC9D;AAAA,QACF;AAAA,MACF;AAEA,YAAMC,OAAM,KAAK;AACjB,YAAM,OAAO,SAASD,QAAO;AAC7B,UAAI,QAAQ,MAAM;AAChB,YAAI,CAAC,KAAK;AAAM,iBAAO;AACvB,eAAO,KAAK;AAAA,MACd;AAEA,YAAM,WAAW,KAAK,YAAY,KAAK;AACvC,YAAM,SAAS,UAAU,UAAU,IAAI;AACvC,UAAI,OAAO,OAAO,cAAc,YAAY;AAC1C,cAAM,IAAI,UAAU,eAAe,WAAW,8BAA8B;AAAA,MAC9E;AAEA,aAAO,OAAO,OAAO,CAAC,GAAG,KAAK,MAAM,IAAI;AACxC,YAAM,OAAO,KAAK,WAAW,CAAC;AAC9B,YAAM,QAAQ,KAAK,WAAW,CAAC;AAC/B,YAAME,UAAS,OAAO,UAAU,MAAMF,QAAO,EAAE,KAAK;AACpD,UAAI,MAAM;AAEV,UAAIE,YAAW,MAAM;AACnB,cAAM,QAAQ,IAAI,IAAI,QAAQA,OAAM,IAAI,QAAQ,KAAK;AAAA,MACvD;AAEA,UAAI,OAAO,KAAK,YAAY,YAAY,KAAK,YAAY,IAAI;AAC3D,YAAID,KAAI,QAAQ,KAAK,QAAQ,KAAK,CAAC,MAAM,IAAI;AAC3C,iBAAO,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK;AAAA,QAC9C;AAAA,MACF;AAEA,aAAO,MAAM,QAAQA,IAAG;AAAA,IAC1B;AAEA,aAAS,QAAQA,MAAK;AACpB,aAAOA,KAAI,MAAM,EAAE,MAAM,OAAOA,OAAM,OAAOA;AAAA,IAC/C;AAAA;AAAA;;;ACvDA;AAAA,4CAAAE,UAAAC,SAAA;AAAA;AAEA,QAAM,WAAW;AAEjB,IAAAA,QAAO,UAAU,SAAS,MAAMC,UAAS;AACvC,YAAM,OAAO,SAASA,QAAO;AAE7B,UAAI,KAAK,QAAQ,MAAM;AACrB,aAAK,OAAO,CAAC;AAAA,MACf;AAEA,UAAI,OAAO,KAAK,YAAY,YAAY;AACtC,eAAO,KAAK,QAAQ,MAAM,IAAI;AAAA,MAChC;AAEA,YAAM,MAAM,KAAK,KAAK,qBAAqB,KAAK;AAChD,UAAI,OAAO,SAAS,KAAK,YAAY,SAAS,KAAK,WAAW,OAAO;AACnE,eAAO;AAAA,MACT;AAEA,YAAM,YAAY,OAAO,KAAK,YAAY,WACtC,KAAK,UACJ,OAAO,KAAK,WAAW,CAAC;AAG7B,YAAM,MAAM,KAAK,QAAQ,QAAQ,SAAS;AAC1C,UAAI,QAAQ,IAAI;AACd,aAAK,UAAU,KAAK,QAAQ,MAAM,GAAG,GAAG;AAAA,MAC1C;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC/BA;AAAA,4CAAAC,UAAAC,SAAA;AAAA;AAEA,QAAM,SAAS;AACf,QAAMC,aAAY;AAClB,QAAM,QAAQ;AAOd,IAAAD,QAAO,UAAU,SAAS,MAAM;AAC9B,UAAI,OAAO,IAAI,MAAM,UAAU;AAC7B,eAAO,EAAE,SAAS,KAAK;AAAA,MACzB;AAEA,UAAI,OAAO,KAAK,IAAI,MAAM,UAAU;AAClC,aAAK,OAAO,CAAC;AAAA,MACf;AAIA,UAAI,KAAK,YAAY,KAAK,WAAW,MAAM;AACzC,aAAK,UAAU,KAAK;AAAA,MACtB;AAGA,YAAM,OAAO,MAAM,QAAQ,MAAM,SAAS,KAAK,OAAO,CAAC;AACvD,YAAM,OAAO,MAAM,YAAY,KAAK,YAAY,EAAE;AAClD,YAAM,OAAO,MAAM,UAAU,KAAK,UAAU,EAAE;AAC9C,YAAM,OAAO,MAAM,aAAa,SAAS,MAAME,UAAS;AACtD,YAAIA,YAAWA,SAAQ,UAAU;AAC/B,eAAK,WAAWA,SAAQ;AAAA,QAC1B;AACA,eAAOD,WAAU,MAAM,MAAMC,QAAO;AAAA,MACtC,CAAC;AAGD,WAAK,UAAU,MAAM,SAAS,KAAK,OAAO;AAC1C,WAAK,UAAU;AACf,WAAK,UAAU;AACf,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1CA,IAAAC,iBAAA;AAAA,0CAAAC,UAAAC,SAAA;AAAA;AAEA,QAAM,YAAY;AAClB,QAAM,WAAW;AAEjB,IAAAA,QAAO,UAAU,SAAS,UAAUC,MAAKC,UAAS;AAChD,YAAM,OAAO,SAASA,QAAO;AAC7B,YAAM,SAAS,UAAU,UAAU,IAAI;AACvC,UAAI,OAAO,OAAO,UAAU,YAAY;AACtC,cAAM,IAAI,UAAU,eAAe,WAAW,0BAA0B;AAAA,MAC1E;AACA,aAAO,OAAO,MAAMD,MAAK,IAAI;AAAA,IAC/B;AAAA;AAAA;;;ACZA;AAAA,sCAAAE,UAAAC,SAAA;AAAA;AAEA,QAAMC,MAAK;AACX,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAMC,aAAY;AAClB,QAAM,UAAU;AAChB,QAAMC,WAAU;AAChB,QAAM,SAAS;AACf,QAAMC,SAAQ;AACd,QAAM,QAAQ;AAkBd,aAASC,QAAO,OAAOC,UAAS;AAC9B,UAAI,UAAU,IAAI;AAChB,eAAO,EAAE,MAAM,CAAC,GAAG,SAAS,OAAO,SAAS,IAAI,MAAM,MAAM;AAAA,MAC9D;AAEA,UAAI,OAAO,OAAO,KAAK;AACvB,YAAM,SAASD,QAAO,MAAM,KAAK,OAAO;AAExC,UAAI,CAACC,UAAS;AACZ,YAAI,QAAQ;AACV,iBAAO,OAAO,OAAO,CAAC,GAAG,MAAM;AAC/B,eAAK,OAAO,OAAO;AACnB,iBAAO;AAAA,QACT;AAKA,QAAAD,QAAO,MAAM,KAAK,OAAO,IAAI;AAAA,MAC/B;AAEA,aAAO,YAAY,MAAMC,QAAO;AAAA,IAClC;AAMA,aAAS,YAAY,MAAMA,UAAS;AAClC,YAAM,OAAO,SAASA,QAAO;AAC7B,YAAM,OAAO,KAAK,WAAW,CAAC;AAC9B,YAAM,QAAQ,OAAO,KAAK,WAAW,CAAC;AACtC,UAAIC,OAAM,KAAK;AAEf,UAAI,KAAK,UAAU;AACjB,aAAK,WAAW,KAAK;AAAA,MACvB;AAGA,YAAM,UAAU,KAAK;AACrB,UAAI,CAAC,MAAM,WAAWA,MAAK,MAAM,OAAO,GAAG;AACzC,gBAAQ,MAAM,IAAI;AAClB,eAAO;AAAA,MACT;AAKA,UAAIA,KAAI,OAAO,OAAO,MAAM,KAAK,MAAM,EAAE,GAAG;AAC1C,eAAO;AAAA,MACT;AAGA,MAAAA,OAAMA,KAAI,MAAM,OAAO;AACvB,YAAM,MAAMA,KAAI;AAGhB,YAAM,WAAWF,QAAO,SAASE,MAAK,IAAI;AAC1C,UAAI,SAAS,MAAM;AACjB,aAAK,WAAW,SAAS;AACzB,QAAAA,OAAMA,KAAI,MAAM,SAAS,IAAI,MAAM;AAAA,MACrC;AAGA,UAAI,aAAaA,KAAI,QAAQ,KAAK;AAClC,UAAI,eAAe,IAAI;AACrB,qBAAa;AAAA,MACf;AAGA,WAAK,SAASA,KAAI,MAAM,GAAG,UAAU;AAErC,YAAM,QAAQ,KAAK,OAAO,QAAQ,iBAAiB,EAAE,EAAE,KAAK;AAC5D,UAAI,UAAU,IAAI;AAChB,aAAK,UAAU;AACf,aAAK,QAAQ,KAAK;AAClB,aAAK,OAAO,CAAC;AAAA,MACf,OAAO;AAGL,aAAK,OAAOH,OAAM,KAAK,UAAU,KAAK,QAAQ,IAAI;AAAA,MACpD;AAGA,UAAI,eAAe,KAAK;AACtB,aAAK,UAAU;AAAA,MACjB,OAAO;AACL,aAAK,UAAUG,KAAI,MAAM,aAAa,MAAM,MAAM;AAClD,YAAI,KAAK,QAAQ,CAAC,MAAM,MAAM;AAC5B,eAAK,UAAU,KAAK,QAAQ,MAAM,CAAC;AAAA,QACrC;AACA,YAAI,KAAK,QAAQ,CAAC,MAAM,MAAM;AAC5B,eAAK,UAAU,KAAK,QAAQ,MAAM,CAAC;AAAA,QACrC;AAAA,MACF;AAEA,cAAQ,MAAM,IAAI;AAElB,UAAI,KAAK,aAAa,QAAQ,OAAO,KAAK,YAAY,YAAY;AAChE,iBAAS,MAAM,KAAK,OAAO;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AAMA,IAAAF,QAAO,UAAUF;AAuBjB,IAAAE,QAAO,YAAY,SAAS,MAAM,MAAMC,UAAS;AAC/C,UAAI,OAAO,SAAS;AAAU,eAAOD,QAAO,MAAMC,QAAO;AACzD,aAAOJ,WAAU,MAAM,MAAMI,QAAO;AAAA,IACtC;AAeA,IAAAD,QAAO,OAAO,SAAS,UAAUC,UAAS;AACxC,YAAMC,OAAMN,IAAG,aAAa,UAAU,MAAM;AAC5C,YAAM,OAAOI,QAAOE,MAAKD,QAAO;AAChC,WAAK,OAAO;AACZ,aAAO;AAAA,IACT;AAUA,IAAAD,QAAO,OAAO,SAASE,MAAKD,UAAS;AACnC,aAAO,MAAM,WAAWC,MAAK,SAASD,QAAO,EAAE,WAAW,CAAC,CAAC;AAAA,IAC9D;AAUA,IAAAD,QAAO,WAAW,SAASE,MAAKD,UAAS;AACvC,YAAM,OAAO,SAASA,QAAO;AAC7B,YAAM,OAAO,KAAK,WAAW,CAAC;AAE9B,UAAID,QAAO,KAAKE,IAAG,GAAG;AACpB,QAAAA,OAAMA,KAAI,MAAM,KAAK,MAAM;AAAA,MAC7B;AAEA,YAAM,WAAWA,KAAI,MAAM,GAAGA,KAAI,OAAO,OAAO,CAAC;AACjD,aAAO;AAAA,QACL,KAAK;AAAA,QACL,MAAM,WAAW,SAAS,KAAK,IAAI;AAAA,MACrC;AAAA,IACF;AAMA,IAAAF,QAAO,QAAQ,CAAC;AAChB,IAAAA,QAAO,aAAa,WAAW;AAC7B,MAAAA,QAAO,QAAQ,CAAC;AAAA,IAClB;AACA,IAAAL,QAAO,UAAUK;AAAA;AAAA;;;AC5NjB,uBAAqB;;;ACqBd,SAAS,mBAAmB,MAAM;AACvC,QAAM,WAAW,QAAQ,CAAC;AAC1B,QAAM,MAAM,SAAS,OAAO,CAAC;AAC7B,QAAM,QAAQ,SAAS,SAAS,CAAC,GAAG,CAAC;AACrC,QAAM,cAAc,IAAI,QACpB,kBAAkB,IAAI,MAAM,MAAM,IAClC;AACJ,QAAM,YAAY,IAAI,MAAM,kBAAkB,IAAI,IAAI,MAAM,IAAI;AAEhE,SAAO;AAAA,IACL,OAAO;AAAA;AAAA,MAEL,MAAM,IAAI,QAAQ,kBAAkB,IAAI,MAAM,IAAI,IAAI;AAAA;AAAA,MAEtD,QAAQ,gBAAgB,SAAY,SAAY,cAAc;AAAA,MAC9D,QAAQ,kBAAkB,MAAM,CAAC,KAAK,SAAS,KAAK;AAAA,IACtD;AAAA,IACA,KAAK;AAAA;AAAA,MAEH,MAAM,IAAI,MAAM,kBAAkB,IAAI,IAAI,IAAI,IAAI;AAAA;AAAA,MAElD,QAAQ,cAAc,SAAY,SAAY,YAAY;AAAA,MAC1D,QAAQ,kBAAkB,MAAM,CAAC,KAAK,SAAS,GAAG;AAAA,IACpD;AAAA,EACF;AACF;AAOA,SAAS,kBAAkB,OAAO;AAChC,SAAO,OAAO,UAAU,YAAY,QAAQ,KAAK,QAAQ;AAC3D;;;AC1DO,SAAS,MAAM,GAAG;AACvB,SAAO;AACT;;;AC4DA,IAAM,MAAM,CAAC,EAAE;AAKR,IAAM,WAAW,OAAO,UAAU;AAKlC,IAAM,OAAO,OAAO,MAAM;AAK1B,IAAM,OAAO,OAAO,MAAM;AAoB1B,SAASG,OAAM,MAAM,SAAS;AAEnC,MAAI;AAEJ,MAAI;AAEJ,MAAI,OAAO,YAAY,YAAY;AACjC,YAAQ;AAAA,EACV,WAAW,WAAW,OAAO,YAAY,UAAU;AACjD,QAAI,QAAQ;AAAO,cAAQ,QAAQ;AACnC,QAAI,QAAQ;AAAO,cAAQ,QAAQ;AAAA,EACrC;AAEA,QAAM,MAAM,MAAM,MAAM,CAAC,CAAC,EAAE;AAQ5B,WAAS,MAAM,MAAM,KAAKC,QAAO,SAAS;AACxC,QAAI,SAAS,IAAI,GAAG;AAClB,MAAAD,OAAM,cAAc,WAAW,MAAM,KAAK,IAAI,IAAI;AAAA,IACpD;AAEA,WAAOA;AAKP,aAASA,SAAQ;AAEf,YAAM,SAAS,QAAQ,SAAS,MAAM,MAAM,KAAKC,QAAO,OAAO,CAAC,IAAI,CAAC;AAErE,UAAI,OAAO,CAAC,MAAM,MAAM;AACtB,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,CAAC,MAAM,MAAM;AAEtB,YAAI;AAEJ,aAAK,QAAQ,MAAM;AACjB,cACE,IAAI,KAAK,MAAM,IAAI,KACnB,KAAK,IAAI,KACT,OAAO,KAAK,IAAI,MAAM;AAAA,UAEtB,SAAS;AAAA,UAET,SAAS,YACT;AACA,kBAAM,eAAe,QAAQ,OAAO,IAAI;AAExC,kBAAM,QAAQ,KAAK,IAAI;AAEvB,gBAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,oBAAM;AAAA;AAAA,gBAAuC;AAAA;AAC7C,kBAAI,SAAS;AAEb,qBAAO,SAAS,MAAM,SAAS,MAAM,QAAQ;AAC3C,sBAAM,WAAW,MAAM,MAAM;AAE7B,oBAAI,SAAS,QAAQ,GAAG;AACtB,wBAAM,YAAY;AAAA,oBAChB;AAAA,oBACA;AAAA,oBACA;AAAA,oBACA;AAAA,kBACF,EAAE;AACF,sBAAI,UAAU,CAAC,MAAM;AAAM,2BAAO;AAClC,2BACE,OAAO,UAAU,CAAC,MAAM,WAAW,UAAU,CAAC,IAAI,SAAS;AAAA,gBAC/D,OAAO;AACL;AAAA,gBACF;AAAA,cACF;AAAA,YACF,WAAW,SAAS,KAAK,GAAG;AAC1B,oBAAM,YAAY,MAAM,OAAO,MAAM,MAAM,YAAY,EAAE;AACzD,kBAAI,UAAU,CAAC,MAAM;AAAM,uBAAO;AAAA,YACpC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO,QAAQ,SAAS,MAAM,MAAM,KAAKA,QAAO,OAAO,CAAC,IAAI;AAAA,IAC9D;AAAA,EACF;AACF;AAUA,SAAS,SAAS,OAAO;AACvB,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO,CAAC,UAAU,KAAK;AAAA,EACzB;AAEA,SAAO,CAAC,KAAK;AACf;AAUA,SAAS,SAAS,OAAO;AACvB,SAAO;AAAA,IACL,SACE,OAAO,UAAU,YACjB,UAAU,SACV,OAAO,MAAM,SAAS,YACtB,MAAM,KAAK,SAAS;AAAA,EACxB;AACF;;;AChMO,SAAS,cAAc,QAAQC,UAAS;AAC7C,QAAM,SAASA,SAAQ,UAAU;AACjC,QAAM,SAASA,SAAQ,UAAU;AACjC,QAAM,eAAe,OAAO,OAAO,CAAC,GAAGA,SAAQ,YAAY;AAE3D,QAAM,WAAW,CAAC;AAElB,QAAM,SAAS,CAAC;AAChB,QAAM,YAAY,aAAa;AAC/B,QAAM,UAAU,aAAa;AAE7B,QAAM,SAAS,CAAC;AAEhB,QAAM,QAAQ,CAAC;AACf,MAAIC,SAAQ;AACZ,MAAI,UAAU;AAEd,MAAI;AAEJ,MAAI;AAEJ,MAAI;AAEJ,QAAM,cAAc,OAAO,OAAO,CAAC,GAAG,cAAc;AAAA,IAClD,WAAW;AAAA,IACX,gBAAgB;AAAA,EAClB,CAAC;AAED,MAAI,SAAS;AACX,gBAAY,UAAU;AAAA,EACxB;AAIA,MAAID,SAAQ,OAAO;AACjB,gBAAYA,SAAQ,MAAM;AAC1B,UAAM,SAAS,IAAIA,SAAQ;AAAA,EAC7B;AAEA,SAAO,EAAEC,SAAQ,OAAO,QAAQ;AAC9B,UAAM,CAAC,MAAM,OAAO,OAAO,IAAI,OAAOA,MAAK;AAG3C,QAAI,SAAS,QAAQ;AACnB,aAAO,KAAK,QAAQ,eAAe,KAAK,CAAC;AACzC,eAAS,MAAM,KAAK;AACpB,eAAS,MAAM,GAAG;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,SAAS,OAAO,KAAK,EAAE;AAC7B,QAAM,QAAQ,SAAS,SAAS;AAChC,QAAM,oBAAoBD,SAAQ,cAAc,MAAM,MAAM;AAC5D,QAAM,QAAQ,SAAS,MAAM;AAE7B,MAAI,qBAAqB,CAACA,SAAQ,YAAY;AAC5C,UAAM,IAAI;AAAA,MACR;AAAA,MACA,wBAAwB,CAAC;AAAA,MACzB;AAAA,IACF;AAAA,EACF;AAEA,MAAI;AACF,aACEA,SAAQ,cAAc,CAAC,oBACnBA,SAAQ,MAAM,kBAAkB,OAAO,GAAG,WAAW,IACrDA,SAAQ,MAAM,MAAM,OAAO,WAAW;AAAA,EAC9C,SAAS,QAAP;AACA,UAAM;AAAA;AAAA,MAAmC;AAAA;AACzC,UAAME,SAAQ,wBAAwB,MAAM,GAAG;AAC/C,UAAM,UAAU,OAAO,MAAM,OAAO,EAAE,QAAQ,iBAAiB,EAAE;AACjE,UAAM,MAAMA,OAAM;AAClB,UAAM,MAAM,EAAC,MAAMA,OAAM,MAAM,QAAQA,OAAM,SAAS,EAAC;AACvD,gBAAY;AACZ,cACE,MAAM,YAAY,OAAO,SAAS,OAAO;AAAA,IAEzC,MAAM,YAAY;AAAA,EACtB;AAEA,MAAI,UAAUF,SAAQ,cAAc,CAAC,mBAAmB;AACtD,QAAI,MAAM,MAAM,MAAM,OAAO,KAAK,MAAM,SAAS,OAAO,MAAM,CAAC,GAAG;AAChE,eAAS;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK,OAAO,SAAS,OAAO;AAAA;AAAA,QAE5B,MAAM;AAAA,UACJ;AAAA,YACE,MAAM;AAAA,YACN,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,KAAK,OAAO,SAAS,OAAO;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,YAAY;AAAA,QACZ,UAAU,CAAC;AAAA,MACb;AAAA,IACF,OAAO;AACL,YAAME,SAAQ,wBAAwB,OAAO,GAAG;AAChD,kBAAY,IAAI,MAAM,qCAAqC;AAE3D,gBAAU,MAAMA,OAAM;AAEtB,gBAAU,MAAM,EAAC,MAAMA,OAAM,MAAM,QAAQA,OAAM,SAAS,EAAC;AAC3D,eAAS;AAAA,IACX;AAAA,EACF;AAEA,MAAI,QAAQ;AAEV,WAAO,WAAW;AAGlB,IAAAC,OAAM,QAAQ,CAAC,QAAQ,OAAOF,QAAO,YAAY;AAC/C,UAAI;AAAA;AAAA,QACF,QAAQ,QAAQ,SAAS,CAAC;AAAA;AAG5B,UAAI,OAAO;AAIX,UAAI,OAAO,SAAS,6BAA6B,WAAW,MAAM;AAEhE,YAAI,OAAOA,WAAU,UAAU;AAE7B,oBAAU,QAAQ,IAAI;AACtB,iBAAOA;AAAA,QACT;AAGA,gBAAQ,IAAI,IAAI,OAAO;AAAA,MACzB;AAEA,kBAAY,MAAM;AAAA,IACpB,CAAC;AAGD,QAAI,MAAM,QAAQ,SAAS,GAAG;AAC5B,gBAAU,KAAK,GAAG,QAAQ;AAAA,IAC5B,WAAW,OAAO,cAAc,YAAY;AAC1C,iBAAWG,YAAW,UAAU;AAC9B,WAAOA,SAAQ,KAAK,2BAA2B;AAC/C;AAAA,UACEA,SAAQ,SAAS;AAAA,UACjBA,SAAQ;AAAA,UACRA,SAAQ;AAAA,UACRA,SAAQ;AAAA,UACRA,SAAQ,IAAI;AAAA,UACZA,SAAQ,IAAI;AAAA,QACd;AAAA,MACF;AAAA,IACF;AAEA,eAAW,SAAS,QAAQ;AAC1B,kBAAY,KAAK;AAEjB,UAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,gBAAQ,KAAK,KAAK;AAAA,MACpB,OAAO;AAGL,WAAO,OAAO,YAAY,YAAY,mBAAmB;AACzD,gBAAQ,KAAK;AAAA,MACf;AAAA,IACF;AAAA,EACF;AAGA,SAAO,EAAC,QAAQ,OAAO,WAAW,QAAO;AAQzC,WAAS,YAAY,aAAa;AAChC;AAAA,MACE,WAAW;AAAA,MACX;AAAA,IACF;AACA,OAAO,SAAS,aAAa,4CAA4C;AACzE,UAAM,aAAa,wBAAwB,YAAY,KAAK;AAC5D,UAAM,WAAW,wBAAwB,YAAY,GAAG;AACxD,gBAAY,QAAQ,WAAW;AAC/B,gBAAY,MAAM,SAAS;AAC3B,gBAAY,MAAM;AAAA,MAChB,OAAO;AAAA,QACL,MAAM,WAAW;AAAA,QACjB,QAAQ,WAAW,SAAS;AAAA,QAC5B,QAAQ,WAAW;AAAA,MACrB;AAAA,MACA,KAAK;AAAA,QACH,MAAM,SAAS;AAAA,QACf,QAAQ,SAAS,SAAS;AAAA,QAC1B,QAAQ,SAAS;AAAA,MACnB;AAAA,IACF;AACA,gBAAY,QAAQ,CAAC,YAAY,OAAO,YAAY,GAAG;AAAA,EACzD;AASA,WAAS,wBAAwB,aAAa;AAC5C,QAAI,eAAe,cAAc,OAAO;AAExC,QAAI,eAAe,GAAG;AACpB,qBAAe;AAAA,IACjB,WAAW,eAAe,OAAO,QAAQ;AACvC,qBAAe,OAAO;AAAA,IACxB;AAEA,UAAM,gBAAgB,MAAM,QAAQ,YAAY;AAChD;AAAA,MACE,OAAO,cAAc;AAAA,MACrB;AAAA,IACF;AACA,UAAM,OAAO,aAAa,cAAc,OAAO;AAC/C,OAAO,QAAQ,OAAO,6BAA6B;AACnD,UAAM,SAAS,MAAM,IAAI,EAAE,UAAU,cAAc,SAAS;AAC5D,UAAM,SAAS,MAAM,IAAI,EAAE,UAAU,cAAc,SAAS;AAC5D;AAAA;AAAA,MAA6B,EAAC,MAAM,QAAQ,OAAM;AAAA;AAAA,EACpD;AAGA,WAAS,SAASF,QAAO;AAGvB,QAAI,CAAC,aAAaA,OAAM,OAAO,WAAW;AACxC,kBAAYA,OAAM;AAAA,IACpB;AAEA,QAAI,EAAEA,OAAM,QAAQ,UAAU,MAAMA,OAAM,IAAI,EAAE,SAASA,OAAM,QAAQ;AACrE,YAAMA,OAAM,IAAI,IAAIA;AAAA,IACtB;AAAA,EACF;AACF;AAMA,SAAS,MAAM,OAAO;AACpB,SAAO,QAAQ;AAAA,IACb,MAEG,QAAQ,qBAAqB,EAAE,EAI/B,QAAQ,6BAA6B,EAAE;AAAA,EAC5C;AACF;;;ACpQO,SAAS,qBACd,SACAG,KACA,MACA,YACA,WACA,OACA,cACA,WACA,QACA,YACA,WACA,aACA;AACA,QAAMC,QAAO;AACb,QAAM,aAAa,KAAK,OAAO,SAAS;AACxC,QAAM,OAAO,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC;AAC/C,QAAM,gBACJ,QAAQ,KAAK,CAAC,EAAE,SAAS,MAAM,aAC3B,KAAK,CAAC,EAAE,eAAe,KAAK,CAAC,GAAG,IAAI,EAAE,SACtC;AACN,QAAM,yBAAyB,gBAAgB,gBAAgB,IAAI;AACnE,MAAI,UAAU;AAEd,MAAI;AAEJ,MAAI;AAEJ,SAAOC;AAGP,WAASA,OAAM,MAAM;AACnB,OAAO,SAAS,MAAM,gBAAgB,cAAc;AACpD,YAAQ,MAAM,IAAI;AAClB,YAAQ,MAAM,UAAU;AACxB,YAAQ,QAAQ,IAAI;AACpB,YAAQ,KAAK,UAAU;AACvB,oBAAgBD,MAAK,IAAI;AACzB,WAAO;AAAA,EACT;AAGA,WAAS,QAAQ,MAAM;AACrB,QAAI,SAAS,MAAM,KAAK;AACtB,YACE,aACA,IAAI;AAAA,QACF;AAAA,QACAA,MAAK,IAAI;AAAA,QACT;AAAA,MACF;AAAA,IAEJ;AAEA,QAAI,SAAS,MAAM,iBAAiB;AAClC,aAAO,eAAe,IAAI;AAAA,IAC5B;AAEA,QAAI,mBAAmB,IAAI,GAAG;AAC5B,cAAQ,MAAM,MAAM,UAAU;AAC9B,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,MAAM,UAAU;AAQ7B,YAAM,kBAAkB,cACpB,cAAc,UAAU,UAAUA,MAAK,IAAI,EAAE,SAC7C;AACJ,YAAM,SAAS,KAAK,IAAI,wBAAwB,eAAe;AAC/D,aAAO,SACH,aAAa,SAAS,SAAS,MAAM,YAAY,MAAM,IACvD;AAAA,IACN;AAEA,UAAM,MAAMA,MAAK,IAAI;AAErB,QACE,IAAI,SAAS,cAAc,QAC3B,CAAC,aACDA,MAAK,OAAO,KAAK,IAAI,IAAI,GACzB;AACA,YAAM,IAAI;AAAA,QACR;AAAA,QACAA,MAAK,IAAI;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,MAAM,SAAS;AACvB,WAAO,OAAO,IAAI;AAAA,EACpB;AAGA,WAAS,OAAO,MAAM;AACpB,QACE,SAAS,MAAM,OACf,SAAS,MAAM,mBACf,mBAAmB,IAAI,GACvB;AACA,cAAQ,KAAK,SAAS;AACtB,aAAO,QAAQ,IAAI;AAAA,IACrB;AAEA,QAAI,SAAS,MAAM,kBAAkB,CAAC,OAAO;AAC3C,cAAQ,QAAQ,IAAI;AACpB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,QAAQ,IAAI;AACpB,WAAO;AAAA,EACT;AAGA,WAAS,eAAe,MAAM;AAC5B;AAGA,QAAI,CAAC,OAAO;AACV,UAAI,SAAS;AACX,gBAAQ,MAAM,SAAS;AACvB,gBAAQ,QAAQ,IAAI;AACpB,eAAO;AAAA,MACT;AAEA,cAAQ,MAAM,UAAU;AACxB,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,UAAU;AACvB,cAAQ,KAAK,IAAI;AACjB,aAAOD;AAAA,IACT;AAGA,UAAM,SAAS,cAAcC,MAAK,OAAO,MAAM,UAAU,GAAG;AAAA,MAC1D;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP,YAAY;AAAA,MACZ;AAAA,MACA,QAAQ,SAAS,OAAO;AAAA,MACxB,QAAQ,SAAS,OAAO;AAAA,IAC1B,CAAC;AACD,UAAM,SAAS,OAAO;AAGtB,QAAI,UAAU,QAAQ;AAEpB,SAAO,OAAO,SAAS,WAAW,kBAAkB;AACpD,YAAM,OAAO,OAAO,KAAK,CAAC;AAC1B,SAAO,MAAM,eAAe;AAI5B,UACE,KAAK,SAAS,yBACd,KAAK,WAAW,SAAS,oBACzB;AACA,cAAM,IAAI;AAAA,UACR,iBACE,KAAK,OACL;AAAA,UACF,mBAAmB,IAAI,EAAE;AAAA,UACzB;AAAA,QACF;AAAA,MACF,WAAW,KAAK,WAAW,WAAW,CAAC,GAAG;AACxC,cAAM,IAAI;AAAA,UACR;AAAA,UACA,mBAAmB,KAAK,WAAW,WAAW,CAAC,CAAC,EAAE;AAAA,UAClD;AAAA,QACF;AAAA,MACF,WACE,KAAK,WAAW,WAAW,CAAC,KAC5B,KAAK,WAAW,WAAW,CAAC,EAAE,SAAS,iBACvC;AACA,cAAM,IAAI;AAAA,UACR,iBACE,KAAK,WAAW,WAAW,CAAC,EAAE,OAC9B;AAAA,UACF,mBAAmB,KAAK,WAAW,WAAW,CAAC,CAAC,EAAE;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAI,OAAO,OAAO;AAChB,kBAAY,IAAI;AAAA,QACd,4CAA4C,OAAO,MAAM;AAAA,QACzD;AAAA;AAAA,UAEE,MAAM,OAAO,MAAM,IAAI;AAAA;AAAA,UAEvB,QAAQ,OAAO,MAAM,IAAI,SAAS;AAAA;AAAA,UAElC,QAAQ,OAAO,MAAM;AAAA,QACvB;AAAA,QACA;AAAA,MACF;AAEA,UAAI,SAAS,MAAM,OAAO,OAAO,SAAS;AACxC,gBAAQ,MAAM,SAAS;AACvB,gBAAQ,QAAQ,IAAI;AACpB,eAAO;AAAA,MACT;AAEA,YAAM;AAAA,IACR;AAEA,YAAQ,MAAM,UAAU;AACxB,YAAQ,QAAQ,IAAI;AACpB,YAAQ,KAAK,UAAU;AACvB,WAAO,OAAO,QAAQ,KAAK,IAAI,GAAG,YAAY,EAAC,OAAM,IAAI,MAAS;AAClE,WAAOD;AAAA,EACT;AACF;;;AChNO,SAAS,cAAcG,UAAS;AACrC,QAAM,WAAWA,YAAW,CAAC;AAC7B,QAAM,YAAY,SAAS;AAC3B,QAAM,QAAQ,SAAS;AAMvB,QAAM,SAAS,SAAS;AACxB,MAAI,aAAa,SAAS;AAE1B,MAAI;AAEJ,MAAI,eAAe,QAAQ,eAAe,QAAW;AACnD,iBAAa;AAAA,EACf;AAEA,MAAI,OAAO;AACT,QAAI,CAAC,MAAM,mBAAmB;AAC5B,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,mBAAe,OAAO;AAAA,MACpB,EAAC,aAAa,MAAM,YAAY,SAAQ;AAAA,MACxC,SAAS;AAAA,IACX;AAAA,EACF,WAAW,SAAS,gBAAgB,SAAS,WAAW;AACtD,UAAM,IAAI,MAAM,2DAA2D;AAAA,EAC7E;AAEA,SAAO;AAAA,IACL,MAAM;AAAA,MACJ,CAAC,MAAM,cAAc,GAAG,EAAC,UAAU,wBAAwB,UAAU,KAAI;AAAA,IAC3E;AAAA,IACA,MAAM,EAAC,CAAC,MAAM,cAAc,GAAG,EAAC,UAAU,uBAAsB,EAAC;AAAA,EACnE;AAMA,WAAS,uBAAuB,SAASC,KAAI,KAAK;AAChD,UAAMC,QAAO;AAEb,WAAOC;AAGP,aAASA,OAAM,MAAM;AACnB,SAAO,SAAS,MAAM,gBAAgB,cAAc;AACpD,aAAO,qBAAqB;AAAA,QAC1BD;AAAA,QACA;AAAA,QACA,aAAa,SAAS,OAAO,MAAM,UAAU;AAAA,QAC7C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,EAAE,IAAI;AAAA,IACR;AAGA,aAAS,MAAM,MAAM;AACnB,aAAO,SAAS,MAAM,OAAO,mBAAmB,IAAI,IAChDD,IAAG,IAAI,IACP,IAAI,IAAI;AAAA,IACd;AAAA,EACF;AAMA,WAAS,uBAAuB,SAASA,KAAI;AAC3C,UAAMC,QAAO;AAEb,WAAOC;AAGP,aAASA,OAAM,MAAM;AACnB,SAAO,SAAS,MAAM,gBAAgB,cAAc;AACpD,aAAO,qBAAqB;AAAA,QAC1BD;AAAA,QACA;AAAA,QACAD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,EAAE,IAAI;AAAA,IACR;AAAA,EACF;AACF;;;ACnJO,IAAM,QACX;AACK,IAAM,OACX;;;ACOK,SAASG,OAAM,MAAM;AAC1B,SAAO,MAAQ,KAAK,OAAO,aAAa,IAAI,CAAC;AAC/C;AAWO,SAASC,MAAK,MAAM;AACzB,QAAM,YAAY,OAAO,aAAa,IAAI;AAC1C,SAAO,MAAQ,KAAK,SAAS,KAAK,KAAO,KAAK,SAAS;AACzD;AAUO,SAAS,KAAKC,OAAM;AACzB,MAAIC,SAAQ;AAEZ,SAAO,EAAEA,SAAQD,MAAK,QAAQ;AAC5B,QAAI,EAAEC,SAAQF,QAAOD,QAAOE,MAAK,WAAWC,MAAK,CAAC;AAAG,aAAO;AAAA,EAC9D;AAGA,SAAOA,SAAQ;AACjB;;;ACpBA,IAAM,cAAc,EAAC,UAAU,qBAAqB,SAAS,KAAI;AAsC1D,SAAS,WACd,SACAC,KACA,KACA,OACA,cACA,WACA,WACA,SACA,eACA,sBACA,sBACA,aACA,oBACA,yBACA,mBACA,yBACA,kBACA,4BACA,kCACA,iCACA,kBACA,sBACA,6BACA,kCACA,2BACA,mCACA,8BACA,oCACA,mCACA,iCACA,uCACA,sCACA;AACA,QAAMC,QAAO;AAEb,MAAI;AAEJ,MAAI;AAEJ,MAAI;AAEJ,SAAOC;AAGP,WAASA,OAAM,MAAM;AACnB,OAAO,SAAS,MAAM,UAAU,cAAc;AAC9C,iBAAaD,MAAK,IAAI;AACtB,YAAQ,MAAM,OAAO;AACrB,YAAQ,MAAM,aAAa;AAC3B,YAAQ,QAAQ,IAAI;AACpB,YAAQ,KAAK,aAAa;AAC1B,WAAO;AAAA,EACT;AAGA,WAAS,WAAW,MAAM;AAGxB,QAAI,mBAAmB,IAAI,KAAK,cAAc,IAAI,GAAG;AACnD,aAAO,IAAI,IAAI;AAAA,IACjB;AAGA,kBAAc;AACd,WAAO,qBAAqB,IAAI;AAAA,EAClC;AAIA,WAAS,WAAW,MAAM;AAExB,QAAI,SAAS,MAAM,OAAO;AACxB,cAAQ,MAAM,oBAAoB;AAClC,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,oBAAoB;AACjC,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QAAI,SAAS,MAAM,aAAa;AAC9B,aAAO,OAAO,IAAI;AAAA,IACpB;AAGA,QAAI,SAAS,MAAM,OAAOC,OAAQ,IAAI,GAAG;AACvC,cAAQ,MAAM,WAAW;AACzB,cAAQ,MAAM,kBAAkB;AAChC,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA,sEACG,SAAS,MAAM,kBACZ,4DACA;AAAA,IACR;AAAA,EACF;AAIA,WAAS,qBAAqB,MAAM;AAElC,QAAI,SAAS,MAAM,aAAa;AAC9B,aAAO,OAAO,IAAI;AAAA,IACpB;AAGA,QAAI,SAAS,MAAM,OAAOA,OAAQ,IAAI,GAAG;AACvC,cAAQ,MAAM,WAAW;AACzB,cAAQ,MAAM,kBAAkB;AAChC,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA,sEACG,SAAS,MAAM,YAAY,SAAS,MAAM,QACvC,8DACA;AAAA,IACR;AAAA,EACF;AAIA,WAAS,YAAY,MAAM;AAEzB,QAAI,SAAS,MAAM,QAAS,SAAS,MAAM,OAAOC,MAAO,IAAI,GAAI;AAC/D,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,OACf,SAAS,MAAM,SACf,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACf,0BAA0B,IAAI,KAC9B,kBAAkB,IAAI,GACtB;AACA,cAAQ,KAAK,kBAAkB;AAC/B,oBAAc;AACd,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA,gHACG,SAAS,MAAM,SACZ,wDACA;AAAA,IACR;AAAA,EACF;AAIA,WAAS,iBAAiB,MAAM;AAE9B,QAAI,SAAS,MAAM,KAAK;AACtB,cAAQ,MAAM,uBAAuB;AACrC,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,uBAAuB;AACpC,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QAAI,SAAS,MAAM,OAAO;AACxB,cAAQ,MAAM,uBAAuB;AACrC,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,uBAAuB;AACpC,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACd,SAAS,MAAM,OAAOD,OAAQ,IAAI,GACnC;AACA,cAAQ,KAAK,WAAW;AACxB,aAAO,gBAAgB,IAAI;AAAA,IAC7B;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,iBAAiB,MAAM;AAE9B,QAAI,SAAS,MAAM,OAAOA,OAAQ,IAAI,GAAG;AACvC,cAAQ,MAAM,iBAAiB;AAC/B,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,WAAW,MAAM;AAExB,QAAI,SAAS,MAAM,QAAS,SAAS,MAAM,OAAOC,MAAO,IAAI,GAAI;AAC/D,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,OACf,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACf,0BAA0B,IAAI,KAC9B,kBAAkB,IAAI,GACtB;AACA,cAAQ,KAAK,iBAAiB;AAC9B,oBAAc;AACd,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA,gHACG,SAAS,MAAM,SACZ,wDACA;AAAA,IACR;AAAA,EACF;AAKA,WAAS,gBAAgB,MAAM;AAE7B,QAAI,SAAS,MAAM,KAAK;AACtB,cAAQ,MAAM,uBAAuB;AACrC,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,uBAAuB;AACpC,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACd,SAAS,MAAM,OAAOD,OAAQ,IAAI,GACnC;AACA,cAAQ,KAAK,WAAW;AACxB,aAAO,gBAAgB,IAAI;AAAA,IAC7B;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,gBAAgB,MAAM;AAE7B,QAAI,SAAS,MAAM,OAAOA,OAAQ,IAAI,GAAG;AACvC,cAAQ,MAAM,gBAAgB;AAC9B,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA,sEACG,SAAS,MAAM,YACf,SAAS,QACR,OAAO,MAAM,OACb,OAAO,MAAM,QACX,wDACA;AAAA,IACR;AAAA,EACF;AAIA,WAAS,UAAU,MAAM;AAEvB,QAAI,SAAS,MAAM,QAAS,SAAS,MAAM,OAAOC,MAAO,IAAI,GAAI;AAC/D,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACf,0BAA0B,IAAI,KAC9B,kBAAkB,IAAI,GACtB;AACA,cAAQ,KAAK,gBAAgB;AAC7B,oBAAc;AACd,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAKA,WAAS,eAAe,MAAM;AAE5B,QACE,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACd,SAAS,MAAM,OAAOD,OAAQ,IAAI,GACnC;AACA,cAAQ,KAAK,WAAW;AACxB,aAAO,gBAAgB,IAAI;AAAA,IAC7B;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAGA,WAAS,gBAAgB,MAAM;AAE7B,QAAI,SAAS,MAAM,OAAO;AACxB,cAAQ,MAAM,oBAAoB;AAClC,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,oBAAoB;AACjC,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QAAI,SAAS,MAAM,aAAa;AAC9B,aAAO,OAAO,IAAI;AAAA,IACpB;AAGA,QAAI,SAAS,MAAM,gBAAgB;AACjC,SAAO,YAAY,qCAAqC;AACxD,aAAO,qBAAqB;AAAA,QAC1BD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,WAAW;AAAA,MACb,EAAE,IAAI;AAAA,IACR;AAGA,QAAI,SAAS,MAAM,OAAOC,OAAQ,IAAI,GAAG;AACvC,cAAQ,MAAM,gBAAgB;AAC9B,cAAQ,MAAM,oBAAoB;AAClC,cAAQ,MAAM,2BAA2B;AACzC,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,yBAAyB,MAAM;AACtC,kBAAc;AACd,WAAO,qBAAqB,IAAI;AAAA,EAClC;AAIA,WAAS,qBAAqB,MAAM;AAElC,QAAI,SAAS,MAAM,QAAS,SAAS,MAAM,OAAOC,MAAO,IAAI,GAAI;AAC/D,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,SACf,SAAS,MAAM,SACf,SAAS,MAAM,YACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACf,0BAA0B,IAAI,KAC9B,kBAAkB,IAAI,GACtB;AACA,cAAQ,KAAK,2BAA2B;AACxC,oBAAc;AACd,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,0BAA0B,MAAM;AAEvC,QAAI,SAAS,MAAM,OAAO;AACxB,cAAQ,MAAM,gCAAgC;AAC9C,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,gCAAgC;AAC7C,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QAAI,SAAS,MAAM,UAAU;AAC3B,cAAQ,KAAK,oBAAoB;AACjC,cAAQ,MAAM,iCAAiC;AAC/C,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,iCAAiC;AAC9C,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACf,0BAA0B,IAAI,KAC9B,kBAAkB,IAAI,KACrB,SAAS,MAAM,OAAOD,OAAQ,IAAI,GACnC;AACA,cAAQ,KAAK,oBAAoB;AACjC,cAAQ,KAAK,gBAAgB;AAC7B,oBAAc;AACd,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,yBAAyB,MAAM;AAEtC,QAAI,SAAS,MAAM,OAAOA,OAAQ,IAAI,GAAG;AACvC,cAAQ,MAAM,yBAAyB;AACvC,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,mBAAmB,MAAM;AAEhC,QAAI,SAAS,MAAM,QAAS,SAAS,MAAM,OAAOC,MAAO,IAAI,GAAI;AAC/D,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,SACf,SAAS,MAAM,YACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACf,0BAA0B,IAAI,KAC9B,kBAAkB,IAAI,GACtB;AACA,cAAQ,KAAK,yBAAyB;AACtC,cAAQ,KAAK,oBAAoB;AACjC,oBAAc;AACd,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,wBAAwB,MAAM;AAErC,QAAI,SAAS,MAAM,UAAU;AAC3B,cAAQ,MAAM,iCAAiC;AAC/C,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,iCAAiC;AAC9C,oBAAc;AACd,aAAO;AAAA,IACT;AAGA,QACE,SAAS,MAAM,SACf,SAAS,MAAM,eACf,SAAS,MAAM,kBACd,SAAS,MAAM,OAAOD,OAAQ,IAAI,GACnC;AACA,cAAQ,KAAK,gBAAgB;AAC7B,aAAO,gBAAgB,IAAI;AAAA,IAC7B;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,WAAS,qBAAqB,MAAM;AAElC,QAAI,SAAS,MAAM,iBAAiB,SAAS,MAAM,YAAY;AAC7D,cAAQ,MAAM,4BAA4B;AAC1C,cAAQ,MAAM,kCAAkC;AAChD,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,kCAAkC;AAC/C,eAAS;AACT,aAAO;AAAA,IACT;AAGA,QAAI,SAAS,MAAM,gBAAgB;AACjC,SAAO,YAAY,qCAAqC;AACxD,aAAO,qBAAqB;AAAA,QAC1BD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,WAAW;AAAA,MACb,EAAE,IAAI;AAAA,IACR;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA,8EACG,SAAS,MAAM,WACZ,uFACA;AAAA,IACR;AAAA,EACF;AAGA,WAAS,8BAA8B,MAAM;AAC3C,YAAQ,KAAK,gBAAgB;AAC7B,kBAAc;AACd,WAAO,qBAAqB,IAAI;AAAA,EAClC;AAIA,WAAS,0BAA0B,MAAM;AACvC,OAAO,WAAW,QAAW,iCAAiC;AAE9D,QAAI,SAAS,MAAM,KAAK;AACtB;AAAA,QACE;AAAA,QACA;AAAA,QACA,oCAAoC,OAAO,aAAa,MAAM,IAAI;AAAA,MACpE;AAAA,IACF;AAEA,QAAI,SAAS,QAAQ;AACnB,cAAQ,MAAM,kCAAkC;AAChD,cAAQ,QAAQ,IAAI;AACpB,cAAQ,KAAK,kCAAkC;AAC/C,cAAQ,KAAK,4BAA4B;AACzC,cAAQ,KAAK,gBAAgB;AAC7B,eAAS;AACT,oBAAc;AACd,aAAO;AAAA,IACT;AAEA,QAAI,mBAAmB,IAAI,GAAG;AAC5B,oBAAc;AACd,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA,YAAQ,MAAM,iCAAiC;AAC/C,WAAO,qBAAqB,IAAI;AAAA,EAClC;AAIA,WAAS,qBAAqB,MAAM;AAClC,QAAI,SAAS,MAAM,OAAO,SAAS,UAAU,mBAAmB,IAAI,GAAG;AACrE,cAAQ,KAAK,iCAAiC;AAC9C,aAAO,0BAA0B,IAAI;AAAA,IACvC;AAGA,YAAQ,QAAQ,IAAI;AACpB,WAAO;AAAA,EACT;AAIA,WAAS,YAAY,MAAM;AAEzB,QAAI,SAAS,MAAM,aAAa;AAC9B,aAAO,OAAO,IAAI;AAAA,IACpB;AAEA;AAAA,MACE;AAAA,MACA;AAAA,MACA,wBACG,SAAS,MAAM,YAAY,SAAS,MAAM,QACvC,8DACA;AAAA,IACR;AAAA,EACF;AAIA,WAAS,OAAO,MAAM;AACpB,OAAO,SAAS,MAAM,aAAa,cAAc;AACjD,YAAQ,MAAM,aAAa;AAC3B,YAAQ,QAAQ,IAAI;AACpB,YAAQ,KAAK,aAAa;AAC1B,YAAQ,KAAK,OAAO;AACpB,WAAOD;AAAA,EACT;AAIA,WAAS,qBAAqB,MAAM;AAClC,QAAI,mBAAmB,IAAI,GAAG;AAC5B,UAAI,WAAW;AACb,gBAAQ,MAAM,MAAM,UAAU;AAC9B,gBAAQ,QAAQ,IAAI;AACpB,gBAAQ,KAAK,MAAM,UAAU;AAC7B,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA,MAAM;AAAA,UACN,UAAU;AAAA,QACZ;AAAA,MACF;AAEA,aAAO,QAAQ;AAAA,QACb;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA,MAAM;AAAA,UACN,UAAU;AAAA,QACZ;AAAA,QACA;AAAA,MACF,EAAE,IAAI;AAAA,IACR;AAEA,QAAI,cAAc,IAAI,KAAK,kBAAkB,IAAI,GAAG;AAClD,cAAQ,MAAM,cAAc;AAC5B,aAAO,6BAA6B,IAAI;AAAA,IAC1C;AAEA,WAAO,YAAY,IAAI;AAAA,EACzB;AAIA,WAAS,6BAA6B,MAAM;AAC1C,QACE,mBAAmB,IAAI,KACvB,EAAE,cAAc,IAAI,KAAK,kBAAkB,IAAI,IAC/C;AACA,cAAQ,KAAK,cAAc;AAC3B,aAAO,qBAAqB,IAAI;AAAA,IAClC;AAEA,YAAQ,QAAQ,IAAI;AACpB,WAAO;AAAA,EACT;AAGA,WAAS,WAAW;AAClB,UAAM,IAAI;AAAA,MACR;AAAA,MACAC,MAAK,IAAI;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAQA,WAAS,MAAM,MAAM,IAAI,QAAQ;AAC/B,UAAM,IAAI;AAAA,MACR,iBACG,SAAS,MAAM,MACZ,gBACA,iBACC,SAAS,MAAM,cAAc,UAAU,OAAO,aAAa,IAAI,KAChE,QACA,kBAAkB,IAAI,IACtB,OACJ,MACA,KACA,gBACA;AAAA,MACFA,MAAK,IAAI;AAAA,MACT,6CACG,SAAS,MAAM,MAAM,QAAQ;AAAA,IAClC;AAAA,EACF;AACF;AAGA,SAAS,oBAAoB,SAASD,KAAI,KAAK;AAC7C,QAAMC,QAAO;AAEb,SAAOC;AAGP,WAASA,OAAM,MAAM;AACnB,OAAO,mBAAmB,IAAI,GAAG,cAAc;AAC/C,YAAQ,MAAM,MAAM,UAAU;AAC9B,YAAQ,QAAQ,IAAI;AACpB,YAAQ,KAAK,MAAM,UAAU;AAC7B,WAAO;AAAA,EACT;AAGA,WAAS,UAAU,MAAM;AACvB,WAAOD,MAAK,OAAO,KAAKA,MAAK,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,IAAID,IAAG,IAAI;AAAA,EAChE;AACF;AAMA,SAAS,kBAAkB,MAAM;AAC/B,SACE,OACA,KACG,SAAS,UAAU,sBAAsB,EACzC,YAAY,EACZ,SAAS,GAAG,GAAG;AAEtB;;;AC/1BO,SAAS,QAAQ,OAAO,cAAc,WAAW;AACtD,SAAO,EAAC,UAAU,gBAAe;AAGjC,WAAS,gBAAgB,SAASI,KAAI,KAAK;AACzC,WAAO,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;;;ACnCO,SAAS,QAAQ,OAAO,cAAc,WAAW;AACtD,SAAO,EAAC,UAAU,iBAAiB,UAAU,KAAI;AAGjD,WAAS,gBAAgB,SAASC,KAAI,KAAK;AACzC,UAAMC,QAAO;AAEb,WAAOC;AAGP,aAASA,OAAM,MAAM;AACnB,SAAO,SAAS,MAAM,UAAU,cAAc;AAC9C,aAAO,WAAW;AAAA,QAChBD;AAAA,QACA;AAAA,QACA,aAAa,SAAS,OAAO,MAAM,UAAU;AAAA,QAC7C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,EAAE,IAAI;AAAA,IACR;AAGA,aAAS,MAAM,MAAM;AAEnB,aAAO,SAAS,MAAM,WAClBC,OAAM,IAAI,IACV,SAAS,MAAM,OAAO,mBAAmB,IAAI,IAC7CF,IAAG,IAAI,IACP,IAAI,IAAI;AAAA,IACd;AAAA,EACF;AACF;;;AC3DO,SAAS,OAAOG,WAAU,CAAC,GAAG;AACnC,QAAM,QAAQA,SAAQ;AAEtB,MAAI;AAEJ,MAAI,OAAO;AACT,QAAI,CAAC,MAAM,SAAS,CAAC,MAAM,mBAAmB;AAC5C,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,mBAAe,OAAO;AAAA,MACpB,EAAC,aAAa,MAAM,YAAY,SAAQ;AAAA,MACxCA,SAAQ;AAAA,MACR,EAAC,WAAW,KAAI;AAAA,IAClB;AAAA,EACF,WAAWA,SAAQ,gBAAgBA,SAAQ,WAAW;AACpD,UAAM,IAAI,MAAM,2DAA2D;AAAA,EAC7E;AAEA,SAAO;AAAA,IACL,MAAM,EAAC,CAAC,MAAM,QAAQ,GAAG,QAAQ,OAAO,cAAcA,SAAQ,SAAS,EAAC;AAAA,IACxE,MAAM,EAAC,CAAC,MAAM,QAAQ,GAAG,QAAQ,OAAO,cAAcA,SAAQ,SAAS,EAAC;AAAA,EAC1E;AACF;;;AC3CO,IAAM,QAAQ;AAAA,EACnB,SAAS,EAAC,MAAM,CAAC,YAAY,gBAAgB,YAAY,UAAU,EAAC;AACtE;;;ACoBA,IAAM,qBAAqB,EAAC,UAAU,mBAAmB,SAAS,KAAI;AAEtE,IAAM,oBAAoB,oBAAI,IAAI;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAMM,SAAS,SAASC,UAAS;AAChC,QAAM,wBAAwB,EAAC,UAAU,sBAAsB,UAAU,KAAI;AAE7E,MAAI,CAACA,YAAW,CAACA,SAAQ,SAAS,CAACA,SAAQ,MAAM,OAAO;AACtD,UAAM,IAAI,MAAM,2DAA2D;AAAA,EAC7E;AAEA,QAAM,QAAQA,SAAQ;AACtB,QAAM,eAAe,OAAO;AAAA,IAC1B,EAAC,aAAa,MAAM,YAAY,SAAQ;AAAA,IACxCA,SAAQ;AAAA,EACV;AAEA,SAAO;AAAA,IACL,MAAM;AAAA,MACJ,CAAC,MAAM,UAAU,GAAG;AAAA,MACpB,CAAC,MAAM,UAAU,GAAG;AAAA,IACtB;AAAA,EACF;AAGA,WAAS,qBAAqB,SAASC,KAAI,KAAK;AAC9C,UAAMC,QAAO;AAEb,UAAM;AAAA;AAAA,MAEJA,MAAK,OAAO;AAAA,OAEXA,MAAK,OAAO,0BAA0B,CAAC;AAAA;AAC1C,UAAM,aAAa,KAAK,OAAO,SAAS;AACxC,QAAIC,SAAQ;AAEZ,QAAI;AAEJ,WAAOD,MAAK,YAAY,MAAME;AAG9B,aAASA,OAAM,MAAM;AACnB;AAAA,QACE,SAAS,MAAM,cAAc,SAAS,MAAM;AAAA,QAC5C;AAAA,MACF;AAGA,UAAIF,MAAK,IAAI,EAAE,SAAS;AAAG,eAAO,IAAI,IAAI;AAC1C,eAAS,SAAS,MAAM,aAAa,WAAW;AAChD,cAAQ,MAAM,UAAU;AACxB,cAAQ,MAAM,cAAc;AAC5B,aAAO,QAAQ,IAAI;AAAA,IACrB;AAGA,aAAS,QAAQ,MAAM;AACrB,UAAI,SAAS,OAAO,WAAWC,QAAO,GAAG;AACvC,gBAAQ,QAAQ,IAAI;AACpB,eAAOA,WAAU,OAAO,SAAS,QAAQ;AAAA,MAC3C;AAEA,aAAO,IAAI,IAAI;AAAA,IACjB;AAGA,aAAS,MAAM,MAAM;AACnB,UAAI,kBAAkB,IAAI,GAAG;AAC3B,gBAAQ,QAAQ,IAAI;AACpB,eAAO;AAAA,MACT;AAEA,aAAO,IAAI,IAAI;AAAA,IACjB;AAGA,aAAS,KAAK,MAAM;AAClB,UAAI,SAAS,MAAM,KAAK;AACtB,eAAO,YAAY,IAAI;AAAA,MACzB;AAEA,UAAI,mBAAmB,IAAI,GAAG;AAC5B,eAAO,QAAQ,MAAM,oBAAoB,aAAa,KAAK,EAAE,IAAI;AAAA,MACnE;AAEA,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAGA,aAAS,MAAM,MAAM;AACnB,cAAQ,KAAK,cAAc;AAC3B,aAAO,UAAU,IAAI;AAAA,IACvB;AAGA,aAAS,UAAU,MAAM;AACvB,UAAI,mBAAmB,IAAI,GAAG;AAC5B,gBAAQ,MAAM,MAAM,UAAU;AAC9B,gBAAQ,QAAQ,IAAI;AACpB,gBAAQ,KAAK,MAAM,UAAU;AAC7B,eAAO;AAAA,MACT;AAEA,UAAI,SAAS,MAAM,KAAK;AACtB,eAAO,MAAM,IAAI;AAAA,MACnB;AAEA,cAAQ,MAAM,cAAc;AAC5B,aAAO,KAAK,IAAI;AAAA,IAClB;AAGA,aAAS,YAAY,MAAM;AACzB,cAAQ,KAAK,cAAc;AAC3B,aAAO,MAAM,IAAI;AAAA,IACnB;AAGA,aAAS,MAAM,MAAM;AACnB,UAAIA,SAAQ;AACZ,YAAM,SAAS,cAAcD,MAAK,OAAO,MAAM,UAAU,GAAG;AAAA,QAC1D;AAAA,QACA;AAAA,QACA,QACE,wBAAwB,SAAS,IAC7B,SAAS,wBAAwB,KAAK,GAAG,IAAI,OAC7C;AAAA,MACR,CAAC;AAED,UAAI,SAAS,MAAM,OAAO,OAAO,SAAS;AACxC,eAAO,UAAU,IAAI;AAAA,MACvB;AAEA,UAAI,OAAO,OAAO;AAChB,cAAM,IAAI;AAAA,UACR,gDAAgD,OAAO,OAAO,KAAK;AAAA,UACnE;AAAA;AAAA,YAEE,MAAM,OAAO,MAAM,IAAI;AAAA;AAAA,YAEvB,QAAQ,OAAO,MAAM,IAAI,SAAS;AAAA;AAAA,YAElC,QAAQ,OAAO,MAAM;AAAA,UACvB;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,SAAO,OAAO,QAAQ,iCAAiC;AAGvD,UAAI,wBAAwB,SAAS,GAAG;AACtC,eAAO,OAAO,KAAK,MAAM;AAAA,MAC3B;AAEA,aAAO,EAAEC,SAAQ,OAAO,OAAO,KAAK,QAAQ;AAC1C,cAAM,OAAO,OAAO,OAAO,KAAKA,MAAK;AAErC,YAAI,CAAC,kBAAkB,IAAI,KAAK,IAAI,GAAG;AACrC,gBAAM,IAAI;AAAA,YACR,iBACE,KAAK,OACL;AAAA,YACF,mBAAmB,IAAI;AAAA,YACvB;AAAA,UACF;AAAA,QACF;AAKA,YAAI,KAAK,SAAS,uBAAuB,CAACD,MAAK,WAAW;AACxD,cAAIC,SAAQ;AAEZ,iBAAO,EAAEA,SAAQ,KAAK,WAAW,QAAQ;AACvC,oCAAwB,KAAK,KAAK,WAAWA,MAAK,EAAE,MAAM,IAAI;AAAA,UAChE;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL,QAAQ,KAAK,UAAU;AAAA,QACvBH,SAAQ,YAAY,EAAC,QAAQ,OAAO,OAAM,IAAI;AAAA,MAChD;AAEA,aAAOC,IAAG,IAAI;AAAA,IAChB;AAAA,EACF;AACF;AAGA,SAAS,kBAAkB,SAASA,KAAI,KAAK;AAC3C,SAAOG;AAGP,WAASA,OAAM,MAAM;AACnB,YAAQ,KAAK,cAAc;AAC3B,YAAQ,MAAM,MAAM,eAAe;AACnC,YAAQ,QAAQ,IAAI;AACpB,YAAQ,KAAK,MAAM,eAAe;AAClC,WAAO,QAAQ,QAAQ,WAAWH,KAAI,GAAG;AAAA,EAC3C;AACF;;;Ad3NO,SAAS,MAAMI,UAAS;AAC7B,QAAM,WAAW,OAAO;AAAA,IACtB;AAAA,MACE,OAAO,OAAO,WAAO,iBAAAC,SAAS,CAAC;AAAA,MAC/B,cAAc,EAAC,aAAa,MAAM,YAAY,SAAQ;AAAA,MACtD,WAAW;AAAA,IACb;AAAA,IACAD;AAAA,EACF;AAEA,SAAO,kBAAkB;AAAA,IACvB,SAAS,QAAQ;AAAA,IACjB,cAAc,QAAQ;AAAA,IACtB,OAAO,QAAQ;AAAA,IACf;AAAA,EACF,CAAC;AACH;;;AeZO,IAAM,4BAA4B;AAAA,EACvC,OAAO;AAAA,IACL,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,EACrB;AAAA,EACA,MAAM;AAAA,IACJ,mBAAmB;AAAA,IACnB,wBAAwB;AAAA,IACxB,mBAAmB;AAAA,IACnB,wBAAwB;AAAA,EAC1B;AACF;AAOO,IAAM,0BAA0B;AAAA,EACrC,UAAU;AAAA,IACR,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,EACrB;AAAA,EACA,QAAQ;AAAA,IACN,EAAC,WAAW,KAAK,aAAa,CAAC,UAAU,EAAC;AAAA,IAC1C,EAAC,SAAS,MAAM,WAAW,IAAG;AAAA,EAChC;AACF;AAMA,SAAS,uBAAuB,OAAO;AACrC,OAAK,MAAM,EAAC,MAAM,qBAAqB,OAAO,GAAE,GAAG,KAAK;AACxD,OAAK,OAAO;AACd;AAMA,SAAS,uBAAuB,OAAO;AACrC,OAAK,MAAM,EAAC,MAAM,qBAAqB,OAAO,GAAE,GAAG,KAAK;AACxD,OAAK,OAAO;AACd;AAMA,SAAS,kBAAkB,OAAO;AAChC,QAAM,QAAQ,KAAK,OAAO;AAG1B,QAAM,SAAS,MAAM;AACrB,QAAM;AAAA;AAAA,IACJ,KAAK,KAAK,KAAK;AAAA;AAEjB,OAAK,QAAQ;AAEb,MAAI,QAAQ;AACV,SAAK,OAAO,EAAC,OAAM;AAAA,EACrB;AACF;AAMA,SAAS,sBAAsB,OAAO;AACpC,OAAK,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK;AACvC,OAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK;AACxC;AAMA,SAAS,oBAAoB,MAAM;AACjC,QAAM,QAAQ,KAAK,SAAS;AAC5B,SAAO,MAAM,QAAQ;AACvB;;;ACnGO,IAAM,0BAA0B;AAAA,EACrvC,GAAG;AAAA,EACH,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACP;;;AC3BO,SAAS,UAAU,WAAW;AACnC,QAAM,OACJ,OAAO,cAAc,WAAW,UAAU,WAAW,CAAC,IAAI;AAE5D,SAAO,QAAQ,MAAM,QAAQ;AAC/B;;;ACLO,SAAS,cAAc,WAAW;AACvC,QAAM,OACJ,OAAO,cAAc,WAAW,UAAU,WAAW,CAAC,IAAI;AAE5D,SACG,QAAQ,MAAc,QAAQ,OAC9B,QAAQ,MAAc,QAAQ,MAC9B,QAAQ,MAAc,QAAQ;AAEnC;;;ACTO,SAAS,eAAe,WAAW;AACxC,QAAM,OACJ,OAAO,cAAc,WAAW,UAAU,WAAW,CAAC,IAAI;AAE5D,SACG,QAAQ,MAAM,QAAQ,OACtB,QAAQ,MAAM,QAAQ;AAE3B;;;ACLO,SAAS,iBAAiB,WAAW;AAC1C,SAAO,eAAe,SAAS,KAAK,UAAU,SAAS;AACzD;;;ACAA,IAAM,eAAe,OAAO;AAG5B,IAAM,WAAW;AAAA,EACf;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AACF;AAQO,SAAS,cAAc,OAAOE,WAAU,CAAC,GAAG;AACjD,QAAM,aACJ,OAAOA,SAAQ,eAAe,WAC1BA,SAAQ,WAAW,WAAW,CAAC,IAC/BA,SAAQ;AAEd,QAAM,SAAS,CAAC;AAChB,MAAIC,SAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,QAAQ;AAEZ,MAAIC;AAEJ,MAAI;AAEJ,MAAIF,SAAQ,UAAU;AACpB,QAAI,WAAWA,SAAQ,YAAY,YAAYA,SAAQ,UAAU;AAE/D,eAASA,SAAQ,SAAS;AAE1B,MAAAE,SAAQF,SAAQ,SAAS;AAAA,IAC3B,OAAO;AACL,MAAAE,SAAQF,SAAQ;AAAA,IAClB;AAAA,EACF;AAEA,MAAI,QAAQE,SAAQA,OAAM,OAAO,MAAM;AACvC,MAAI,UAAUA,SAAQA,OAAM,SAAS,MAAM;AAG3C,MAAI,WAAW,IAAI;AAEnB,MAAI;AAGJ,EAAAD;AAEA,SAAO,EAAEA,UAAS,MAAM,QAAQ;AAE9B,QAAI,cAAc,IAAe;AAC/B,gBAAU,SAAS,OAAO,KAAK,IAAI,MAAM;AAAA,IAC3C;AAEA,gBAAY,MAAM,WAAWA,MAAK;AAElC,QAAI,cAAc,IAAc;AAC9B,YAAM,YAAY,MAAM,WAAWA,SAAQ,CAAC;AAG5C,UACE,cAAc,KACd,cAAc,MACd,cAAc,MACd,cAAc,MACd,cAAc,MACd,cAAc,MACd,OAAO,MAAM,SAAS,KACrB,cAAc,cAAc,YAC7B;AAIA,iBAAS,aAAa,SAAS;AAC/B;AACA;AAAA,MACF;AAEA,YAAME,SAAQF,SAAQ;AACtB,UAAI,QAAQE;AACZ,UAAI,MAAMA;AAEV,UAAI;AAEJ,UAAI,cAAc,IAAc;AAE9B,cAAM,EAAE;AAGR,cAAMC,aAAY,MAAM,WAAW,GAAG;AAEtC,YAAIA,eAAc,MAAgBA,eAAc,KAAe;AAE7D,iBAAO;AACP,gBAAM,EAAE;AAAA,QACV,OAAO;AAEL,iBAAO;AAAA,QACT;AAAA,MACF,OAAO;AAEL,eAAO;AAAA,MACT;AAEA,UAAI,+BAA+B;AACnC,UAAI,qBAAqB;AACzB,UAAI,aAAa;AAIjB,YAAM,OACJ,SAAS,UACL,mBACA,SAAS,YACT,YACA;AAEN;AAEA,aAAO,EAAE,OAAO,MAAM,QAAQ;AAC5B,cAAMA,aAAY,MAAM,WAAW,GAAG;AAEtC,YAAI,CAAC,KAAKA,UAAS,GAAG;AACpB;AAAA,QACF;AAEA,sBAAc,aAAaA,UAAS;AAKpC,YAAI,SAAS,WAAW,wBAAwB,SAAS,UAAU,GAAG;AACpE,yCAA+B;AAE/B,+BAAqB,8BAA8B,UAAU;AAAA,QAC/D;AAAA,MACF;AAEA,UAAI,aAAa,MAAM,WAAW,GAAG,MAAM;AAE3C,UAAI,YAAY;AACd;AAEA,cAAM,iBACJ,SAAS,UAAU,8BAA8B,UAAU,IAAI;AAEjE,YAAI,gBAAgB;AAClB,yCAA+B;AAC/B,+BAAqB;AAAA,QACvB;AAAA,MACF;AAEA,UAAI,OAAO,IAAI,MAAMD;AACrB,UAAI,YAAY;AAEhB,UAAI,CAAC,cAAcH,SAAQ,kBAAkB,OAAO;AAAA,MAEpD,WAAW,CAAC,YAAY;AAGtB,YAAI,SAAS,SAAS;AACpB,kBAAQ,GAAyB,IAAI;AAAA,QACvC;AAAA,MACF,WAAW,SAAS,SAAS;AAG3B,YAAI,cAAc,CAAC,oBAAoB;AACrC,kBAAQ,GAAyB,CAAC;AAAA,QACpC,OAAO;AAGL,cAAI,iCAAiC,YAAY;AAC/C,kBAAM,QAAQ,6BAA6B;AAC3C,mBAAO,IAAI,MAAM;AACjB,yBAAa;AAAA,UACf;AAGA,cAAI,CAAC,YAAY;AACf,kBAAM,SAAS,+BACX,IACA;AAEJ,gBAAIA,SAAQ,WAAW;AACrB,oBAAMI,aAAY,MAAM,WAAW,GAAG;AAEtC,kBAAIA,eAAc,IAAc;AAC9B,wBAAQ,QAAQ,IAAI;AACpB,qCAAqB;AAAA,cACvB,WAAW,iBAAiBA,UAAS,GAAG;AACtC,qCAAqB;AAAA,cACvB,OAAO;AACL,wBAAQ,QAAQ,IAAI;AAAA,cACtB;AAAA,YACF,OAAO;AACL,sBAAQ,QAAQ,IAAI;AAAA,YACtB;AAAA,UACF;AAAA,QACF;AAEA,oBAAY;AAAA,MACd,OAAO;AACL,YAAI,CAAC,YAAY;AAGf,kBAAQ,GAAkC,IAAI;AAAA,QAChD;AAIA,YAAI,gBAAgB,OAAO;AAAA,UACzB;AAAA,UACA,SAAS,gBAAgB,KAAK;AAAA,QAChC;AAIA,YAAI,WAAW,aAAa,GAAG;AAC7B,kBAAQ,GAA8B,IAAI;AAC1C,sBAAY;AAAA,YAAa;AAAA;AAAA,UAAe;AAAA,QAC1C,WAAW,iBAAiB,2BAA2B;AAGrD,kBAAQ,GAA8B,IAAI;AAC1C,sBAAY,0BAA0B,aAAa;AAAA,QACrD,OAAO;AAEL,cAAI,SAAS;AAGb,cAAI,WAAW,aAAa,GAAG;AAC7B,oBAAQ,GAA8B,IAAI;AAAA,UAC5C;AAGA,cAAI,gBAAgB,OAAQ;AAC1B,6BAAiB;AACjB,sBAAU,aAAc,mBAAmB,KAAK,QAAU,KAAM;AAChE,4BAAgB,QAAU,gBAAgB;AAAA,UAC5C;AAEA,sBAAY,SAAS,aAAa,aAAa;AAAA,QACjD;AAAA,MACF;AAIA,UAAI,WAAW;AACb,cAAM;AAEN,mBAAW,IAAI;AACf,QAAAH,SAAQ,MAAM;AACd,kBAAU,MAAME,SAAQ;AACxB,eAAO,KAAK,SAAS;AACrB,cAAM,OAAO,IAAI;AACjB,aAAK;AAEL,YAAIH,SAAQ,WAAW;AACrB,UAAAA,SAAQ,UAAU;AAAA,YAChBA,SAAQ;AAAA,YACR;AAAA,YACA,EAAC,OAAO,UAAU,KAAK,KAAI;AAAA,YAC3B,MAAM,MAAMG,SAAQ,GAAG,GAAG;AAAA,UAC5B;AAAA,QACF;AAEA,mBAAW;AAAA,MACb,OAAO;AAKL,qBAAa,MAAM,MAAMA,SAAQ,GAAG,GAAG;AACvC,iBAAS;AACT,kBAAU,WAAW;AACrB,QAAAF,SAAQ,MAAM;AAAA,MAChB;AAAA,IACF,OAAO;AAEL,UAAI,cAAc,IAAe;AAC/B;AACA;AACA,iBAAS;AAAA,MACX;AAEA,UAAI,OAAO,MAAM,SAAS,GAAG;AAC3B,cAAM;AAAA,MACR,OAAO;AACL,iBAAS,aAAa,SAAS;AAC/B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,SAAO,OAAO,KAAK,EAAE;AAGrB,WAAS,MAAM;AACb,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,QAAQA,WAAUC,SAAQA,OAAM,SAAS,MAAM;AAAA,IACjD;AAAA,EACF;AAQA,WAAS,QAAQ,MAAM,QAAQ;AAE7B,QAAIG;AAEJ,QAAIL,SAAQ,SAAS;AACnB,MAAAK,YAAW,IAAI;AACf,MAAAA,UAAS,UAAU;AACnB,MAAAA,UAAS,UAAU;AAEnB,MAAAL,SAAQ,QAAQ;AAAA,QACdA,SAAQ;AAAA,QACR,SAAS,IAAI;AAAA,QACbK;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAOA,WAAS,QAAQ;AACf,QAAI,OAAO;AACT,aAAO,KAAK,KAAK;AAEjB,UAAIL,SAAQ,MAAM;AAChB,QAAAA,SAAQ,KAAK,KAAKA,SAAQ,aAAa,OAAO;AAAA,UAC5C,OAAO;AAAA,UACP,KAAK,IAAI;AAAA,QACX,CAAC;AAAA,MACH;AAEA,cAAQ;AAAA,IACV;AAAA,EACF;AACF;AAQA,SAAS,WAAW,MAAM;AACxB,SAAQ,QAAQ,SAAU,QAAQ,SAAW,OAAO;AACtD;AAQA,SAAS,WAAW,MAAM;AACxB,SACG,QAAQ,KAAU,QAAQ,KAC3B,SAAS,MACR,QAAQ,MAAU,QAAQ,MAC1B,QAAQ,OAAU,QAAQ,OAC1B,QAAQ,SAAU,QAAQ,UAC1B,OAAO,WAAY,UACnB,OAAO,WAAY;AAExB;;;ACjXO,SAAS,kBAAkB,OAAO;AAEvC,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,WAAO;AAAA,EACT;AAGA,MAAI,cAAc,SAAS,UAAU,OAAO;AAC1C,WAAOM,UAAS,MAAM,QAAQ;AAAA,EAChC;AAGA,MAAI,WAAW,SAAS,SAAS,OAAO;AACtC,WAAOA,UAAS,KAAK;AAAA,EACvB;AAGA,MAAI,UAAU,SAAS,YAAY,OAAO;AACxC,WAAO,MAAM,KAAK;AAAA,EACpB;AAGA,SAAO;AACT;AAMA,SAAS,MAAMC,QAAO;AACpB,SAAO,MAAMA,UAASA,OAAM,IAAI,IAAI,MAAM,MAAMA,UAASA,OAAM,MAAM;AACvE;AAMA,SAASD,UAAS,KAAK;AACrB,SAAO,MAAM,OAAO,IAAI,KAAK,IAAI,MAAM,MAAM,OAAO,IAAI,GAAG;AAC7D;AAMA,SAAS,MAAM,OAAO;AACpB,SAAO,SAAS,OAAO,UAAU,WAAW,QAAQ;AACtD;;;ACJO,SAAS,qBAAqB;AACnC,SAAO;AAAA,IACL,gBAAgB,CAAC,mBAAmB;AAAA,IACpC,OAAO;AAAA,MACL,eAAe;AAAA,MACf,4BAA4B;AAAA,MAC5B,wBAAwB;AAAA,MACxB,kCAAkC;AAAA,MAClC,oCAAoC;AAAA,MACpC,uCAAuC;AAAA,MACvC,gCAAgC;AAAA,MAEhC,eAAe;AAAA,MACf,4BAA4B;AAAA,MAC5B,wBAAwB;AAAA,MACxB,kCAAkC;AAAA,MAClC,oCAAoC;AAAA,MACpC,uCAAuC;AAAA,MACvC,gCAAgC;AAAA,IAClC;AAAA,IACA,MAAM;AAAA,MACJ,4BAA4B;AAAA,MAC5B,0BAA0B;AAAA,MAC1B,yBAAyB;AAAA,MACzB,wBAAwB;AAAA,MACxB,kCAAkC;AAAA,MAClC,uCAAuC;AAAA,MACvC,mCAAmC;AAAA,MACnC,iCAAiC;AAAA,MACjC,oCAAoC;AAAA,MACpC,yCAAyC;AAAA,MACzC,uCACE;AAAA,MACF,4CAA4C;AAAA,MAC5C,gCAAgC;AAAA,MAChC,eAAe;AAAA,MAEf,4BAA4B;AAAA,MAC5B,0BAA0B;AAAA,MAC1B,yBAAyB;AAAA,MACzB,wBAAwB;AAAA,MACxB,kCAAkC;AAAA,MAClC,uCAAuC;AAAA,MACvC,mCAAmC;AAAA,MACnC,iCAAiC;AAAA,MACjC,oCAAoC;AAAA,MACpC,yCAAyC;AAAA,MACzC,uCACE;AAAA,MACF,4CAA4C;AAAA,MAC5C,gCAAgC;AAAA,MAChC,eAAe;AAAA,IACjB;AAAA,EACF;AAMA,WAAS,SAAS;AAChB,SAAK,OAAO;AAAA,EACd;AAMA,WAAS,KAAK,OAAO;AACnB,SAAK,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK;AACvC,SAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK;AAAA,EACxC;AAMA,WAAS,eAAe,OAAO;AAE7B,UAAM,MAAM;AAAA,MACV,MAAM;AAAA,MACN,YAAY,CAAC;AAAA,MACb,OAAO;AAAA,MACP,aAAa;AAAA,MACb,OAAO,MAAM;AAAA,MACb,KAAK,MAAM;AAAA,IACb;AACA,QAAI,CAAC,KAAK,QAAQ,gBAAgB;AAAG,WAAK,QAAQ,kBAAkB,CAAC,CAAC;AACtE,SAAK,QAAQ,aAAa,GAAG;AAC7B,SAAK,OAAO;AAAA,EACd;AAMA,WAAS,4BAA4B,OAAO;AAC1C,UAAM;AAAA;AAAA,MAAmC,KAAK,QAAQ,gBAAgB;AAAA;AAEtE,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI;AAAA,QACR;AAAA,QACA,EAAC,OAAO,MAAM,OAAO,KAAK,MAAM,IAAG;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAMA,WAAS,2BAA2B,OAAO;AACzC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AAExD,QAAI,IAAI,OAAO;AACb,YAAM,IAAI;AAAA,QACR;AAAA,QACA,EAAC,OAAO,MAAM,OAAO,KAAK,MAAM,IAAG;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAMA,WAAS,gCAAgC,OAAO;AAC9C,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AAExD,QAAI,IAAI,OAAO;AACb,YAAM,IAAI;AAAA,QACR;AAAA,QACA,EAAC,OAAO,MAAM,OAAO,KAAK,MAAM,IAAG;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAMA,WAAS,6BAA6B;AACpC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,QAAI,QAAQ;AAAA,EACd;AAMA,WAAS,yBAAyB,OAAO;AACvC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,QAAI,OAAO,KAAK,eAAe,KAAK;AAAA,EACtC;AAMA,WAAS,wBAAwB,OAAO;AACtC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,QAAI,QAAQ,MAAM,KAAK,eAAe,KAAK;AAAA,EAC7C;AAMA,WAAS,uBAAuB,OAAO;AACrC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,QAAI,QAAQ,MAAM,KAAK,eAAe,KAAK;AAAA,EAC7C;AAMA,WAAS,wBAAwB,OAAO;AACtC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,+BAA2B,KAAK,MAAM,KAAK;AAC3C,QAAI,WAAW,KAAK,EAAC,MAAM,mBAAmB,MAAM,IAAI,OAAO,KAAI,CAAC;AAAA,EACtE;AAMA,WAAS,kCAAkC,OAAO;AAChD,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,+BAA2B,KAAK,MAAM,KAAK;AAC3C,QAAI,WAAW,KAAK,EAAC,MAAM,6BAA6B,OAAO,GAAE,CAAC;AAClE,SAAK,OAAO;AAAA,EACd;AAMA,WAAS,iCAAiC,OAAO;AAC/C,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,UAAM;AAAA;AAAA,MACJ,IAAI,WAAW,IAAI,WAAW,SAAS,CAAC;AAAA;AAI1C,UAAM,SAAS,MAAM;AAErB,SAAK,QAAQ,KAAK,OAAO;AAEzB,QAAI,QAAQ;AACV,WAAK,OAAO,EAAC,OAAM;AAAA,IACrB;AAAA,EACF;AAMA,WAAS,kCAAkC,OAAO;AAChD,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,UAAM;AAAA;AAAA,MACJ,IAAI,WAAW,IAAI,WAAW,SAAS,CAAC;AAAA;AAE1C,SAAK,OAAO,KAAK,eAAe,KAAK;AAAA,EACvC;AAMA,WAAS,gCAAgC,OAAO;AAC9C,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,UAAM;AAAA;AAAA,MACJ,IAAI,WAAW,IAAI,WAAW,SAAS,CAAC;AAAA;AAE1C,SAAK,QAAQ,MAAM,KAAK,eAAe,KAAK;AAAA,EAC9C;AAMA,WAAS,qCAAqC;AAC5C,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,QAAI,WAAW,IAAI,WAAW,SAAS,CAAC,EAAE,QAAQ;AAAA,MAChD,KAAK,OAAO;AAAA,MACZ,EAAC,eAAe,MAAK;AAAA,IACvB;AAAA,EACF;AAMA,WAAS,sCAAsC,OAAO;AACpD,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,UAAM;AAAA;AAAA,MACJ,IAAI,WAAW,IAAI,WAAW,SAAS,CAAC;AAAA;AAG1C,UAAM,OAAO,EAAC,MAAM,kCAAkC,OAAO,KAAK,OAAO,EAAC;AAG1E,UAAM,SAAS,MAAM;AAErB,QAAI,QAAQ;AACV,WAAK,OAAO,EAAC,OAAM;AAAA,IACrB;AAEA,SAAK,QAAQ;AAAA,EACf;AAMA,WAAS,iCAAiC;AACxC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AAExD,QAAI,cAAc;AAAA,EACpB;AAMA,WAAS,cAAc,OAAO;AAC5B,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,UAAM;AAAA;AAAA,MAAmC,KAAK,QAAQ,gBAAgB;AAAA;AACtE,UAAM,OAAO,MAAM,MAAM,SAAS,CAAC;AAEnC,QAAI,IAAI,SAAS,KAAK,SAAS,IAAI,MAAM;AACvC,YAAM,IAAI;AAAA,QACR,6BACE,wBAAwB,GAAG,IAC3B,gDACA,wBAAwB,IAAI,IAC5B,QACA,kBAAkB,IAAI,IACtB;AAAA,QACF,EAAC,OAAO,MAAM,OAAO,KAAK,MAAM,IAAG;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAGA,SAAK,OAAO;AAEZ,QAAI,IAAI,OAAO;AACb,YAAM,IAAI;AAAA,IACZ,OAAO;AACL,WAAK;AAAA,QACH;AAAA,UACE,MACE,MAAM,SAAS,kBACX,sBACA;AAAA,UACN,MAAM,IAAI,QAAQ;AAAA,UAClB,YAAY,IAAI;AAAA,UAChB,UAAU,CAAC;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,QAAI,IAAI,eAAe,IAAI,OAAO;AAChC,WAAK,KAAK,OAAO,gBAAgB;AAAA,IACnC,OAAO;AACL,YAAM,KAAK,GAAG;AAAA,IAChB;AAAA,EACF;AAMA,WAAS,kBAAkB,SAAS,MAAM;AACxC,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,UAAM,QAAQ,UAAU,yBAAyB,QAAQ,OAAO,MAAM;AACtE,UAAME,YAAW,UACb,EAAC,OAAO,QAAQ,OAAO,KAAK,QAAQ,IAAG,IACvC;AAEJ,UAAM,IAAI;AAAA,MACR,iCACE,wBAAwB,GAAG,IAC3B,QACA,kBAAkB,EAAC,OAAO,KAAK,OAAO,KAAK,KAAK,IAAG,CAAC,IACpD,MACA;AAAA,MACFA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAMA,WAAS,iBAAiB,GAAG,GAAG;AAC9B,UAAM;AAAA;AAAA,MAA0B,KAAK,QAAQ,WAAW;AAAA;AACxD,UAAM,IAAI;AAAA,MACR,+BACE,wBAAwB,GAAG,IAC3B,gCACA,EAAE,OACF,QACA,kBAAkB,EAAE,GAAG,IACvB,kDACA,EAAE,OACF,QACA,kBAAkB,EAAE,KAAK,IACzB;AAAA,MACF,EAAC,OAAO,EAAE,OAAO,KAAK,EAAE,IAAG;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AASA,WAAS,wBAAwB,KAAK;AACpC,WAAO,OAAO,IAAI,QAAQ,MAAM,OAAO,IAAI,QAAQ,MAAM;AAAA,EAC3D;AACF;AAcO,SAAS,iBAAiBC,UAAS;AACxC,QAAM,WAAWA,YAAW,CAAC;AAC7B,QAAM,QAAQ,SAAS,SAAS;AAChC,QAAM,aAAa,SAAS,cAAc;AAC1C,QAAM,mBAAmB,SAAS,oBAAoB;AACtD,QAAM,aAAa,SAAS,cAAc,OAAO;AACjD,QAAM,cAAc,UAAU,MAAM,MAAM;AAE1C,MAAI,UAAU,OAAO,UAAU,KAAK;AAClC,UAAM,IAAI;AAAA,MACR,6CACE,QACA;AAAA,IACJ;AAAA,EACF;AAEA,aAAW,OAAO;AAElB,SAAO;AAAA,IACL,UAAU;AAAA,MACR,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,IACrB;AAAA,IACA,QAAQ;AAAA,MACN,EAAC,WAAW,KAAK,aAAa,CAAC,UAAU,EAAC;AAAA,MAC1C,EAAC,SAAS,MAAM,WAAW,IAAG;AAAA,IAChC;AAAA;AAAA,IAEA,QAAQ;AAAA;AAAA,IAER,cAAc;AAAA,EAChB;AAOA,WAAS,WAAW,MAAM,GAAG,SAAS,aAAa;AACjD,UAAM,UAAU,MAAM,WAAW;AACjC,UAAM,cACJ,KAAK,SAAS,CAAC,KAAK,YAAY,KAAK,SAAS,WAAW;AAC3D,UAAM,OAAO,QAAQ,MAAM,KAAK,IAAI;AACpC,QAAIC,SAAQ;AAEZ,UAAM,uBAAuB,CAAC;AAC9B,QAAI,QAAQ,QAAQ,KAAK,OAAO,KAAK,QAAQ,GAAG;AAGhD,QAAI,KAAK,cAAc,KAAK,WAAW,SAAS,GAAG;AACjD,UAAI,CAAC,KAAK,MAAM;AACd,cAAM,IAAI,MAAM,yCAAyC;AAAA,MAC3D;AAEA,aAAO,EAAEA,SAAQ,KAAK,WAAW,QAAQ;AACvC,cAAM,YAAY,KAAK,WAAWA,MAAK;AAEvC,YAAI;AAEJ,YAAI,UAAU,SAAS,6BAA6B;AAClD,mBAAS,OAAO,UAAU,SAAS,MAAM;AAAA,QAC3C,OAAO;AACL,cAAI,CAAC,UAAU,MAAM;AACnB,kBAAM,IAAI,MAAM,qCAAqC;AAAA,UACvD;AAEA,gBAAMC,SAAQ,UAAU;AACxB,gBAAM,OAAO,UAAU;AAEvB,cAAI,QAAQ;AAEZ,cAAIA,WAAU,UAAaA,WAAU,MAAM;AAAA,UAE3C,WAAW,OAAOA,WAAU,UAAU;AACpC,oBAAQ,OAAOA,OAAM,SAAS,MAAM;AAAA,UACtC,OAAO;AAEL,kBAAM,eACJ,cAAc,OAAOA,QAAO,KAAK,IAAI,OAAOA,QAAO,WAAW,IAC1D,cACA;AACN,oBACE,eACA,uBAAuBA,QAAO,EAAC,QAAQ,CAAC,YAAY,EAAC,CAAC,IACtD;AAAA,UACJ;AAEA,mBAAS,QAAQ,QAAQ,MAAM,MAAM;AAAA,QACvC;AAEA,6BAAqB,KAAK,MAAM;AAAA,MAClC;AAAA,IACF;AAEA,QAAI,2BAA2B;AAC/B,UAAM,sBAAsB,qBAAqB,KAAK,GAAG;AAEzD;AAAA;AAAA,MAEE,KAAK,SAAS;AAAA,OAEb,WAAW,KAAK,mBAAmB;AAAA,MAElC,QAAQ,QAAQ,EAAE,IAAI;AAAA;AAAA,MAGpB,oBAAoB;AAAA,OAEnB,cAAe,mBAAmB,IAAI,IAAK,KAC5C;AAAA,MACJ;AACA,iCAA2B;AAAA,IAC7B;AAEA,QAAI,0BAA0B;AAC5B,eAAS,QAAQ;AAAA,QACf,OAAO,YAAY,qBAAqB,KAAK,IAAI,GAAG,GAAG;AAAA,MACzD;AAAA,IACF,WAAW,qBAAqB;AAC9B,eAAS,QAAQ,KAAK,MAAM,mBAAmB;AAAA,IACjD;AAEA,QAAI,0BAA0B;AAC5B,eAAS,QAAQ,KAAK,IAAI;AAAA,IAC5B;AAEA,QAAI,aAAa;AACf,eAAS,QAAQ;AAAA,SACd,oBAAoB,2BAA2B,KAAK,OAAO;AAAA,MAC9D;AAAA,IACF;AAEA,aAAS,QAAQ,KAAK,GAAG;AAEzB,QAAI,KAAK,YAAY,KAAK,SAAS,SAAS,GAAG;AAC7C,UAAI,KAAK,SAAS,qBAAqB;AACrC,gBAAQ,MAAM,CAAC;AACf,iBAAS,QAAQ,KAAK,IAAI;AAC1B,iBAAS,QAAQ;AAAA,UACf,YAAY,cAAc,MAAM,SAAS,QAAQ,QAAQ,CAAC,GAAG,GAAG;AAAA,QAClE;AACA,iBAAS,QAAQ,KAAK,IAAI;AAAA,MAC5B,OAAO;AACL,iBAAS,QAAQ;AAAA,UACf,kBAAkB,MAAM,SAAS;AAAA,YAC/B,GAAG,QAAQ,QAAQ;AAAA,YACnB,QAAQ;AAAA,YACR,OAAO;AAAA,UACT,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,aAAa;AAChB,eAAS,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,GAAG;AAAA,IACtD;AAEA,SAAK;AACL,WAAO;AAAA,EACT;AAGA,WAAS,IAAI,MAAM,GAAG,OAAO;AAC3B,YAAQ,QAAQ,KAAK,QAAQ;AAAA,EAC/B;AAKA,WAAS,cAAc;AACrB,WAAO;AAAA,EACT;AACF;;;ACznBO,IAAM,uBAAuB;AAAA,EAClC,OAAO,EAAC,UAAU,cAAa;AAAA,EAC/B,MAAM,EAAC,UAAU,cAAc,cAAc,iBAAgB;AAC/D;AAOO,IAAM,qBAAqB,EAAC,UAAU,EAAC,UAAU,eAAc,EAAC;AAMvE,SAAS,cAAc,OAAO;AAC5B,OAAK,MAAM,EAAC,MAAM,YAAY,OAAO,GAAE,GAAG,KAAK;AAC/C,OAAK,OAAO;AACd;AAMA,SAAS,aAAa,OAAO;AAC3B,QAAM,QAAQ,KAAK,OAAO;AAC1B,QAAM;AAAA;AAAA,IAAgC,KAAK,KAAK,KAAK;AAAA;AAGrD,QAAM,SAAS,MAAM;AAErB,OAAK,QAAQ;AAEb,MAAI,QAAQ;AACV,SAAK,OAAO,EAAC,OAAM;AAAA,EACrB;AACF;AAMA,SAAS,iBAAiB,OAAO;AAC/B,OAAK,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK;AACvC,OAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK;AACxC;AAMA,SAAS,eAAe,MAAM;AAC5B,SAAO,KAAK,SAAS;AACvB;;;AC5CO,SAAS,kBAAkB;AAChC,SAAO,CAAC,2BAA2B,mBAAmB,GAAG,oBAAoB;AAC/E;AAYO,SAAS,cAAcC,UAAS;AACrC,SAAO;AAAA,IACL,YAAY;AAAA,MACV;AAAA,MACA,iBAAiBA,QAAO;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AACF;;;ACjCe,SAAR,UAA2BC,UAAS;AACzC,QAAM,OAAO,KAAK,KAAK;AAEvB,MAAI,uBAAuB,MAAMA,QAAO,CAAC;AACzC,MAAI,0BAA0B,gBAAgB,CAAC;AAC/C,MAAI,wBAAwB,cAAcA,QAAO,CAAC;AAMlD,WAAS,IAAI,OAAO,OAAO;AACzB,UAAM;AAAA;AAAA;AAAA;AAAA,MAGJ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAK,KAAK,KAAK,IAAI,CAAC;AAAA;AAG9C,SAAK,KAAK,KAAK;AAAA,EACjB;AACF;;;ACjCO,IAAM,aAAN,MAAiB;AAAA,EACvB,cAAc;AAEb,SAAK,cAAc;AAGnB,SAAK,gBAAgB;AAGrB,SAAK,cAAc;AAGnB,SAAK,UAAU;AAAA,MACd,MAAM,MAAO,KAAK,cAAc;AAAA,MAChC,QAAQ,MAAO,KAAK,gBAAgB;AAAA,MACpC,SAAS,CAAC,SAAU,KAAK,cAAc;AAAA,IACxC;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ,QAAQ,MAAMC,QAAO,MAAM;AAClC,QAAI,UAAU,MAAM;AACnB,UAAIA,UAAS,MAAM;AACS,QAAC,OAAO,IAAI,EAAGA,MAAK,IAAI;AAAA,MACpD,OAAO;AACc,QAAC,OAAO,IAAI,IAAK;AAAA,MACtC;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,QAAQ,MAAMA,QAAO;AAC3B,QAAI,UAAU,MAAM;AACnB,UAAIA,WAAU,QAAQA,WAAU,QAAW;AACf,QAAC,OAAO,IAAI,EAAG,OAAOA,QAAO,CAAC;AAAA,MAC1D,OAAO;AACN,eAAO,OAAO,IAAI;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AACD;;;AC9CO,IAAM,aAAN,cAAyB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1C,YAAY,OAAO,OAAO;AACzB,UAAM;AAGN,SAAK,cAAc;AAGnB,SAAK,gBAAgB;AAGrB,SAAK,cAAc;AAGnB,SAAK,UAAU;AAAA,MACd,MAAM,MAAO,KAAK,cAAc;AAAA,MAChC,QAAQ,MAAO,KAAK,gBAAgB;AAAA,MACpC,SAAS,CAAC,SAAU,KAAK,cAAc;AAAA,IACxC;AAGA,SAAK,QAAQ;AAGb,SAAK,QAAQ;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,MAAM,QAAQ,MAAMC,QAAO;AAChC,QAAI,MAAM;AACT,UAAI,KAAK,OAAO;AACf,cAAM,eAAe,KAAK;AAC1B,cAAM,iBAAiB,KAAK;AAC5B,cAAM,eAAe,KAAK;AAC1B,aAAK,cAAc;AACnB,aAAK,gBAAgB;AACrB,aAAK,cAAc;AAEnB,aAAK,MAAM,KAAK,KAAK,SAAS,MAAM,QAAQ,MAAMA,MAAK;AAEvD,YAAI,KAAK,aAAa;AACrB,iBAAO,KAAK;AACZ,eAAK,QAAQ,QAAQ,MAAMA,QAAO,IAAI;AAAA,QACvC;AAEA,YAAI,KAAK,eAAe;AACvB,eAAK,OAAO,QAAQ,MAAMA,MAAK;AAAA,QAChC;AAEA,cAAM,UAAU,KAAK;AACrB,cAAM,UAAU,KAAK;AAErB,aAAK,cAAc;AACnB,aAAK,gBAAgB;AACrB,aAAK,cAAc;AAEnB,YAAI;AAAS,iBAAO;AACpB,YAAI;AAAS,iBAAO;AAAA,MACrB;AAGA,UAAI;AAEJ,WAAK,OAAO,MAAM;AAEjB,cAAM,QAAQ,KAAK,GAAG;AAEtB,YAAI,SAAS,OAAO,UAAU,UAAU;AACvC,cAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,kBAAM;AAAA;AAAA,cAAuC;AAAA;AAC7C,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,oBAAM,OAAO,MAAM,CAAC;AACpB,kBAAI,OAAO,IAAI,GAAG;AACjB,oBAAI,CAAC,KAAK,MAAM,MAAM,MAAM,KAAK,CAAC,GAAG;AAEpC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,OAAO,KAAK,GAAG;AACzB,iBAAK,MAAM,OAAO,MAAM,KAAK,IAAI;AAAA,UAClC;AAAA,QACD;AAAA,MACD;AAEA,UAAI,KAAK,OAAO;AACf,cAAM,eAAe,KAAK;AAC1B,cAAM,iBAAiB,KAAK;AAC5B,aAAK,cAAc;AACnB,aAAK,gBAAgB;AAErB,aAAK,MAAM,KAAK,KAAK,SAAS,MAAM,QAAQ,MAAMA,MAAK;AAEvD,YAAI,KAAK,aAAa;AACrB,iBAAO,KAAK;AACZ,eAAK,QAAQ,QAAQ,MAAMA,QAAO,IAAI;AAAA,QACvC;AAEA,YAAI,KAAK,eAAe;AACvB,eAAK,OAAO,QAAQ,MAAMA,MAAK;AAAA,QAChC;AAEA,cAAM,UAAU,KAAK;AAErB,aAAK,cAAc;AACnB,aAAK,gBAAgB;AAErB,YAAI;AAAS,iBAAO;AAAA,MACrB;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAQA,SAAS,OAAO,OAAO;AACtB,SACC,UAAU,QAAQ,OAAO,UAAU,YAAY,UAAU,SAAS,OAAO,MAAM,SAAS;AAE1F;;;ACtIO,SAAS,KAAK,KAAK,EAAE,OAAO,MAAM,GAAG;AAC3C,QAAM,WAAW,IAAI,WAAW,OAAO,KAAK;AAC5C,SAAO,SAAS,MAAM,KAAK,IAAI;AAChC;;;AC2EA,IAAM,QAAQ;AA4BP,SAAS,SAAS,MAAMC,UAAS;AACtC,QAAM,SAASA,YAAW,CAAC;AAC3B,MAAI,YAAY,OAAO,YAAY;AAEnC,QAAM,cAAc,CAAC;AAErB,QAAM,UAAU,CAAC;AAEjB,OAAK,MAAM;AAAA;AAAA,IAET,MAA0B,MAAM;AAC9B,UAAI,KAAK,SAAS,WAAW;AAC3B,cAAM,WAAW,KAAK,YAAY,CAAC;AACnC,YAAIC,SAAQ;AAEZ,eAAO,EAAEA,SAAQ,SAAS,QAAQ;AAChC,gBAAM,YAAY;AAElB,cAAI,QAAQ,MAAM,KAAK,SAASA,MAAK,EAAE,KAAK;AAE5C,iBAAO,OAAO;AAEZ,wBAAY,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC;AAC/B,oBAAQ,MAAM,KAAK,SAASA,MAAK,EAAE,KAAK;AAAA,UAC1C;AAAA,QACF;AAEA,YAAI,YAAY,YAAY;AAC1B,cAAI,YAAY,eAAe,aAAa;AAC1C,wBAAY;AAEZ,gBAAI,YAAY,KAAK;AACnB,oBAAM,IAAI,MAAM,+CAA+C;AAAA,YACjE;AAEA,gBAAI,YAAY,SAAS;AACvB,oBAAM,IAAI;AAAA,gBACR;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,YAAY,eAAe,WAAW;AAC/C,wBAAY;AAEZ,gBAAI,YAAY,iBAAiB;AAC/B,oBAAM,IAAI;AAAA,gBACR;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,kBAAM,IAAI;AAAA,cACR,8BACE,YAAY,aACZ;AAAA,YACJ;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA,IAGA,MAA0B,MAAM;AAC9B,UAAI,KAAK,SAAS,WAAW;AAE3B,cAAM,aAAa,CAAC;AAEpB,YAAI,QAAQ,UAAU;AACpB,qBAAW,KAAK;AAAA,YACd,MAAM;AAAA,YACN,UAAU,EAAC,MAAM,cAAc,MAAM,WAAU;AAAA,YAC/C,OAAO,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,UAC/C,CAAC;AAAA,QACH;AAEA,YAAI,QAAQ,KAAK;AACf,qBAAW,KAAK;AAAA,YACd,MAAM;AAAA,YACN,UAAU,EAAC,MAAM,cAAc,MAAM,MAAK;AAAA,YAC1C,OAAO,EAAC,MAAM,cAAc,MAAM,OAAM;AAAA,UAC1C,CAAC;AAAA,QACH;AAEA,YAAI,QAAQ,MAAM;AAChB,qBAAW,KAAK;AAAA,YACd,MAAM;AAAA,YACN,UAAU,EAAC,MAAM,cAAc,MAAM,OAAM;AAAA,YAC3C,OAAO,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,UAC3C,CAAC;AAAA,QACH;AAEA,YAAI,QAAQ,QAAQ;AAClB,qBAAW,KAAK;AAAA,YACd,MAAM;AAAA,YACN,UAAU,EAAC,MAAM,cAAc,MAAM,SAAQ;AAAA,YAC7C,OAAO,EAAC,MAAM,cAAc,MAAM,UAAS;AAAA,UAC7C,CAAC;AAAA,QACH;AAEA,YAAI,WAAW,SAAS,GAAG;AACzB,eAAK,KAAK,QAAQ;AAAA,YAChB,MAAM;AAAA,YACN;AAAA,YACA,QAAQ;AAAA,cACN,MAAM;AAAA,cACN,QACG,YAAY,mBACX,OAAO,gBACP,YACD,OAAO,cAAc,qBAAqB;AAAA,YAC/C;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAEA,UAAI,KAAK,SAAS,gBAAgB,KAAK,SAAS,eAAe;AAC7D;AAAA,MACF;AAGA,YAAM,WAAW,CAAC;AAClB,UAAIA,SAAQ;AAGZ,aAAO,EAAEA,SAAQ,KAAK,SAAS,QAAQ;AACrC,cAAM,QAAQ,KAAK,SAASA,MAAK;AAEjC,YAAI,MAAM,SAAS,0BAA0B;AAE3C,cAAI,MAAM,WAAW,SAAS,sBAAsB;AAClD,qBAAS,KAAK,MAAM,UAAU;AAAA,UAChC;AAAA,QACF,WAAW,MAAM,SAAS,WAAW;AACnC,gBAAM,QAAQ,MAAM,MAEjB,QAAQ,OAAO,GAAG,EAElB,QAAQ,mBAAmB,IAAI,EAE/B,QAAQ,QAAQ,IAAI,EAEpB,QAAQ,QAAQ,EAAE,EAElB,QAAQ,QAAQ,EAAE,EAElB,QAAQ,OAAO,GAAG;AAGrB,cAAI,OAAO;AACT,qBAAS,KAAK,OAAO,OAAO,EAAC,MAAM,WAAW,MAAK,CAAC,CAAC;AAAA,UACvD;AAAA,QACF,OAAO;AAIL,mBAAS,KAAK,KAAK;AAAA,QACrB;AAAA,MACF;AAGA,UAAIC;AAEJ,UAAI,SAAS,CAAC;AAEd,YAAM,UAAU,CAAC;AAEjB,UAAI,aAAa,CAAC;AAElB,UAAI;AAGJ,UAAI,KAAK,SAAS,cAAc;AAC9B,QAAAA,QAAO,aAAa,KAAK,eAAe,IAAI;AAI5C,YAAIA,MAAK,SAAS,gBAAgB,SAAS,KAAKA,MAAK,IAAI,GAAG;AAC1D,UAAAA,QAAO,OAAOA,OAAM,EAAC,MAAM,WAAW,OAAOA,MAAK,KAAI,CAAC;AAAA,QACzD;AAGA,YAAI;AACJ,cAAM,aAAa,KAAK,eAAe;AACvC,YAAID,SAAQ;AAIZ,eAAO,EAAEA,SAAQ,WAAW,QAAQ;AAClC,gBAAM,YAAY,WAAWA,MAAK;AAElC,cAAI,UAAU,SAAS,sBAAsB;AAC3C,gBAAI,OAAO,SAAS,GAAG;AACrB,sBAAQ,KAAK,EAAC,MAAM,oBAAoB,YAAY,OAAM,CAAC;AAC3D,uBAAS,CAAC;AAAA,YACZ;AAEA,oBAAQ,KAAK,UAAU,QAAQ;AAC/B,qBAAS;AAAA,UACX,OAAO;AACL,kBAAM,OAAO,WAAW,SAAS;AAEjC,gBACE,aACA,KAAK,IAAI,SAAS,gBAClB,KAAK,IAAI,SAAS,OAClB;AACA,kBAAI,QAAQ;AACV,sBAAM,IAAI;AAAA,kBACR;AAAA,gBACF;AAAA,cACF;AAIA,oBAAM,KAAK;AAAA,YACb,OAAO;AACL,qBAAO,KAAK,IAAI;AAAA,YAClB;AAAA,UACF;AAAA,QACF;AAAA,MACF,WAES,WAAW;AAClB,gBAAQ,WAAW;AACnB,QAAAC,QAAO,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,MAC/C,OAAO;AACL,QAAAA,QAAO;AAAA,UACL,YAAY,WAAW,OAAO,cAAc;AAAA,QAC9C;AAAA,MACF;AAEA,UAAI,WAAW;AACb,YAAI,SAAS,SAAS,GAAG;AACvB,iBAAO,KAAK;AAAA,YACV,MAAM;AAAA,YACN,KAAK,EAAC,MAAM,cAAc,MAAM,WAAU;AAAA,YAC1C,OACE,SAAS,SAAS,IACd,EAAC,MAAM,mBAAmB,UAAU,SAAQ,IAC5C,SAAS,CAAC;AAAA,YAChB,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,WAAW;AAAA,YACX,UAAU;AAAA,UACZ,CAAC;AAAA,QACH;AAAA,MACF,OAAO;AACL,qBAAa;AAAA,MACf;AAEA,UAAI,OAAO,SAAS,GAAG;AACrB,gBAAQ,KAAK,EAAC,MAAM,oBAAoB,YAAY,OAAM,CAAC;AAAA,MAC7D;AAGA,UAAI;AAEJ,UAAI;AAEJ,UAAI,QAAQ,SAAS,GAAG;AAEtB,YAAI,QAAQ,CAAC,EAAE,SAAS,oBAAoB;AAC1C,kBAAQ,QAAQ,EAAC,MAAM,oBAAoB,YAAY,CAAC,EAAC,CAAC;AAAA,QAC5D;AAEA,gBAAQ;AAAA,UACN,MAAM;AAAA,UACN,QAAQ,mBAAmB,eAAe;AAAA,UAC1C,WAAW;AAAA,UACX,UAAU;AAAA,QACZ;AAAA,MACF,WAAW,QAAQ,SAAS,GAAG;AAC7B,gBAAQ,QAAQ,CAAC;AAAA,MACnB;AAEA,UAAI,WAAW;AACb,mBAAW,KAAK,SAAS,EAAC,MAAM,oBAAoB,YAAY,CAAC,EAAC,CAAC;AAEnE,YAAI,KAAK;AACP,qBAAW,KAAK,GAAG;AAAA,QACrB,WAAW,OAAO,aAAa;AAC7B,qBAAW,KAAK,EAAC,MAAM,cAAc,MAAM,YAAW,CAAC;AAAA,QACzD;AAEA,cAAM,mBAAmB,SAAS,SAAS;AAE3C,YAAI,OAAO,aAAa;AACtB,kBAAQ,SAAS;AACjB,mBAAS;AAAA,YACP,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AACA,qBAAW,KAAK,EAAC,MAAM,WAAW,OAAO,iBAAgB,CAAC;AAG1D,gBAAM,SAAS;AAAA,YACb,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,WAAW;AAAA,gBACX,UAAU;AAAA,gBACV,MAAM;AAAA,gBACN,KAAK,EAAC,MAAM,cAAc,MAAM,WAAU;AAAA,gBAC1C,OAAO;AAAA,kBACL,MAAM;AAAA,kBACN,OAAO,OAAO,YAAY;AAAA,gBAC5B;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,cAAI,KAAK,KAAK;AACZ,mBAAO,WAAW;AAAA,cAChB;AAAA,gBACE,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,WAAW;AAAA,gBACX,UAAU;AAAA,gBACV,MAAM;AAAA,gBACN,KAAK,EAAC,MAAM,cAAc,MAAM,aAAY;AAAA,gBAC5C,OAAO,EAAC,MAAM,WAAW,OAAO,KAAK,IAAI,MAAM,KAAI;AAAA,cACrD;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,WAAW;AAAA,gBACX,UAAU;AAAA,gBACV,MAAM;AAAA,gBACN,KAAK,EAAC,MAAM,cAAc,MAAM,eAAc;AAAA,gBAC9C,OAAO,EAAC,MAAM,WAAW,OAAO,KAAK,IAAI,MAAM,SAAS,EAAC;AAAA,cAC3D;AAAA,YACF;AAAA,UACF;AAEA,qBAAW,KAAK,QAAQ,EAAC,MAAM,iBAAgB,CAAC;AAAA,QAClD,WAAW,kBAAkB;AAC3B,kBAAQ,OAAO;AACf,mBAAS,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,QAC7C,OAAO;AACL,kBAAQ,MAAM;AACd,mBAAS,EAAC,MAAM,cAAc,MAAM,OAAM;AAAA,QAC5C;AAAA,MACF,OAEK;AAEH,YAAI,SAAS,WAAW,SAAS,GAAG;AAClC,qBAAW,QAAQ,SAAS,EAAC,MAAM,WAAW,OAAO,KAAI,CAAC;AAAA,QAC5D;AAEA,iBAAS;AAAA,UACP,YAAY,OAAO,OAAO,UAAU;AAAA,QACtC;AAAA,MACF;AAEA,iBAAW,QAAQA,KAAI;AAGvB,WAAK;AAAA,QACH,OAAO,MAAM;AAAA,UACX,MAAM;AAAA,UACN;AAAA,UACA,WAAW;AAAA,UACX,UAAU;AAAA,QACZ,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,CAAC;AAED,SAAO;AACT;AAMA,SAAS,WAAW,MAAM;AAExB,MAAI;AAEJ,MAAI,KAAK,OAAO;AACd,QAAI,KAAK,MAAM,SAAS,0BAA0B;AAEhD,cAAQ,KAAK,MAAM;AAAA,IACrB,OAEK;AAGH,cAAQ,KAAK;AAGb,aAAO,MAAM;AAAA,IACf;AAAA,EACF,OAEK;AACH,YAAQ,EAAC,MAAM,WAAW,OAAO,KAAI;AAAA,EACvC;AAEA,SAAO,OAAO,MAAM;AAAA,IAClB,MAAM;AAAA,IACN,KAAK,aAAa,KAAK,IAAI;AAAA,IAC3B;AAAA,IACA,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,UAAU;AAAA,EACZ,CAAC;AACH;AAMA,SAAS,aAAa,MAAM;AAE1B,MAAI;AAEJ,MAAI,KAAK,SAAS,uBAAuB;AAGvC,UAAM,KAAK,aAAa,KAAK,QAAQ;AACrC,cAAU;AAAA,MACR,MAAM;AAAA,MACN,QAAQ,aAAa,KAAK,MAAM;AAAA,MAChC,UAAU;AAAA,MACV,UAAU,GAAG,SAAS;AAAA,MACtB,UAAU;AAAA,IACZ;AAAA,EACF,WAAW,KAAK,SAAS,qBAAqB;AAC5C,cAAU;AAAA,MACR,MAAM;AAAA,MACN,OAAO,KAAK,UAAU,OAAO,MAAM,KAAK,KAAK;AAAA,IAC/C;AAAA,EACF,OAEK;AACH,cAAU,KAAiB,KAAK,IAAI,IAChC,EAAC,MAAM,cAAc,MAAM,KAAK,KAAI,IACpC,EAAC,MAAM,WAAW,OAAO,KAAK,KAAI;AAAA,EACxC;AAEA,SAAO,OAAO,MAAM,OAAO;AAC7B;AAMA,SAAS,mBAAmB,IAAI;AAC9B,QAAM,cAAc,GAAG,MAAM,GAAG;AAChC,MAAID,SAAQ;AAEZ,MAAI;AAEJ,SAAO,EAAEA,SAAQ,YAAY,QAAQ;AAEnC,UAAM,OAAO,KAAiB,YAAYA,MAAK,CAAC,IAC5C,EAAC,MAAM,cAAc,MAAM,YAAYA,MAAK,EAAC,IAC7C,EAAC,MAAM,WAAW,OAAO,YAAYA,MAAK,EAAC;AAC/C,aAAS,SACL;AAAA,MACE,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU,QAAQA,UAAS,KAAK,SAAS,SAAS;AAAA,MAClD,UAAU;AAAA,IACZ,IACA;AAAA,EACN;AAGA,SAAO;AACT;AAQA,SAAS,OAAO,MAAM,MAAM;AAC1B,QAAM,SAAS,CAAC,SAAS,OAAO,OAAO,SAAS,UAAU;AAC1D,MAAIA,SAAQ;AAEZ,SAAO,EAAEA,SAAQ,OAAO,QAAQ;AAC9B,UAAM,QAAQ,OAAOA,MAAK;AAC1B,QAAI,SAAS,MAAM;AAEjB,WAAK,KAAK,IAAI,KAAK,KAAK;AAAA,IAC1B;AAAA,EACF;AAEA,SAAO;AACT;;;AC9lBO,SAASE,QAAO,MAAM,IAAI;AAG/B,QAAM,SAAS,CAAC,SAAS,OAAO,OAAO,SAAS,UAAU;AAC1D,MAAIC,SAAQ;AAEZ,SAAO,EAAEA,SAAQ,OAAO,QAAQ;AAC9B,UAAM,QAAQ,OAAOA,MAAK;AAE1B,QAAI,SAAS,MAAM;AAEjB,SAAG,KAAK,IAAI,KAAK,KAAK;AAAA,IACxB;AAAA,EACF;AACF;;;ACRO,SAAS,yBAAyB,YAAYC,OAAM;AACzD,MAAIC,SAAQ;AAEZ,QAAM,eAAe,CAAC;AAEtB,QAAM,kBAAkB,CAAC;AAGzB,MAAI;AAEJ,SAAO,EAAEA,SAAQ,WAAW,QAAQ;AAClC,UAAM,YAAY,WAAWA,MAAK;AAElC,QAAI,UAAU,SAAS,4BAA4B;AACjD,iCAA2B;AAAA,IAC7B,OAAO;AACL,sBAAgB,KAAK,SAAS;AAAA,IAChC;AAAA,EACF;AAEA,MAAI,0BAA0B;AAE5B,UAAM,aAAa;AAAA,MACjB,MAAM;AAAA,MACN,IAAI,yBAAyB;AAAA,MAC7B,MAAAD;AAAA,IACF;AACA,IAAAE,QAAO,0BAA0B,UAAU;AAC3C,iBAAa,KAAK,UAAU;AAAA,EAC9B;AAEA,eAAa,KAAK;AAAA,IAChB,MAAM;AAAA,IACN,IAAI;AAAA,MACF,MAAM;AAAA,MACN,YAAY,gBAAgB,IAAI,CAAC,cAAc;AAE7C,YAAI,MACF,UAAU,SAAS,oBACf,UAAU,WACV,UAAU,SAAS,oBACnB,UAAU,WACV,EAAC,MAAM,cAAc,MAAM,UAAS;AAC1C,YAAI,QAAQ,UAAU;AAGtB,YAAI,UAAU,SAAS,mBAAmB;AACxC,kBAAQ;AACR,gBAAM,UAAU;AAAA,QAClB;AAGA,cAAM,WAAW;AAAA,UACf,MAAM;AAAA,UACN,MAAM;AAAA,UACN,WAAW,IAAI,SAAS,MAAM;AAAA,UAC9B,QAAQ;AAAA,UACR,UAAU;AAAA,UACV;AAAA,UACA;AAAA,QACF;AACA,QAAAA,QAAO,WAAW,QAAQ;AAC1B,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAAA,IACA,MAAM,2BACF,EAAC,MAAM,cAAc,MAAM,yBAAyB,MAAM,KAAI,IAC9DF;AAAA,EACN,CAAC;AAED,SAAO;AACT;;;AC3EO,IAAM,yBAAyB;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AACF;AAEO,IAAM;AAAA;AAAA;AAAA,EAIT;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA;AAQJ,SAAS,8BAA8B,QAAQ,YAAY,cAAc;AACvE,SAAOG;AAKP,WAASA,wBAAuB,KAAK;AACnC,QAAIC,SAAQ;AAEZ,QAAI;AAEJ,WAAO,EAAEA,SAAQ,IAAI,QAAQ;AAC3B,YAAMC,QAAO,IAAID,MAAK;AACtB,YAAM,QAAQ,OAAOC,UAAS,YAAY,aAAaA,KAAI;AAK3D,UAAI,WAAW,mBAAmB,CAAC,OAAO;AACxC,cAAM,IAAI,MAAM,kBAAkBA,QAAO,yBAAyB;AAAA,MACpE;AAIA,YAAM,KAAK,QAAQ,EAAC,MAAM,QAAQ,MAAAA,MAAI,IAAI,EAAC,MAAM,WAAW,OAAOA,MAAI;AAEvE,eAAS,SACL;AAAA,QACE,MAAM;AAAA,QACN;AAAA,QACA,UAAU;AAAA,QACV,UAAU,GAAG,SAAS;AAAA,QACtB,UAAU;AAAA,MACZ,IACA;AAAA,IACN;AAIA,QAAI,CAAC;AAAQ,YAAM,IAAI,MAAM,uCAAuC;AACpE,QAAI,OAAO,SAAS;AAClB,YAAM,IAAI,MAAM,wCAAwC;AAE1D,WAAO;AAAA,EACT;AACF;AAMA,SAAS,oBAAoBA,OAAM;AACjC,MAAID,SAAQ;AAEZ,SAAO,EAAEA,SAAQC,MAAK,QAAQ;AAI5B,QAAI,EAAED,SAAQ,UAAUE,QAASD,MAAK,WAAWD,MAAK,CAAC;AAAG,aAAO;AAAA,EACnE;AAGA,SAAOA,SAAQ;AACjB;AAMA,SAAS,QAAQ,MAAM;AACrB,SAAO,SAAS,MAAgBG,MAAO,IAAI;AAC7C;;;AClFO,SAAS,cAAcC,UAAS;AAGrC,QAAM,EAAC,aAAAC,cAAa,aAAY,IAAID,YAAW,CAAC;AAEhD,SAAO,CAAC,MAAM,SAAS;AACrB,aAAS,MAAM,EAAC,aAAAC,cAAa,UAAU,KAAK,QAAQ,CAAC,EAAC,CAAC;AAKvD,QACE,iBAAiB,mBACjB,KAAK,KAAK,CAAC,KACX,KAAK,KAAK,CAAC,EAAE,SAAS,uBACtB,OAAO,KAAK,KAAK,CAAC,EAAE,OAAO,UAAU,YACrC,wBAAwB,KAAK,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK,GACtD;AACA,WAAK,KAAK,CAAC,IAAI;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,UACZ,KAAK,KAAK,CAAC,EAAE;AAAA,UACb,uBAAuB,CAAC,aAAa,CAAC,CAAC;AAAA,QACzC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AC5CO,IAAMC,cAAN,MAAiB;AAAA,EACvB,cAAc;AAEb,SAAK,cAAc;AAGnB,SAAK,gBAAgB;AAGrB,SAAK,cAAc;AAGnB,SAAK,UAAU;AAAA,MACd,MAAM,MAAO,KAAK,cAAc;AAAA,MAChC,QAAQ,MAAO,KAAK,gBAAgB;AAAA,MACpC,SAAS,CAAC,SAAU,KAAK,cAAc;AAAA,IACxC;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ,QAAQ,MAAMC,QAAO,MAAM;AAClC,QAAI,UAAU,MAAM;AACnB,UAAIA,UAAS,MAAM;AACS,QAAC,OAAO,IAAI,EAAGA,MAAK,IAAI;AAAA,MACpD,OAAO;AACc,QAAC,OAAO,IAAI,IAAK;AAAA,MACtC;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,QAAQ,MAAMA,QAAO;AAC3B,QAAI,UAAU,MAAM;AACnB,UAAIA,WAAU,QAAQA,WAAU,QAAW;AACf,QAAC,OAAO,IAAI,EAAG,OAAOA,QAAO,CAAC;AAAA,MAC1D,OAAO;AACN,eAAO,OAAO,IAAI;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AACD;;;AC9CO,IAAMC,cAAN,cAAyBC,YAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1C,YAAY,OAAO,OAAO;AACzB,UAAM;AAGN,SAAK,cAAc;AAGnB,SAAK,gBAAgB;AAGrB,SAAK,cAAc;AAGnB,SAAK,UAAU;AAAA,MACd,MAAM,MAAO,KAAK,cAAc;AAAA,MAChC,QAAQ,MAAO,KAAK,gBAAgB;AAAA,MACpC,SAAS,CAAC,SAAU,KAAK,cAAc;AAAA,IACxC;AAGA,SAAK,QAAQ;AAGb,SAAK,QAAQ;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,MAAM,QAAQ,MAAMC,QAAO;AAChC,QAAI,MAAM;AACT,UAAI,KAAK,OAAO;AACf,cAAM,eAAe,KAAK;AAC1B,cAAM,iBAAiB,KAAK;AAC5B,cAAM,eAAe,KAAK;AAC1B,aAAK,cAAc;AACnB,aAAK,gBAAgB;AACrB,aAAK,cAAc;AAEnB,aAAK,MAAM,KAAK,KAAK,SAAS,MAAM,QAAQ,MAAMA,MAAK;AAEvD,YAAI,KAAK,aAAa;AACrB,iBAAO,KAAK;AACZ,eAAK,QAAQ,QAAQ,MAAMA,QAAO,IAAI;AAAA,QACvC;AAEA,YAAI,KAAK,eAAe;AACvB,eAAK,OAAO,QAAQ,MAAMA,MAAK;AAAA,QAChC;AAEA,cAAM,UAAU,KAAK;AACrB,cAAM,UAAU,KAAK;AAErB,aAAK,cAAc;AACnB,aAAK,gBAAgB;AACrB,aAAK,cAAc;AAEnB,YAAI;AAAS,iBAAO;AACpB,YAAI;AAAS,iBAAO;AAAA,MACrB;AAGA,UAAI;AAEJ,WAAK,OAAO,MAAM;AAEjB,cAAM,QAAQ,KAAK,GAAG;AAEtB,YAAI,SAAS,OAAO,UAAU,UAAU;AACvC,cAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,kBAAM;AAAA;AAAA,cAAuC;AAAA;AAC7C,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,oBAAM,OAAO,MAAM,CAAC;AACpB,kBAAIC,QAAO,IAAI,GAAG;AACjB,oBAAI,CAAC,KAAK,MAAM,MAAM,MAAM,KAAK,CAAC,GAAG;AAEpC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAWA,QAAO,KAAK,GAAG;AACzB,iBAAK,MAAM,OAAO,MAAM,KAAK,IAAI;AAAA,UAClC;AAAA,QACD;AAAA,MACD;AAEA,UAAI,KAAK,OAAO;AACf,cAAM,eAAe,KAAK;AAC1B,cAAM,iBAAiB,KAAK;AAC5B,aAAK,cAAc;AACnB,aAAK,gBAAgB;AAErB,aAAK,MAAM,KAAK,KAAK,SAAS,MAAM,QAAQ,MAAMD,MAAK;AAEvD,YAAI,KAAK,aAAa;AACrB,iBAAO,KAAK;AACZ,eAAK,QAAQ,QAAQ,MAAMA,QAAO,IAAI;AAAA,QACvC;AAEA,YAAI,KAAK,eAAe;AACvB,eAAK,OAAO,QAAQ,MAAMA,MAAK;AAAA,QAChC;AAEA,cAAM,UAAU,KAAK;AAErB,aAAK,cAAc;AACnB,aAAK,gBAAgB;AAErB,YAAI;AAAS,iBAAO;AAAA,MACrB;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAQA,SAASC,QAAO,OAAO;AACtB,SACC,UAAU,QAAQ,OAAO,UAAU,YAAY,UAAU,SAAS,OAAO,MAAM,SAAS;AAE1F;;;ACtIO,SAASC,MAAK,KAAK,EAAE,OAAO,MAAM,GAAG;AAC3C,QAAM,WAAW,IAAIC,YAAW,OAAO,KAAK;AAC5C,SAAO,SAAS,MAAM,KAAK,IAAI;AAChC;;;ACPe,SAAR,aAA+B,MAAM,QAAQ;AACnD,MAAI,KAAK,SAAS,oBAAoB;AACrC,WAAO,CAAC,KAAK,YAAY,aAAa,KAAK,QAAQ,IAAI;AAAA,EACxD;AAEA,MAAI,KAAK,SAAS,cAAc;AAC/B,QAAI,CAAC;AAAQ,aAAO;AAEpB,YAAQ,OAAO,MAAM;AAAA,MAEpB,KAAK;AAAoB,eAAO,OAAO,YAAY,SAAS,OAAO;AAAA,MAGnE,KAAK;AAAoB,eAAO,OAAO;AAAA,MAGvC,KAAK;AAAsB,eAAO,OAAO,YAAY,SAAS,OAAO;AAAA,MAGrE,KAAK;AAAY,eAAO,OAAO,YAAY,SAAS,OAAO;AAAA,MAI3D,KAAK;AAAA,MACL,KAAK;AAAmB,eAAO,SAAS,OAAO;AAAA,MAG/C,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAqB,eAAO;AAAA,MACjC;AAAS,eAAO;AAAA,IACjB;AAAA,EACD;AAEA,SAAO;AACR;;;AC5CO,SAAS,QAAQ,YAAY;AAInC,QAAM,MAAM,oBAAI,QAAQ;AAGxB,QAAM,UAAU,oBAAI,IAAI;AAExB,QAAM,QAAQ,IAAI,MAAM,MAAM,KAAK;AAGnC,QAAM,aAAa,CAAC;AAEpB,MAAI,gBAAgB;AAEpB,EAAAC,MAAK,YAAY;AAAA,IAChB,MAAM,MAAM,QAAQ;AACnB,cAAQ,KAAK,MAAM;AAAA,QAClB,KAAK;AACJ,cAAI,UAAU,aAAa,MAAM,MAAM,GAAG;AACzC,uBAAW,KAAK,CAAC,eAAe,IAAI,CAAC;AAAA,UACtC;AACA;AAAA,QAED,KAAK;AACJ,eAAK,WAAW,QAAQ,CAAC,cAAc;AACtC,0BAAc,aAAa,IAAI,UAAU,MAAM,MAAM,SAAS;AAAA,UAC/D,CAAC;AACD;AAAA,QAED,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACJ,cAAI,KAAK,SAAS,uBAAuB;AACxC,gBAAI,KAAK,IAAI;AACZ,4BAAc,aAAa,IAAI,KAAK,GAAG,MAAM,IAAI;AAAA,YAClD;AAEA,gBAAI,IAAI,MAAM,gBAAgB,IAAI,MAAM,eAAe,KAAK,CAAC;AAAA,UAC9D,OAAO;AACN,gBAAI,IAAI,MAAM,gBAAgB,IAAI,MAAM,eAAe,KAAK,CAAC;AAE7D,gBAAI,KAAK,SAAS,wBAAwB,KAAK,IAAI;AAClD,4BAAc,aAAa,IAAI,KAAK,GAAG,MAAM,IAAI;AAAA,YAClD;AAAA,UACD;AAEA,eAAK,OAAO,QAAQ,WAAS;AAC5B,0BAAc,KAAK,EAAE,QAAQ,CAAAC,UAAQ;AACpC,4BAAc,aAAa,IAAIA,OAAM,IAAI;AAAA,YAC1C,CAAC;AAAA,UACF,CAAC;AACD;AAAA,QAED,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACJ,cAAI,IAAI,MAAM,gBAAgB,IAAI,MAAM,eAAe,IAAI,CAAC;AAC5D;AAAA,QAED,KAAK;AACJ,cAAI,IAAI,MAAM,gBAAgB,IAAI,MAAM,eAAe,IAAI,CAAC;AAC5D;AAAA,QAED,KAAK;AAAA,QACL,KAAK;AACJ,wBAAc,gBAAgB,IAAI;AAClC;AAAA,QAED,KAAK;AACJ,cAAI,IAAI,MAAM,gBAAgB,IAAI,MAAM,eAAe,IAAI,CAAC;AAE5D,cAAI,KAAK,OAAO;AACf,0BAAc,KAAK,KAAK,EAAE,QAAQ,CAAAA,UAAQ;AACzC,kBAAI,KAAK,OAAO;AACf,8BAAc,aAAa,IAAIA,OAAM,KAAK,KAAK;AAAA,cAChD;AAAA,YACD,CAAC;AAAA,UACF;AACA;AAAA,MACF;AAAA,IACD;AAAA,IAEA,MAAM,MAAM;AACX,UAAI,IAAI,IAAI,IAAI,KAAK,kBAAkB,QAAQ,cAAc,QAAQ;AACpE,wBAAgB,cAAc;AAAA,MAC/B;AAAA,IACD;AAAA,EACD,CAAC;AAED,WAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAChD,UAAM,CAACC,QAAO,SAAS,IAAI,WAAW,CAAC;AAEvC,QAAI,CAACA,OAAM,WAAW,IAAI,UAAU,IAAI,GAAG;AAC1C,oBAAcA,QAAO,UAAU,IAAI;AAAA,IACpC;AACA,QAAI,CAACA,OAAM,WAAW,UAAU,IAAI,GAAG;AACtC,cAAQ,IAAI,UAAU,MAAM,SAAS;AAAA,IACtC;AAAA,EACD;AAEA,SAAO,EAAE,KAAK,OAAO,QAAQ;AAC9B;AAMA,SAAS,cAAc,OAAOD,OAAM;AACnC,QAAM,WAAW,IAAIA,KAAI;AACzB,MAAI,MAAM;AAAQ,kBAAc,MAAM,QAAQA,KAAI;AACnD;AAEO,IAAM,QAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlB,YAAY,QAAQ,OAAO;AAE1B,SAAK,SAAS;AAGd,SAAK,QAAQ;AAGb,SAAK,eAAe,oBAAI,IAAI;AAG5B,SAAK,2BAA2B,oBAAI,IAAI;AAGxC,SAAK,aAAa,oBAAI,IAAI;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,MAAM;AACrB,QAAI,KAAK,SAAS,uBAAuB;AACxC,UAAI,KAAK,SAAS,SAAS,KAAK,SAAS,KAAK,QAAQ;AACrD,aAAK,OAAO,gBAAgB,IAAI;AAAA,MACjC,OAAO;AAEN,cAAM,oBAAoB,CAAC,eAAe;AACzC,wBAAc,WAAW,EAAE,EAAE,QAAQ,CAAAA,UAAQ;AAC5C,iBAAK,aAAa,IAAIA,OAAM,IAAI;AAChC,gBAAI,WAAW;AAAM,mBAAK,yBAAyB,IAAIA,KAAI;AAAA,UAC5D,CAAC;AAAE;AAAA,QACJ;AAEA,aAAK,aAAa,QAAQ,iBAAiB;AAAA,MAC5C;AAAA,IACD,WAAW,KAAK,IAAI;AACnB,WAAK,aAAa,IAAI,KAAK,GAAG,MAAM,IAAI;AAAA,IACzC;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAWA,OAAM;AAChB,QAAI,KAAK,aAAa,IAAIA,KAAI;AAAG,aAAO;AACxC,WAAO,KAAK,UAAU,KAAK,OAAO,WAAWA,KAAI;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAIA,OAAM;AACT,WACC,KAAK,aAAa,IAAIA,KAAI,KAAM,CAAC,CAAC,KAAK,UAAU,KAAK,OAAO,IAAIA,KAAI;AAAA,EAEvE;AACD;AAMO,SAAS,cAAc,OAAO;AACpC,SAAO,oBAAoB,KAAK,EAAE,IAAI,UAAQ,KAAK,IAAI;AACxD;AAOO,SAAS,oBAAoB,OAAO,QAAQ,CAAC,GAAG;AACtD,UAAQ,MAAM,MAAM;AAAA,IACnB,KAAK;AACJ,YAAM,KAAK,KAAK;AAChB;AAAA,IAED,KAAK;AACJ,UAAI,SAAS;AACb,aAAO,OAAO,SAAS,oBAAoB;AAC1C;AAAA,QAA6B,OAAO;AAAA,MACrC;AACA,YAAM;AAAA;AAAA,QAAyB;AAAA,MAAO;AACtC;AAAA,IAED,KAAK;AAEJ,YAAM,cAAc,CAAC,SAAS;AAC7B,YAAI,KAAK,SAAS,eAAe;AAChC,8BAAoB,KAAK,UAAU,KAAK;AAAA,QACzC,OAAO;AACN,8BAAoB,KAAK,OAAO,KAAK;AAAA,QACtC;AAAA,MACD;AAEA,YAAM,WAAW,QAAQ,WAAW;AACpC;AAAA,IAED,KAAK;AAEJ,YAAM,iBAAiB,CAACE,aAAY;AACnC,YAAIA;AAAS,8BAAoBA,UAAS,KAAK;AAAA,MAChD;AAEA,YAAM,SAAS,QAAQ,CAACA,aAAY;AACnC,YAAIA,UAAS;AACZ,yBAAeA,QAAO;AAAA,QACvB;AAAA,MACD,CAAC;AACD;AAAA,IAED,KAAK;AACJ,0BAAoB,MAAM,UAAU,KAAK;AACzC;AAAA,IAED,KAAK;AACJ,0BAAoB,MAAM,MAAM,KAAK;AACrC;AAAA,EACF;AAEA,SAAO;AACR;;;AClNO,SAASC,mBAAkB,OAAO;AAEvC,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,WAAO;AAAA,EACT;AAGA,MAAI,cAAc,SAAS,UAAU,OAAO;AAC1C,WAAOC,UAAS,MAAM,QAAQ;AAAA,EAChC;AAGA,MAAI,WAAW,SAAS,SAAS,OAAO;AACtC,WAAOA,UAAS,KAAK;AAAA,EACvB;AAGA,MAAI,UAAU,SAAS,YAAY,OAAO;AACxC,WAAOC,OAAM,KAAK;AAAA,EACpB;AAGA,SAAO;AACT;AAMA,SAASA,OAAMA,QAAO;AACpB,SAAOC,OAAMD,UAASA,OAAM,IAAI,IAAI,MAAMC,OAAMD,UAASA,OAAM,MAAM;AACvE;AAMA,SAASD,UAAS,KAAK;AACrB,SAAOC,OAAM,OAAO,IAAI,KAAK,IAAI,MAAMA,OAAM,OAAO,IAAI,GAAG;AAC7D;AAMA,SAASC,OAAM,OAAO;AACpB,SAAO,SAAS,OAAO,UAAU,WAAW,QAAQ;AACtD;;;AC1EO,IAAMC,cAAN,MAAiB;AAAA,EACvB,cAAc;AAEb,SAAK,cAAc;AAGnB,SAAK,gBAAgB;AAGrB,SAAK,cAAc;AAGnB,SAAK,UAAU;AAAA,MACd,MAAM,MAAO,KAAK,cAAc;AAAA,MAChC,QAAQ,MAAO,KAAK,gBAAgB;AAAA,MACpC,SAAS,CAAC,SAAU,KAAK,cAAc;AAAA,IACxC;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ,QAAQ,MAAMC,QAAO,MAAM;AAClC,QAAI,UAAU,MAAM;AACnB,UAAIA,UAAS,MAAM;AACS,QAAC,OAAO,IAAI,EAAGA,MAAK,IAAI;AAAA,MACpD,OAAO;AACc,QAAC,OAAO,IAAI,IAAK;AAAA,MACtC;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,QAAQ,MAAMA,QAAO;AAC3B,QAAI,UAAU,MAAM;AACnB,UAAIA,WAAU,QAAQA,WAAU,QAAW;AACf,QAAC,OAAO,IAAI,EAAG,OAAOA,QAAO,CAAC;AAAA,MAC1D,OAAO;AACN,eAAO,OAAO,IAAI;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AACD;;;AC9CO,IAAMC,cAAN,cAAyBC,YAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1C,YAAY,OAAO,OAAO;AACzB,UAAM;AAGN,SAAK,cAAc;AAGnB,SAAK,gBAAgB;AAGrB,SAAK,cAAc;AAGnB,SAAK,UAAU;AAAA,MACd,MAAM,MAAO,KAAK,cAAc;AAAA,MAChC,QAAQ,MAAO,KAAK,gBAAgB;AAAA,MACpC,SAAS,CAAC,SAAU,KAAK,cAAc;AAAA,IACxC;AAGA,SAAK,QAAQ;AAGb,SAAK,QAAQ;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,MAAM,QAAQ,MAAMC,QAAO;AAChC,QAAI,MAAM;AACT,UAAI,KAAK,OAAO;AACf,cAAM,eAAe,KAAK;AAC1B,cAAM,iBAAiB,KAAK;AAC5B,cAAM,eAAe,KAAK;AAC1B,aAAK,cAAc;AACnB,aAAK,gBAAgB;AACrB,aAAK,cAAc;AAEnB,aAAK,MAAM,KAAK,KAAK,SAAS,MAAM,QAAQ,MAAMA,MAAK;AAEvD,YAAI,KAAK,aAAa;AACrB,iBAAO,KAAK;AACZ,eAAK,QAAQ,QAAQ,MAAMA,QAAO,IAAI;AAAA,QACvC;AAEA,YAAI,KAAK,eAAe;AACvB,eAAK,OAAO,QAAQ,MAAMA,MAAK;AAAA,QAChC;AAEA,cAAM,UAAU,KAAK;AACrB,cAAM,UAAU,KAAK;AAErB,aAAK,cAAc;AACnB,aAAK,gBAAgB;AACrB,aAAK,cAAc;AAEnB,YAAI;AAAS,iBAAO;AACpB,YAAI;AAAS,iBAAO;AAAA,MACrB;AAGA,UAAI;AAEJ,WAAK,OAAO,MAAM;AAEjB,cAAM,QAAQ,KAAK,GAAG;AAEtB,YAAI,SAAS,OAAO,UAAU,UAAU;AACvC,cAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,kBAAM;AAAA;AAAA,cAAuC;AAAA;AAC7C,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,oBAAM,OAAO,MAAM,CAAC;AACpB,kBAAIC,QAAO,IAAI,GAAG;AACjB,oBAAI,CAAC,KAAK,MAAM,MAAM,MAAM,KAAK,CAAC,GAAG;AAEpC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAWA,QAAO,KAAK,GAAG;AACzB,iBAAK,MAAM,OAAO,MAAM,KAAK,IAAI;AAAA,UAClC;AAAA,QACD;AAAA,MACD;AAEA,UAAI,KAAK,OAAO;AACf,cAAM,eAAe,KAAK;AAC1B,cAAM,iBAAiB,KAAK;AAC5B,aAAK,cAAc;AACnB,aAAK,gBAAgB;AAErB,aAAK,MAAM,KAAK,KAAK,SAAS,MAAM,QAAQ,MAAMD,MAAK;AAEvD,YAAI,KAAK,aAAa;AACrB,iBAAO,KAAK;AACZ,eAAK,QAAQ,QAAQ,MAAMA,QAAO,IAAI;AAAA,QACvC;AAEA,YAAI,KAAK,eAAe;AACvB,eAAK,OAAO,QAAQ,MAAMA,MAAK;AAAA,QAChC;AAEA,cAAM,UAAU,KAAK;AAErB,aAAK,cAAc;AACnB,aAAK,gBAAgB;AAErB,YAAI;AAAS,iBAAO;AAAA,MACrB;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAQA,SAASC,QAAO,OAAO;AACtB,SACC,UAAU,QAAQ,OAAO,UAAU,YAAY,UAAU,SAAS,OAAO,MAAM,SAAS;AAE1F;;;ACtIO,SAASC,MAAK,KAAK,EAAE,OAAO,MAAM,GAAG;AAC3C,QAAM,WAAW,IAAIC,YAAW,OAAO,KAAK;AAC5C,SAAO,SAAS,MAAM,KAAK,IAAI;AAChC;;;ACHO,SAAS,wBAAwB,aAAa;AACnD,MAAI,YAAY,SAAS,uBAAuB;AAC9C,WAAO,EAAC,GAAG,aAAa,MAAM,qBAAoB;AAAA,EACpD;AAEA,MAAI,YAAY,SAAS,oBAAoB;AAC3C,WAAO,EAAC,GAAG,aAAa,MAAM,kBAAiB;AAAA,EAIjD;AAGA,QAAM,IAAI,MAAM,kBAAkB,YAAY,OAAO,sBAAsB;AAC7E;;;AClBO,SAAS,cAAc,MAAM;AAClC,SAAO;AAAA,IACL,KAAK,SAAS,yBACZ,KAAK,SAAS,sBACd,KAAK,SAAS;AAAA,EAClB;AACF;;;AC4CO,SAAS,cAAcC,UAAS;AAGrC,QAAM,WAAWA,YAAW,CAAC;AAC7B,QAAM,UAAU,SAAS,WAAW;AACpC,QAAM,mBAAmB,SAAS,oBAAoB;AACtD,QAAM,eAAe,SAAS,gBAAgB;AAC9C,QAAM,SACJ,SAAS,WAAW,SAAY,wBAAwB,SAAS;AACnE,QAAM,aACJ,SAAS,eAAe,SAAY,mBAAmB,SAAS;AAClE,QAAM,qBAAqB,SAAS,sBAAsB;AAC1D,QAAM,kBAAkB,SAAS,mBAAmB;AACpD,QAAM,aAAa,SAAS,cAAc;AAE1C,SAAO,CAAC,MAAM,SAAS;AAErB,UAAM,sBAAsB,CAAC;AAE7B,UAAM,cAAc,CAAC;AAErB,UAAM,UAAU,CAAC;AACjB,QAAI,iBAAiB;AAErB,QAAI;AAEJ,QAAI;AAEJ,QAAI;AAIJ,QAAI,CAAC,KAAK;AAAU,WAAK,WAAW,CAAC;AAErC,QAAI,YAAY;AACd,cAAQ,KAAK,iBAAiB,UAAU;AAAA,IAC1C;AAEA,QAAI,eAAe,eAAe,iBAAiB;AACjD,cAAQ,KAAK,sBAAsB,eAAe;AAAA,IACpD;AAEA,QAAI,eAAe,aAAa,QAAQ;AACtC,cAAQ,KAAK,UAAU,MAAM;AAAA,IAC/B;AAEA,QAAI,eAAe,aAAa,YAAY;AAC1C,cAAQ,KAAK,cAAc,UAAU;AAAA,IACvC;AAEA,QAAI,QAAQ,SAAS,GAAG;AACtB,WAAK,SAAS,QAAQ,EAAC,MAAM,SAAS,OAAO,QAAQ,KAAK,GAAG,EAAC,CAAC;AAAA,IACjE;AAEA,QAAI,eAAe,aAAa,oBAAoB;AAClD,UAAI,CAAC,QAAQ;AACX,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,gBAAU;AAAA,QACR,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,OAAO,EAAC,MAAM,cAAc,MAAM,OAAO,MAAM,GAAG,EAAE,CAAC,EAAC;AAAA,UACxD;AAAA,QACF;AAAA,QACA,QAAQ,EAAC,MAAM,WAAW,OAAO,mBAAkB;AAAA,MACrD,CAAC;AAAA,IACH;AAIA,SAAK,SAAS,KAAK,MAAM;AAMvB,UAAI,MAAM,SAAS,4BAA4B;AAC7C,YAAI,QAAQ;AACV,eAAK;AAAA,YACH,gDACEC,mBAAkB,mBAAmB,MAAM,CAAC,IAC5C;AAAA,YACF,mBAAmB,KAAK;AAAA,YACxB;AAAA,UACF;AAAA,QACF;AAEA,iBAAS;AACT,oBAAY,KAAK;AAAA,UACf,MAAM;AAAA,UACN,MAAM;AAAA,UACN,cAAc;AAAA,YACZ;AAAA,cACE,MAAM;AAAA,cACN,IAAI,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,cAC1C,MAAM,cAAc,MAAM,WAAW,IACjC,wBAAwB,MAAM,WAAW,IACzC,MAAM;AAAA,YACZ;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH,WAIS,MAAM,SAAS,4BAA4B,MAAM,QAAQ;AAChE,cAAM;AAAA;AAAA,UAAuC,MAAM;AAAA;AAGnD,cAAM,aAAa,MAAM,WAAW,OAAO,CAAC,cAAc;AACxD,cAAI,UAAU,SAAS,SAAS,WAAW;AACzC,gBAAI,QAAQ;AACV,mBAAK;AAAA,gBACH,gDACEA,mBAAkB,mBAAmB,MAAM,CAAC,IAC5C;AAAA,gBACF,mBAAmB,KAAK;AAAA,gBACxB;AAAA,cACF;AAAA,YACF;AAEA,qBAAS;AAIT,kBAAM,aAAa,CAAC;AAGpB,gBAAI,UAAU,MAAM,SAAS,WAAW;AACtC,yBAAW,KAAK;AAAA,gBACd,MAAM;AAAA,gBACN,OAAO,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,cAC/C,CAAC;AAAA,YACH,OAAO;AAEL,oBAAM,kBAAkB;AAAA,gBACtB,MAAM;AAAA,gBACN,UAAU,UAAU;AAAA,gBACpB,OAAO,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,cAC/C;AACA,cAAAC,QAAO,UAAU,OAAO,eAAe;AACvC,yBAAW,KAAK,eAAe;AAAA,YACjC;AAGA,kBAAM,OAAO,EAAC,MAAM,WAAW,OAAO,OAAO,MAAK;AAClD,YAAAA,QAAO,QAAQ,IAAI;AAGnB,kBAAM,cAAc;AAAA,cAClB,MAAM;AAAA,cACN;AAAA,cACA,QAAQ;AAAA,YACV;AACA,YAAAA,QAAO,WAAW,WAAW;AAC7B,sBAAU,WAAW;AAErB,mBAAO;AAAA,UACT;AAEA,iBAAO;AAAA,QACT,CAAC;AAGD,YAAI,MAAM,WAAW,SAAS,GAAG;AAC/B,uBAAa,KAAK;AAAA,QACpB;AAAA,MACF,WAME,MAAM,SAAS,4BACf,MAAM,SAAS,wBACf;AACA,qBAAa,KAAK;AAAA,MACpB,WAAW,MAAM,SAAS,qBAAqB;AAC7C,kBAAU,KAAK;AAAA,MACjB,WACE,MAAM,SAAS;AAAA,OAEd,MAAM,WAAW,SAAS,iBACzB,MAAM,WAAW,SAAS,eAC5B;AACA,kBAAU;AACV,oBAAY,KAAK,GAAG,iBAAiB,MAAM,YAAY,QAAQ,MAAM,CAAC,CAAC;AAAA,MAMzE,OAAO;AACL,oBAAY,KAAK,KAAK;AAAA,MACxB;AAAA,IACF;AAGA,QAAI,CAAC,SAAS;AACZ,kBAAY,KAAK,GAAG,iBAAiB,QAAW,QAAQ,MAAM,CAAC,CAAC;AAAA,IAClE;AAEA,wBAAoB,KAAK,CAAC,cAAc,SAAS,CAAC;AAElD,QAAI,iBAAiB,iBAAiB;AACpC,kBAAY,KAAK;AAAA,QACf,MAAM;AAAA,QACN,UAAU;AAAA,UACR,MAAM;AAAA,UACN,YAAY;AAAA,YACV,GAAG,MAAM,KAAK,EAAC,QAAQ,eAAc,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMtC,CAAC,GAAGC,YAAW;AAAA,gBACb,MAAM;AAAA,gBACN,UAAU,EAAC,MAAM,cAAc,MAAM,gBAAgBA,SAAQ,GAAE;AAAA,cACjE;AAAA,YACF;AAAA,YACA,GAAG,oBAAoB,IAAI,CAAC,MAAM;AAEhC,oBAAM,OAAO;AAAA,gBACX,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,UAAU;AAAA,gBACV,WAAW,OAAO,MAAM;AAAA,gBACxB,KAAK;AAAA,kBACH,MAAM;AAAA,kBACN,MAAM,OAAO,MAAM,WAAW,IAAI,EAAE,CAAC;AAAA,gBACvC;AAAA,gBACA,OAAO;AAAA,kBACL,MAAM;AAAA,kBACN,MAAM,OAAO,MAAM,WAAW,IAAI,EAAE,CAAC;AAAA,gBACvC;AAAA,cACF;AAEA,qBAAO;AAAA,YACT,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,kBAAY,KAAK;AAAA,QACf,MAAM;AAAA,QACN,aAAa,EAAC,MAAM,cAAc,MAAM,aAAY;AAAA,MACtD,CAAC;AAAA,IACH;AAEA,SAAK,OAAO;AAEZ,QAAI,SAAS;AACX,MAAAC,MAAK,MAAM;AAAA,QACT,MAAM,MAAM;AACV,cACE,KAAK,SAAS,sBACd,YAAY,QACZ,KAAK,OAAO,SAAS,kBACrB,KAAK,SAAS,SAAS,gBACvB,KAAK,OAAO,KAAK,SAAS,YAC1B,KAAK,OAAO,SAAS,SAAS,UAC9B,KAAK,SAAS,SAAS,OACvB;AAEA,kBAAMC,eAAc,EAAC,MAAM,WAAW,OAAO,QAAO;AACpD,iBAAK,QAAQA,YAAW;AAAA,UAC1B;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAMA,aAAS,aAAa,MAAM;AAC1B,UAAI,KAAK,SAAS,0BAA0B;AAM1C,YAAI,KAAK,aAAa;AACpB,8BAAoB;AAAA,YAClB,GAAG,QAAQ,KAAK,WAAW,EAAE,MAAM,aAAa,KAAK;AAAA,UACvD;AAAA,QACF;AAMA,aAAK,SAAS,KAAK,YAAY;AAC7B,8BAAoB,KAAK,MAAM,SAAS,IAAI;AAAA,QAC9C;AAAA,MACF;AAEA,gBAAU,IAAI;AAAA,IAChB;AAMA,aAAS,UAAU,MAAM;AAGvB,UAAI,WAAW,KAAK,QAAQ;AAC1B,YAAI,QAAQ,OAAO,KAAK,OAAO,KAAK;AAEpC,YAAI;AAEF,kBAAQ,OAAO,IAAI,IAAI,KAAK,CAAC;AAAA,QAC/B,QAAE;AAEA,cAAI,aAAa,KAAK,KAAK,GAAG;AAC5B,oBAAQ,OAAO,IAAI,IAAI,OAAO,OAAO,CAAC;AAAA,UACxC;AAAA,QAMF;AAGA,cAAM,UAAU,EAAC,MAAM,WAAW,MAAK;AACvC,QAAAH,QAAO,KAAK,QAAQ,OAAO;AAC3B,aAAK,SAAS;AAAA,MAChB;AAGA,UAAI;AAEJ,UAAII;AAEJ,UAAI,iBAAiB,iBAAiB;AACpC;AAAA;AAAA,UAEE,KAAK,SAAS,uBACd,KAAK,SAAS;AAAA,UAEb,KAAK,SAAS,4BAA4B,KAAK;AAAA,UAChD;AACA,cAAI,CAAC,kBAAkB;AACrB,iBAAK;AAAA,cACH;AAAA,cACA,mBAAmB,IAAI;AAAA,cACvB;AAAA,YACF;AAAA,UACF;AAIA,cAAI,CAAC,KAAK,QAAQ;AAChB,kBAAM,IAAI,MAAM,sCAAsC;AAAA,UACxD;AAaA,gBAAM,WAAW,EAAC,MAAM,oBAAoB,QAAQ,KAAK,OAAM;AAC/D,UAAAJ,QAAO,MAAM,QAAQ;AACrB,UAAAI,QAAO,EAAC,MAAM,mBAAmB,SAAQ;AAEzC,eACG,KAAK,SAAS,uBACb,KAAK,SAAS,6BAChB,KAAK,WAAW,WAAW,GAC3B;AACA,sBAAU,EAAC,MAAM,uBAAuB,YAAYA,MAAI;AAAA,UAC1D,OAAO;AACL,sBAAU;AAAA,cACR,MAAM;AAAA,cACN,MAAM;AAAA,cACN,cACE,KAAK,SAAS,yBACV;AAAA,gBACE;AAAA,kBACE,MAAM;AAAA,kBACN,IAAI;AAAA,oBACF,MAAM;AAAA,oBACN,MAAM,eAAe,EAAE;AAAA,kBACzB;AAAA,kBACA,MAAAA;AAAA,gBACF;AAAA,cACF,IACA,yBAAyB,KAAK,YAAYA,KAAI;AAAA,YACtD;AAAA,UACF;AAAA,QACF,WAAW,KAAK,aAAa;AAC3B,oBAAU,KAAK;AAAA,QACjB,OAAO;AAEL,gBAAM,cAAc,KAAK,WACtB;AAAA,YACC,CAAC,cAAc,UAAU,MAAM,SAAS,UAAU,SAAS;AAAA,UAC7D,EACC,IAAI,CAAC,eAAe;AAAA,YACnB,MAAM;AAAA,YACN,IAAI,UAAU;AAAA,YACd,MAAM,UAAU;AAAA,UAClB,EAAE;AAEJ,cAAI,YAAY,SAAS,GAAG;AAC1B,sBAAU;AAAA,cACR,MAAM;AAAA,cACN,MAAM;AAAA,cACN,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,QACF;AAAA,MACF,OAAO;AACL,kBAAU;AAAA,MACZ;AAEA,UAAI,SAAS;AACX,oBAAY,KAAK,OAAO;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AAOA,WAAS,iBAAiB,SAAS,mBAAmB;AAEpD,UAAMC,WAAU;AAAA,MACd,MAAM;AAAA,MACN,gBAAgB;AAAA,QACd,MAAM;AAAA,QACN,MAAM,EAAC,MAAM,iBAAiB,MAAM,YAAW;AAAA,QAC/C,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,UAAU,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,UAC9C;AAAA,QACF;AAAA,QACA,aAAa;AAAA,MACf;AAAA,MACA,gBAAgB;AAAA,QACd,MAAM;AAAA,QACN,MAAM,EAAC,MAAM,iBAAiB,MAAM,YAAW;AAAA,MACjD;AAAA,MACA,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,gBAAgB;AAAA,YACd,MAAM;AAAA,YACN,MAAM,EAAC,MAAM,iBAAiB,MAAM,oBAAmB;AAAA,YACvD,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,UAAU,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,cAC9C;AAAA,YACF;AAAA,YACA,aAAa;AAAA,UACf;AAAA,UACA,gBAAgB;AAAA,UAChB,UAAU,CAAC;AAAA,QACb;AAAA,MACF;AAAA,IACF;AAEA,QAAI;AAAA;AAAA,MAAoCA;AAAA;AAExC,QAAI,CAAC,mBAAmB;AACtB,eAAS;AAAA,QACP,MAAM;AAAA,QACN,MAAM,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,QAC5C,YAAY;AAAA,QACZ,WAAW;AAAA,UACT,MAAM;AAAA,UACN,QAAQ,EAAC,MAAM,cAAc,MAAM,oBAAmB;AAAA,UACtD,WAAW,CAAC,EAAC,MAAM,cAAc,MAAM,QAAO,CAAC;AAAA,UAC/C,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAEA,QAAI,WAAW,WAAW,EAAC,MAAM,WAAW,OAAO,KAAI;AAGvD,QACE;AAAA,IAEA,SAAS,SAAS;AAAA,IAElB,SAAS,SAAS,WAAW;AAAA,IAE7B,SAAS,SAAS,CAAC,EAAE,SAAS,cAC9B;AAEA,iBAAW,SAAS,SAAS,CAAC;AAAA,IAChC;AAEA,WAAO;AAAA,MACL;AAAA,QACE,MAAM;AAAA,QACN,IAAI,EAAC,MAAM,cAAc,MAAM,oBAAmB;AAAA,QAClD,QAAQ,CAAC,EAAC,MAAM,cAAc,MAAM,QAAO,CAAC;AAAA,QAC5C,MAAM;AAAA,UACJ,MAAM;AAAA,UACN,MAAM,CAAC,EAAC,MAAM,mBAAmB,SAAQ,CAAC;AAAA,QAC5C;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,IAAI,EAAC,MAAM,cAAc,MAAM,aAAY;AAAA,QAC3C,QAAQ;AAAA,UACN;AAAA,YACE,MAAM;AAAA,YACN,MAAM,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,YACxC,OAAO,EAAC,MAAM,oBAAoB,YAAY,CAAC,EAAC;AAAA,UAClD;AAAA,QACF;AAAA,QACA,MAAM;AAAA,UACJ,MAAM;AAAA,UACN,MAAM,CAAC,EAAC,MAAM,mBAAmB,UAAU,OAAM,CAAC;AAAA,QACpD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;ACplBO,SAAS,iBAAiB,aAAa;AAC5C,MAAIC,SAAQ;AAEZ,MAAI;AAEJ,SAAO,EAAEA,SAAQ,YAAY,QAAQ;AACnC,UAAM,QAAQ,YAAYA,MAAK;AAC/B,WAAO,OAAO,EAAC,MAAM,oBAAoB,MAAM,UAAU,KAAK,MAAK,IAAI;AAAA,EACzE;AAIA,MAAI,CAAC;AAAM,UAAM,IAAI,MAAM,+CAA+C;AAE1E,SAAO;AACT;;;ACgCA,IAAMC,OAAM,CAAC,EAAE;AAWR,SAAS,gBAAgBC,UAAS;AAGvC,QAAM,EAAC,aAAAC,cAAa,sBAAsB,aAAY,IAAID,YAAW,CAAC;AAEtE,SAAO,CAAC,MAAM,SAAS;AAErB,UAAM,YAAY,QAAQ,IAAI;AAE9B,UAAM,UAAU,CAAC;AACjB,QAAI,iBAAiB;AACrB,QAAI,oBAAoB;AAExB,QAAI;AAEJ,IAAAE,MAAK,MAAM;AAAA,MACT,MAAM,MAAM;AACV,cAAM;AAAA;AAAA,UACJ,UAAU,IAAI,IAAI,IAAI;AAAA;AAGxB,YACE,KAAK,SAAS,yBACd,KAAK,SAAS,wBACd,KAAK,SAAS,2BACd;AACA,kBAAQ,KAAK;AAAA,YACX,SAAS,CAAC;AAAA,YACV,YAAY,CAAC;AAAA,YACb,MAAM,CAAC;AAAA,YACP,YAAY,CAAC;AAAA,YACb,0BAA0B,oBAAI,IAAI;AAAA,YAClC;AAAA,UACF,CAAC;AAGD,cACE,gBAAgB,MAAM,YAAY,KAClC,YACA,CAAC,QAAQ,UAAU,WAAW,GAC9B;AACA,oBAAQ,CAAC,EAAE,WAAW,KAAK,WAAW;AAAA,UACxC;AAAA,QACF;AAEA,cAAM,UAAU,QAAQ,CAAC;AACzB,YACE,CAAC,WACA,CAAC,gBAAgB,QAAQ,MAAM,mBAAmB,KACjD,CAAC,sBACH;AACA;AAAA,QACF;AAEA,YAAI,UAAU;AACZ,mBAAS,OAAO;AAChB,yBAAe;AAAA,QACjB;AAEA,YAAI,gBAAgB,KAAK,SAAS,cAAc;AAC9C,cAAIC,QAAO,KAAK,eAAe;AAG/B,cAAIA,MAAK,SAAS,uBAAuB;AAEvC,kBAAM,MAAM,CAAC;AAGb,mBAAOA,MAAK,SAAS,uBAAuB;AAC1C,kBAAI,QAAQA,MAAK,SAAS,IAAI;AAC9B,cAAAA,QAAOA,MAAK;AAAA,YACd;AAEA,gBAAI,QAAQA,MAAK,IAAI;AACrB,kBAAM,SAAS,IAAI,KAAK,GAAG;AAC3B,kBAAM,KAAKA,MAAK;AAEhB,kBAAM,YAAY,QAAQ,cAAc,EAAE;AAE1C,gBAAI,CAACJ,KAAI,KAAK,QAAQ,YAAY,MAAM,GAAG;AACzC,oBAAM;AAAA;AAAA,gBACJ,aAAa;AAAA;AAEf,kBACE,CAAC;AAAA;AAAA,cAGA,eACC,YAAY,KAAK,SAAS,yBAC1B,gBAAgB,YAAY,MAAM,mBAAmB,GACvD;AACA,wBAAQ,WAAW,MAAM,IAAI,EAAC,MAAM,WAAW,KAAI;AAAA,cACrD;AAAA,YACF;AAEA,gBAAI,CAAC,QAAQ,QAAQ,SAAS,EAAE,KAAK,CAAC,WAAW;AAC/C,sBAAQ,QAAQ,KAAK,EAAE;AAAA,YACzB;AAAA,UACF,WAESI,MAAK,SAAS,qBAAqB;AAAA,UAE5C,WAKS,KAAiBA,MAAK,IAAI,KAAK,CAAC,SAAS,KAAKA,MAAK,IAAI,GAAG;AACjE,kBAAM,KAAKA,MAAK;AAEhB,gBAAI,CAAC,QAAQ,cAAc,EAAE,GAAG;AAG9B,kBAAI,OAAO,eAAe,CAACJ,KAAI,KAAK,QAAQ,YAAY,EAAE,GAAG;AAC3D,wBAAQ,WAAW,EAAE,IAAI,EAAC,MAAM,WAAW,KAAI;AAAA,cACjD;AAEA,kBAAI,CAAC,QAAQ,WAAW,SAAS,EAAE,GAAG;AACpC,wBAAQ,WAAW,KAAK,EAAE;AAAA,cAC5B;AAAA,YACF;AAAA,UACF,WAGS,KAAK,QAAQ,KAAK,KAAK,iBAAiB;AAAA,UAIjD,OAAO;AACL,kBAAM,KAAKI,MAAK;AAEhB,gBAAI,CAAC,QAAQ,KAAK,SAAS,EAAE,GAAG;AAC9B,sBAAQ,KAAK,KAAK,EAAE;AAAA,YACtB;AAGA,gBAAI,kBAAkB,CAAC,eAAe,EAAE;AACxC,gBAAI,KAAiB,EAAE,MAAM,OAAO;AAClC,kBAAI,uBACF,QAAQ,yBAAyB,IAAI,EAAE;AACzC,kBAAI,yBAAyB,QAAW;AACtC,uCAAuB,aAAa,QAAQ,yBAAyB;AACrE,wBAAQ,yBAAyB,IAAI,IAAI,oBAAoB;AAAA,cAC/D;AAEA,gCAAkB,CAAC,oBAAoB;AAAA,YACzC;AAEA,iBAAK,eAAe,OAClB,0BAA0B,eAAe;AAE3C,gBAAI,KAAK,gBAAgB;AACvB,mBAAK,eAAe,OAClB,0BAA0B,eAAe;AAAA,YAC7C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,MAAM,MAAM;AAEV,cAAM,WAAW,CAAC;AAElB,cAAM,SAAS,CAAC;AAEhB,cAAM,aAAa,CAAC;AAEpB,cAAM,eAAe,CAAC;AAEtB,YAAI,gBAAgB,aAAa,SAAS,MAAM;AAE9C,yBAAe,aAAa;AAAA,QAC9B;AAEA,YACE,KAAK,SAAS,yBACd,KAAK,SAAS,wBACd,KAAK,SAAS,2BACd;AACA,gBAAM,KAAK;AACX,gBAAM,QAAQ,QAAQ,QAAQ,SAAS,CAAC;AAExC,cAAIA;AAEJ,eAAKA,SAAQ,MAAM,MAAM;AACvB,qBAAS,KAAK;AAAA,cACZ,MAAM;AAAA,cACN,MAAM;AAAA,cACN,KAAK,KAAiBA,KAAI,IACtB,EAAC,MAAM,cAAc,MAAAA,MAAI,IACzB,EAAC,MAAM,WAAW,OAAOA,MAAI;AAAA,cACjC,OAAO,EAAC,MAAM,WAAW,OAAOA,MAAI;AAAA,cACpC,QAAQ;AAAA,cACR,WAAW;AAAA,cACX,UAAU;AAAA,YACZ,CAAC;AAAA,UACH;AAEA,iBAAO,KAAK,GAAG,MAAM,UAAU;AAE/B,eAAKA,SAAQ,MAAM,SAAS;AAG1B,gBAAI,CAAC,OAAO,SAASA,KAAI,GAAG;AAC1B,qBAAO,KAAKA,KAAI;AAAA,YAClB;AAAA,UACF;AAGA,gBAAM,aAAa,CAAC;AAEpB,cACE,SAAS,SAAS,KAClB,OAAO,SAAS,KAChB,MAAM,yBAAyB,OAAO,GACtC;AACA,gBAAI,sBAAsB;AACxB,+BAAiB;AACjB,yBAAW,KAAK;AAAA,gBACd,MAAM;AAAA,gBACN,QAAQ,EAAC,MAAM,cAAc,MAAM,qBAAoB;AAAA,gBACvD,WAAW,CAAC;AAAA,gBACZ,UAAU;AAAA,cACZ,CAAC;AAAA,YACH;AAIA,gBACE,gBAAgB,MAAM,MAAM,YAAY,KACxC,gBAAgB,MAAM,MAAM,mBAAmB,GAC/C;AACA,yBAAW,KAAK,uBAAuB,CAAC,SAAS,YAAY,CAAC,CAAC;AAAA,YACjE;AAEA,gBAAI,SAAS,SAAS,KAAK,WAAW,SAAS,GAAG;AAChD,yBAAW,QAAQ;AAAA,gBACjB,MAAM;AAAA,gBACN,YAAY;AAAA,cACd,CAAC;AAAA,YACH;AAIA,gBAAI,iBACF,WAAW,SAAS,IAChB;AAAA,cACE,MAAM;AAAA,cACN,QAAQ,uBAAuB,CAAC,UAAU,QAAQ,CAAC;AAAA,cACnD,WAAW;AAAA,cACX,UAAU;AAAA,YACZ,IACA,WAAW,CAAC,EAAE,SAAS;AAAA;AAAA;AAAA,cAGvB;AAAA,gBACE,MAAM;AAAA,gBACN,UAAU;AAAA,gBACV,MAAM,WAAW,CAAC;AAAA,gBAClB,OAAO,EAAC,MAAM,oBAAoB,YAAY,CAAC,EAAC;AAAA,cAClD;AAAA,gBACA,WAAW,CAAC;AAGlB,gBAAI;AASJ,gBAAI,OAAO,SAAS,GAAG;AACrB,kCAAoB;AAAA,gBAClB,MAAM;AAAA,gBACN,YAAY,OAAO,IAAI,CAACA,WAAU;AAAA,kBAChC,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,KAAK;AAAA,oBACH,MAAM;AAAA,oBACN,MAAMA,UAAS,cAAc,YAAYA;AAAA,kBAC3C;AAAA,kBACA,OAAO,EAAC,MAAM,cAAc,MAAAA,MAAI;AAAA,kBAChC,QAAQ;AAAA,kBACR,WAAWA,UAAS;AAAA,kBACpB,UAAU;AAAA,gBACZ,EAAE;AAAA,cACJ;AAAA,YACF;AAEA,gBAAI,MAAM,KAAK,SAAS,GAAG;AACzB,2BAAa,KAAK;AAAA,gBAChB,MAAM;AAAA,gBACN,IAAI,EAAC,MAAM,cAAc,MAAM,cAAa;AAAA,gBAC5C,MAAM;AAAA,cACR,CAAC;AACD,+BAAiB,EAAC,MAAM,cAAc,MAAM,cAAa;AAAA,YAC3D;AAEA,gBAAI,gBAAgB,MAAM,MAAM,mBAAmB,GAAG;AACpD,yBAAW;AAAA,gBACT;AAAA,gBACA;AAAA,cACF,KAAK,MAAM,0BAA0B;AAMnC,6BAAa,KAAK;AAAA,kBAChB,MAAM;AAAA,kBACN,IAAI,EAAC,MAAM,cAAc,MAAM,cAAa;AAAA,kBAC5C,MAAM;AAAA,oBACJ,MAAM;AAAA,oBACN,QAAQ,EAAC,MAAM,cAAc,MAAM,cAAa;AAAA,oBAChD,UAAU,EAAC,MAAM,WAAW,OAAO,GAAE;AAAA,oBACrC,UAAU;AAAA,oBACV,UAAU;AAAA,kBACZ;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAEA,gBAAI,mBAAmB;AACrB,2BAAa,KAAK;AAAA,gBAChB,MAAM;AAAA,gBACN,IAAI;AAAA,gBACJ,MAAM;AAAA,cACR,CAAC;AAAA,YACH;AAEA,gBAAI,aAAa,SAAS,GAAG;AAC3B,yBAAW,KAAK;AAAA,gBACd,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF;AAGA,cAAI;AAGJ,eAAK,OAAO,MAAM,YAAY;AAC5B,gBAAIJ,KAAI,KAAK,MAAM,YAAY,GAAG,GAAG;AACnC,oBAAM,QAAQ,IAAI,MAAM,GAAG;AAC3B,kBAAIK,SAAQ;AACZ,qBAAO,EAAEA,SAAQ,MAAM,QAAQ;AAC7B,sBAAM,UAAU,MAAM,MAAM,GAAGA,MAAK,EAAE,KAAK,GAAG;AAC9C,oBAAI,CAACL,KAAI,KAAK,MAAM,YAAY,OAAO,GAAG;AACxC,wBAAM,WAAW,OAAO,IAAI;AAAA,oBAC1B,MAAM,MAAM,WAAW,GAAG,EAAE;AAAA,oBAC5B,WAAW;AAAA,kBACb;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,gBAAM,aAAa,OAAO,KAAK,MAAM,UAAU,EAAE,KAAK;AACtD,cAAIK,SAAQ;AACZ,iBAAO,EAAEA,SAAQ,WAAW,QAAQ;AAClC,kBAAM,KAAK,WAAWA,MAAK;AAC3B,kBAAM,OAAO,MAAM,WAAW,EAAE;AAChC,kBAAM,QAAQC,mBAAkB,mBAAmB,KAAK,IAAI,CAAC;AAE7D,kBAAMC,cAAa;AAAA,cACjB,EAAC,MAAM,WAAW,OAAO,GAAE;AAAA,cAC3B,EAAC,MAAM,WAAW,OAAO,KAAK,UAAS;AAAA,YACzC;AAEA,gCAAoB;AAEpB,gBAAIL,gBAAe,UAAU,WAAW;AACtC,cAAAK,YAAW,KAAK,EAAC,MAAM,WAAW,OAAO,MAAK,CAAC;AAAA,YACjD;AAEA,uBAAW,KAAK;AAAA,cACd,MAAM;AAAA,cACN,MAAM;AAAA,gBACJ,MAAM;AAAA,gBACN,UAAU;AAAA,gBACV,QAAQ;AAAA,gBACR,UAAU,uBAAuB,GAAG,MAAM,GAAG,CAAC;AAAA,cAChD;AAAA,cACA,YAAY;AAAA,gBACV,MAAM;AAAA,gBACN,YAAY;AAAA,kBACV,MAAM;AAAA,kBACN,QAAQ,EAAC,MAAM,cAAc,MAAM,uBAAsB;AAAA,kBACzD,WAAWA;AAAA,kBACX,UAAU;AAAA,gBACZ;AAAA,cACF;AAAA,cACA,WAAW;AAAA,YACb,CAAC;AAAA,UACH;AAEA,cAAI,WAAW,SAAS,GAAG;AAEzB,gBAAI,GAAG,KAAK,SAAS,kBAAkB;AACrC,iBAAG,OAAO;AAAA,gBACR,MAAM;AAAA,gBACN,MAAM,CAAC,EAAC,MAAM,mBAAmB,UAAU,GAAG,KAAI,CAAC;AAAA,cACrD;AAAA,YACF;AAEA,eAAG,KAAK,KAAK,QAAQ,GAAG,UAAU;AAAA,UACpC;AAEA,kBAAQ,IAAI;AAAA,QACd;AAAA,MACF;AAAA,IACF,CAAC;AAGD,QAAI,kBAAkB,sBAAsB;AAC1C,WAAK,KAAK;AAAA,QACR,qBAAqB,sBAAsB,YAAY;AAAA,MACzD;AAAA,IACF;AAGA,QAAI,mBAAmB;AAErB,YAAM,UAAU;AAAA,QACd,EAAC,MAAM,WAAW,OAAO,YAAW;AAAA,QACpC;AAAA,UACE,MAAM;AAAA,UACN,MAAM,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,UAC5C,YAAY,EAAC,MAAM,WAAW,OAAO,YAAW;AAAA,UAChD,WAAW,EAAC,MAAM,WAAW,OAAO,SAAQ;AAAA,QAC9C;AAAA,QACA,EAAC,MAAM,WAAW,OAAO,KAAI;AAAA,QAC7B,EAAC,MAAM,cAAc,MAAM,KAAI;AAAA,QAC/B;AAAA,UACE,MAAM;AAAA,UACN,OACE;AAAA,QACJ;AAAA,MACF;AAGA,YAAM,aAAa;AAAA,QACjB,EAAC,MAAM,cAAc,MAAM,KAAI;AAAA,QAC/B,EAAC,MAAM,cAAc,MAAM,YAAW;AAAA,MACxC;AAEA,UAAIL,cAAa;AACf,gBAAQ,KAAK;AAAA,UACX,MAAM;AAAA,UACN,MAAM,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,UACxC,YAAY,iBAAiB;AAAA,YAC3B,EAAC,MAAM,WAAW,OAAO,sCAAqC;AAAA,YAC9D,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,YAClC;AAAA,cACE,MAAM;AAAA,cACN,QAAQ,KAAK,OAAO,WAAW,KAAK,OAAO,MAAM;AAAA,YACnD;AAAA,UACF,CAAC;AAAA,UACD,WAAW,EAAC,MAAM,WAAW,OAAO,GAAE;AAAA,QACxC,CAAC;AAED,mBAAW,KAAK,EAAC,MAAM,cAAc,MAAM,QAAO,CAAC;AAAA,MACrD;AAEA,WAAK,KAAK,KAAK;AAAA,QACb,MAAM;AAAA,QACN,IAAI,EAAC,MAAM,cAAc,MAAM,uBAAsB;AAAA,QACrD,WAAW;AAAA,QACX,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,MAAM;AAAA,UACJ,MAAM;AAAA,UACN,MAAM;AAAA,YACJ;AAAA,cACE,MAAM;AAAA,cACN,UAAU;AAAA,gBACR,MAAM;AAAA,gBACN,QAAQ,EAAC,MAAM,cAAc,MAAM,QAAO;AAAA,gBAC1C,WAAW,CAAC,iBAAiB,OAAO,CAAC;AAAA,cACvC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAOA,SAAS,qBAAqB,sBAAsB,cAAc;AAEhE,QAAM,aAAa;AAAA,IACjB;AAAA,MACE,MAAM;AAAA,MACN,UAAU,EAAC,MAAM,cAAc,MAAM,mBAAkB;AAAA,MACvD,OAAO,EAAC,MAAM,cAAc,MAAM,qBAAoB;AAAA,IACxD;AAAA,EACF;AAEA,SAAO,iBAAiB,kBACpB;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,MACZ;AAAA,MACA,uBAAuB,CAAC,aAAa,CAAC,CAAC;AAAA,IACzC;AAAA,EACF,IACA;AAAA,IACE,MAAM;AAAA,IACN;AAAA,IACA,QAAQ,EAAC,MAAM,WAAW,OAAO,qBAAoB;AAAA,EACvD;AACN;AAOA,SAAS,gBAAgB,MAAME,OAAM;AACnC,SAAO,QAAQ,QAAQ,QAAQ,QAAQ,KAAK,MAAM,KAAK,GAAG,SAASA,KAAI;AACzE;AAOA,SAAS,QAAQ,OAAO,IAAI;AAE1B,MAAI,eAAe;AAEnB,SAAO,cAAc;AACnB,QAAI,aAAa,aAAa,IAAI,EAAE,GAAG;AACrC,aAAO;AAAA,IACT;AAGA,mBAAe,aAAa;AAAA,EAC9B;AAEA,SAAO;AACT;;;AC7lBA,IAAM,EAAE,WAAAI,WAAU,IAAI;AAGtB,IAAI,CAAC,OAAO,UAAU,QAAQ;AAE5B,QAAM,IAAI;AAAA,IACR;AAAA,EACF;AACF;AAGA,IAAI,CAAC,OAAO,UAAU,UAAU;AAE9B,QAAM,IAAI;AAAA,IACR;AAAA,EACF;AACF;AAEA,IAAM,sBAAsB;AAAA,EAC1B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AACR;AAGO,IAAM,oBAAoB;AAE1B,IAAM,yBAAyB;AAAA;AAAA,EAEpC,iBAAiB;AAAA,EACjB,0BAA0B;AAAA,EAC1B,gBAAgB;AAAA,EAChB,YAAY;AAAA,EACZ,mBAAmB;AAAA,EACnB,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,OAAO;AAAA,EACP,oBAAoB;AAAA;AAAA,EAEpB,kBAAkB;AAAA,EAClB,iBAAiB;AAAA,EACjB,gBAAgB;AAAA,EAChB,eAAe;AAAA;AAAA,EAEf,yBAAyB;AAAA,EACzB,iBAAiB;AAAA,EACjB,oBAAoB;AAAA,EACpB,kBAAkB;AAAA;AAAA,EAElB,kBAAkB;AAAA,EAClB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,mBAAmB;AAAA,EACnB,uBAAuB;AAAA,EACvB,sBAAsB;AAAA,EACtB,iBAAiB;AAAA,EACjB,aAAa;AACf;AAEA,SAAS,eAAe,OAAO,OAAO;AAIpC,QAAM,EAAE,UAAU,IAAI;AACtB,QAAM,MAAM,GAAG;AACf,MAAI,SAAS,QAAQ,MAAM,SAAS,GAAG;AACrC,cAAU,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,KAAK;AACxC,UAAM,EAAE,OAAO,IAAI;AACnB,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,YAAM,QAAQ,MAAM,CAAC;AACrB,YAAM,MAAM,IAAI;AAChB,gBAAU,MAAM,IAAI,EAAE,OAAO,KAAK;AAAA,IACpC;AAAA,EACF;AACA,QAAM,MAAM,GAAG;AACjB;AAEA,SAAS,2BAA2B,OAAO,MAAM,YAAY,aAAa;AACxE,QAAM,iBAAiB,MAAM,sBAAsB,KAAK,IAAI;AAC5D,MAAI,mBAAmB,mBAAmB;AACxC,WAAO;AAAA,EACT;AACA,QAAM,uBAAuB,MAAM,sBAAsB,WAAW,IAAI;AACxE,MAAI,mBAAmB,sBAAsB;AAE3C,WACG,CAAC,eACA,mBAAmB,MACnB,yBAAyB,MACzB,WAAW,aAAa,QAC1B,iBAAiB;AAAA,EAErB;AACA,MAAI,mBAAmB,MAAM,mBAAmB,IAAI;AAElD,WAAO;AAAA,EACT;AACA,MAAI,KAAK,aAAa,QAAQ,WAAW,aAAa,MAAM;AAE1D,WAAO,CAAC;AAAA,EACV;AACA,MAAI,aAAa;AAEf,WACE,oBAAoB,KAAK,QAAQ,KACjC,oBAAoB,WAAW,QAAQ;AAAA,EAE3C;AACA,SACE,oBAAoB,KAAK,QAAQ,IACjC,oBAAoB,WAAW,QAAQ;AAE3C;AAEA,SAAS,iBAAiB,OAAO,MAAM,YAAY,aAAa;AAI9D,QAAM,EAAE,UAAU,IAAI;AACtB,MAAI,2BAA2B,OAAO,MAAM,YAAY,WAAW,GAAG;AACpE,UAAM,MAAM,GAAG;AACf,cAAU,KAAK,IAAI,EAAE,MAAM,KAAK;AAChC,UAAM,MAAM,GAAG;AAAA,EACjB,OAAO;AACL,cAAU,KAAK,IAAI,EAAE,MAAM,KAAK;AAAA,EAClC;AACF;AAEA,SAAS,SAAS,OAAOC,OAAM,QAAQ,SAAS;AAI9C,QAAM,QAAQA,MAAK,MAAM,IAAI;AAC7B,QAAM,MAAM,MAAM,SAAS;AAC3B,QAAM,MAAM,MAAM,CAAC,EAAE,KAAK,CAAC;AAC3B,MAAI,MAAM,GAAG;AACX,UAAM,MAAM,OAAO;AACnB,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,YAAM,MAAM,SAAS,MAAM,CAAC,EAAE,KAAK,IAAI,OAAO;AAAA,IAChD;AACA,UAAM,MAAM,SAAS,MAAM,GAAG,EAAE,KAAK,CAAC;AAAA,EACxC;AACF;AAEA,SAAS,eAAe,OAAO,UAAU,QAAQ,SAAS;AAMxD,QAAM,EAAE,OAAO,IAAI;AACnB,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,UAAMC,WAAU,SAAS,CAAC;AAC1B,UAAM,MAAM,MAAM;AAClB,QAAIA,SAAQ,KAAK,CAAC,MAAM,KAAK;AAE3B,YAAM,MAAM,QAAQA,SAAQ,MAAM,KAAK,IAAI,MAAMA,QAAO;AAAA,IAC1D,OAAO;AAEL,YAAM,MAAM,IAAI;AAChB,eAAS,OAAOA,SAAQ,OAAO,QAAQ,OAAO;AAC9C,YAAM,MAAM,OAAO,OAAO;AAAA,IAC5B;AAAA,EACF;AACF;AAEA,SAAS,kBAAkB,MAAM;AAI/B,MAAI,cAAc;AAClB,SAAO,eAAe,MAAM;AAC1B,UAAM,EAAE,KAAK,IAAI;AACjB,QAAI,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AAEtC,aAAO;AAAA,IACT,WAAW,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AAEhE,oBAAc,YAAY;AAAA,IAC5B,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,SAAS,0BAA0B,OAAO,MAAM;AAI9C,QAAM,EAAE,UAAU,IAAI;AACtB,QAAM,EAAE,aAAa,IAAI;AACzB,QAAM,MAAM,KAAK,OAAO,GAAG;AAC3B,QAAM,EAAE,OAAO,IAAI;AACnB,MAAI,SAAS,GAAG;AACd,cAAU,mBAAmB,aAAa,CAAC,GAAG,KAAK;AACnD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,YAAM,MAAM,IAAI;AAChB,gBAAU,mBAAmB,aAAa,CAAC,GAAG,KAAK;AAAA,IACrD;AAAA,EACF;AACF;AAEA,IAAI;AAAJ,IACE;AADF,IAEE;AAFF,IAGE;AAHF,IAIE;AAJF,IAKE;AAEK,IAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIvB,QAAQ,MAAM,OAAO;AACnB,UAAM,SAAS,MAAM,OAAO,OAAO,MAAM,WAAW;AACpD,UAAM,EAAE,SAAS,cAAc,IAAI;AACnC,QAAI,iBAAiB,KAAK,YAAY,MAAM;AAC1C,qBAAe,OAAO,KAAK,UAAU,QAAQ,OAAO;AAAA,IACtD;AACA,UAAM,aAAa,KAAK;AACxB,UAAM,EAAE,OAAO,IAAI;AACnB,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,YAAM,YAAY,WAAW,CAAC;AAC9B,UAAI,iBAAiB,UAAU,YAAY,MAAM;AAC/C,uBAAe,OAAO,UAAU,UAAU,QAAQ,OAAO;AAAA,MAC3D;AACA,YAAM,MAAM,MAAM;AAClB,WAAK,UAAU,IAAI,EAAE,WAAW,KAAK;AACrC,YAAM,MAAM,OAAO;AAAA,IACrB;AACA,QAAI,iBAAiB,KAAK,oBAAoB,MAAM;AAClD,qBAAe,OAAO,KAAK,kBAAkB,QAAQ,OAAO;AAAA,IAC9D;AAAA,EACF;AAAA,EACA,gBAAiB,iBAAiB,SAAU,MAAM,OAAO;AACvD,UAAM,SAAS,MAAM,OAAO,OAAO,MAAM,aAAa;AACtD,UAAM,EAAE,SAAS,cAAc,IAAI;AACnC,UAAM,kBAAkB,SAAS,MAAM;AACvC,UAAM,MAAM,GAAG;AACf,UAAM,aAAa,KAAK;AACxB,QAAI,cAAc,QAAQ,WAAW,SAAS,GAAG;AAC/C,YAAM,MAAM,OAAO;AACnB,UAAI,iBAAiB,KAAK,YAAY,MAAM;AAC1C,uBAAe,OAAO,KAAK,UAAU,iBAAiB,OAAO;AAAA,MAC/D;AACA,YAAM,EAAE,OAAO,IAAI;AACnB,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,cAAM,YAAY,WAAW,CAAC;AAC9B,YAAI,iBAAiB,UAAU,YAAY,MAAM;AAC/C,yBAAe,OAAO,UAAU,UAAU,iBAAiB,OAAO;AAAA,QACpE;AACA,cAAM,MAAM,eAAe;AAC3B,aAAK,UAAU,IAAI,EAAE,WAAW,KAAK;AACrC,cAAM,MAAM,OAAO;AAAA,MACrB;AACA,YAAM,MAAM,MAAM;AAAA,IACpB,OAAO;AACL,UAAI,iBAAiB,KAAK,YAAY,MAAM;AAC1C,cAAM,MAAM,OAAO;AACnB,uBAAe,OAAO,KAAK,UAAU,iBAAiB,OAAO;AAC7D,cAAM,MAAM,MAAM;AAAA,MACpB;AAAA,IACF;AACA,QAAI,iBAAiB,KAAK,oBAAoB,MAAM;AAClD,qBAAe,OAAO,KAAK,kBAAkB,iBAAiB,OAAO;AAAA,IACvE;AACA,UAAM,MAAM,GAAG;AACf,UAAM;AAAA,EACR;AAAA,EACA,WAAW;AAAA,EACX,YAAY,MAAM,OAAO;AACvB,UAAM,MAAM,SAAS;AACrB,SAAK,eAAe,MAAM,KAAK;AAAA,EACjC;AAAA,EACA,eAAe,MAAM,OAAO;AAC1B,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,oBAAoB,MAAM,OAAO;AAC/B,UAAM,aAAa,MAAM,sBAAsB,KAAK,WAAW,IAAI;AACnE,QACE,eAAe,qBACd,eAAe,KAAK,KAAK,WAAW,KAAK,KAAK,CAAC,MAAM,KACtD;AAEA,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,WAAW,IAAI,EAAE,KAAK,YAAY,KAAK;AACjD,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,WAAK,KAAK,WAAW,IAAI,EAAE,KAAK,YAAY,KAAK;AAAA,IACnD;AACA,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,YAAY,MAAM,OAAO;AACvB,UAAM,MAAM,MAAM;AAClB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACrC,UAAM,MAAM,IAAI;AAChB,SAAK,KAAK,WAAW,IAAI,EAAE,KAAK,YAAY,KAAK;AACjD,QAAI,KAAK,aAAa,MAAM;AAC1B,YAAM,MAAM,QAAQ;AACpB,WAAK,KAAK,UAAU,IAAI,EAAE,KAAK,WAAW,KAAK;AAAA,IACjD;AAAA,EACF;AAAA,EACA,iBAAiB,MAAM,OAAO;AAC5B,SAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AACvC,UAAM,MAAM,IAAI;AAChB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,EACvC;AAAA,EACA,eAAe,MAAM,OAAO;AAC1B,UAAM,MAAM,OAAO;AACnB,QAAI,KAAK,SAAS,MAAM;AACtB,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AAAA,IACzC;AACA,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,kBAAkB,MAAM,OAAO;AAC7B,UAAM,MAAM,UAAU;AACtB,QAAI,KAAK,SAAS,MAAM;AACtB,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AAAA,IACzC;AACA,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,cAAc,MAAM,OAAO;AACzB,UAAM,MAAM,QAAQ;AACpB,SAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AACzC,UAAM,MAAM,IAAI;AAChB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,EACvC;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,UAAM,SAAS,MAAM,OAAO,OAAO,MAAM,aAAa;AACtD,UAAM,EAAE,SAAS,cAAc,IAAI;AACnC,UAAM;AACN,UAAM,aAAa,SAAS,MAAM;AAClC,UAAM,kBAAkB,aAAa,MAAM;AAC3C,UAAM,MAAM,UAAU;AACtB,SAAK,KAAK,aAAa,IAAI,EAAE,KAAK,cAAc,KAAK;AACrD,UAAM,MAAM,QAAQ,OAAO;AAC3B,UAAM,EAAE,OAAO,WAAW,IAAI;AAC9B,UAAM,EAAE,QAAQ,gBAAgB,IAAI;AACpC,aAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACxC,YAAM,YAAY,WAAW,CAAC;AAC9B,UAAI,iBAAiB,UAAU,YAAY,MAAM;AAC/C,uBAAe,OAAO,UAAU,UAAU,YAAY,OAAO;AAAA,MAC/D;AACA,UAAI,UAAU,MAAM;AAClB,cAAM,MAAM,aAAa,OAAO;AAChC,aAAK,UAAU,KAAK,IAAI,EAAE,UAAU,MAAM,KAAK;AAC/C,cAAM,MAAM,MAAM,OAAO;AAAA,MAC3B,OAAO;AACL,cAAM,MAAM,aAAa,aAAa,OAAO;AAAA,MAC/C;AACA,YAAM,EAAE,WAAW,IAAI;AACvB,YAAM,EAAE,QAAQ,gBAAgB,IAAI;AACpC,eAASC,KAAI,GAAGA,KAAI,iBAAiBA,MAAK;AACxC,cAAM,YAAY,WAAWA,EAAC;AAC9B,YAAI,iBAAiB,UAAU,YAAY,MAAM;AAC/C,yBAAe,OAAO,UAAU,UAAU,iBAAiB,OAAO;AAAA,QACpE;AACA,cAAM,MAAM,eAAe;AAC3B,aAAK,UAAU,IAAI,EAAE,WAAW,KAAK;AACrC,cAAM,MAAM,OAAO;AAAA,MACrB;AAAA,IACF;AACA,UAAM,eAAe;AACrB,UAAM,MAAM,SAAS,GAAG;AAAA,EAC1B;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,UAAM,MAAM,QAAQ;AACpB,QAAI,KAAK,UAAU;AACjB,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAAA,IAC/C;AACA,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,eAAe,MAAM,OAAO;AAC1B,UAAM,MAAM,QAAQ;AACpB,SAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAC7C,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,aAAa,MAAM,OAAO;AACxB,UAAM,MAAM,MAAM;AAClB,SAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AACvC,QAAI,KAAK,SAAS;AAChB,YAAM,EAAE,QAAQ,IAAI;AACpB,UAAI,QAAQ,SAAS,MAAM;AACzB,cAAM,MAAM,SAAS;AAAA,MACvB,OAAO;AACL,cAAM,MAAM,UAAU;AACtB,aAAK,QAAQ,MAAM,IAAI,EAAE,QAAQ,OAAO,KAAK;AAC7C,cAAM,MAAM,IAAI;AAAA,MAClB;AACA,WAAK,QAAQ,KAAK,IAAI,EAAE,QAAQ,MAAM,KAAK;AAAA,IAC7C;AACA,QAAI,KAAK,WAAW;AAClB,YAAM,MAAM,WAAW;AACvB,WAAK,KAAK,UAAU,IAAI,EAAE,KAAK,WAAW,KAAK;AAAA,IACjD;AAAA,EACF;AAAA,EACA,eAAe,MAAM,OAAO;AAC1B,UAAM,MAAM,SAAS;AACrB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACrC,UAAM,MAAM,IAAI;AAChB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,EACvC;AAAA,EACA,iBAAiB,MAAM,OAAO;AAC5B,UAAM,MAAM,KAAK;AACjB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACrC,UAAM,MAAM,UAAU;AACtB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACrC,UAAM,MAAM,IAAI;AAAA,EAClB;AAAA,EACA,aAAa,MAAM,OAAO;AACxB,UAAM,MAAM,OAAO;AACnB,QAAI,KAAK,QAAQ,MAAM;AACrB,YAAM,EAAE,MAAAC,MAAK,IAAI;AACjB,UAAIA,MAAK,KAAK,CAAC,MAAM,KAAK;AACxB,kCAA0B,OAAOA,KAAI;AAAA,MACvC,OAAO;AACL,aAAKA,MAAK,IAAI,EAAEA,OAAM,KAAK;AAAA,MAC7B;AAAA,IACF;AACA,UAAM,MAAM,IAAI;AAChB,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,IACvC;AACA,UAAM,MAAM,IAAI;AAChB,QAAI,KAAK,QAAQ;AACf,WAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AAAA,IAC3C;AACA,UAAM,MAAM,IAAI;AAChB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,EACvC;AAAA,EACA,gBAAiB,iBAAiB,SAAU,MAAM,OAAO;AACvD,UAAM,MAAM,OAAO,KAAK,QAAQ,WAAW,KAAK;AAChD,UAAM,EAAE,KAAK,IAAI;AACjB,QAAI,KAAK,KAAK,CAAC,MAAM,KAAK;AACxB,gCAA0B,OAAO,IAAI;AAAA,IACvC,OAAO;AACL,WAAK,KAAK,IAAI,EAAE,MAAM,KAAK;AAAA,IAC7B;AAEA,UAAM,MAAM,KAAK,KAAK,CAAC,MAAM,MAAM,SAAS,MAAM;AAClD,SAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AACvC,UAAM,MAAM,IAAI;AAChB,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,EACvC;AAAA,EACA,gBAAgB;AAAA,EAChB,kBAAkB,MAAM,OAAO;AAC7B,UAAM,MAAM,aAAa,IAAI;AAAA,EAC/B;AAAA,EACA,qBAAsB,sBAAsB,SAAU,MAAM,OAAO;AACjE,UAAM;AAAA,OACH,KAAK,QAAQ,WAAW,OACtB,KAAK,YAAY,eAAe,gBAChC,KAAK,KAAK,KAAK,GAAG,OAAO;AAAA,MAC5B;AAAA,IACF;AACA,mBAAe,OAAO,KAAK,MAAM;AACjC,UAAM,MAAM,GAAG;AACf,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,EACvC;AAAA,EACA,oBAAoB;AAAA,EACpB,oBAAoB,MAAM,OAAO;AAC/B,8BAA0B,OAAO,IAAI;AACrC,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,mBAAmB,MAAM,OAAO;AAC9B,SAAK,KAAK,GAAG,IAAI,EAAE,KAAK,IAAI,KAAK;AACjC,QAAI,KAAK,QAAQ,MAAM;AACrB,YAAM,MAAM,KAAK;AACjB,WAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,IACvC;AAAA,EACF;AAAA,EACA,iBAAiB,MAAM,OAAO;AAC5B,UAAM,MAAM,YAAY,KAAK,KAAK,GAAG,KAAK,GAAG,UAAU,KAAK,IAAI;AAChE,QAAI,KAAK,YAAY;AACnB,YAAM,MAAM,UAAU;AACtB,YAAM,EAAE,WAAW,IAAI;AACvB,YAAM,EAAE,KAAK,IAAI;AACjB,YAAM,aAAa,MAAM,sBAAsB,IAAI;AACnD,WACG,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,SAClD,eAAe,qBACd,aAAa,MAAM,sBAAsB,kBAC3C;AAEA,cAAM,MAAM,GAAG;AACf,aAAK,KAAK,WAAW,IAAI,EAAE,YAAY,KAAK;AAC5C,cAAM,MAAM,GAAG;AAAA,MACjB,OAAO;AACL,aAAK,WAAW,IAAI,EAAE,YAAY,KAAK;AAAA,MACzC;AACA,YAAM,MAAM,GAAG;AAAA,IACjB;AACA,SAAK,UAAU,KAAK,MAAM,KAAK;AAAA,EACjC;AAAA,EACA,kBAAkB,MAAM,OAAO;AAC7B,UAAM,MAAM,SAAS;AACrB,UAAM,EAAE,WAAW,IAAI;AACvB,UAAM,EAAE,OAAO,IAAI;AAGnB,QAAI,IAAI;AACR,QAAI,SAAS,GAAG;AACd,aAAO,IAAI,UAAU;AACnB,YAAI,IAAI,GAAG;AACT,gBAAM,MAAM,IAAI;AAAA,QAClB;AACA,cAAM,YAAY,WAAW,CAAC;AAC9B,cAAM,OAAO,UAAU,KAAK,CAAC;AAC7B,YAAI,SAAS,KAAK;AAEhB,gBAAM,MAAM,UAAU,MAAM,MAAM,SAAS;AAC3C;AAAA,QACF,WAAW,SAAS,KAAK;AAEvB,gBAAM,MAAM,UAAU,UAAU,MAAM,MAAM,SAAS;AACrD;AAAA,QACF,OAAO;AAEL;AAAA,QACF;AAAA,MACF;AACA,UAAI,IAAI,QAAQ;AACd,cAAM,MAAM,GAAG;AACf,mBAAS;AACP,gBAAM,YAAY,WAAW,CAAC;AAC9B,gBAAM,EAAE,MAAAC,MAAK,IAAI,UAAU;AAC3B,gBAAM,MAAMA,OAAM,SAAS;AAC3B,cAAIA,UAAS,UAAU,MAAM,MAAM;AACjC,kBAAM,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAC3C;AACA,cAAI,EAAE,IAAI,QAAQ;AAChB,kBAAM,MAAM,IAAI;AAAA,UAClB,OAAO;AACL;AAAA,UACF;AAAA,QACF;AACA,cAAM,MAAM,GAAG;AAAA,MACjB;AACA,YAAM,MAAM,QAAQ;AAAA,IACtB;AACA,SAAK,QAAQ,KAAK,QAAQ,KAAK;AAC/B,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,iBAAiB,MAAM,OAAO;AAC5B,UAAM,MAAM,SAAS;AACrB,SAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AACzC,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,yBAAyB,MAAM,OAAO;AACpC,UAAM,MAAM,iBAAiB;AAC7B,SAAK,KAAK,YAAY,IAAI,EAAE,KAAK,aAAa,KAAK;AACnD,QACE,MAAM,sBAAsB,KAAK,YAAY,IAAI,KAAK,QACtD,KAAK,YAAY,KAAK,CAAC,MAAM,KAC7B;AAEA,YAAM,MAAM,GAAG;AAAA,IACjB;AAAA,EACF;AAAA,EACA,uBAAuB,MAAM,OAAO;AAClC,UAAM,MAAM,SAAS;AACrB,QAAI,KAAK,aAAa;AACpB,WAAK,KAAK,YAAY,IAAI,EAAE,KAAK,aAAa,KAAK;AAAA,IACrD,OAAO;AACL,YAAM,MAAM,GAAG;AACf,YAAM,EAAE,WAAW,IAAI,MACrB,EAAE,OAAO,IAAI;AACf,UAAI,SAAS,GAAG;AACd,iBAAS,IAAI,OAAO;AAClB,gBAAM,YAAY,WAAW,CAAC;AAC9B,gBAAM,EAAE,MAAAA,MAAK,IAAI,UAAU;AAC3B,gBAAM,MAAMA,OAAM,SAAS;AAC3B,cAAIA,UAAS,UAAU,SAAS,MAAM;AACpC,kBAAM,MAAM,SAAS,UAAU,SAAS,IAAI;AAAA,UAC9C;AACA,cAAI,EAAE,IAAI,QAAQ;AAChB,kBAAM,MAAM,IAAI;AAAA,UAClB,OAAO;AACL;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,YAAM,MAAM,GAAG;AACf,UAAI,KAAK,QAAQ;AACf,cAAM,MAAM,QAAQ;AACpB,aAAK,QAAQ,KAAK,QAAQ,KAAK;AAAA,MACjC;AACA,YAAM,MAAM,GAAG;AAAA,IACjB;AAAA,EACF;AAAA,EACA,qBAAqB,MAAM,OAAO;AAChC,QAAI,KAAK,YAAY,MAAM;AACzB,YAAM,MAAM,iBAAiB,KAAK,SAAS,OAAO,QAAQ;AAAA,IAC5D,OAAO;AACL,YAAM,MAAM,gBAAgB;AAAA,IAC9B;AACA,SAAK,QAAQ,KAAK,QAAQ,KAAK;AAC/B,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,iBAAiB,MAAM,OAAO;AAC5B,QAAI,KAAK,QAAQ;AACf,YAAM,MAAM,SAAS;AAAA,IACvB;AACA,UAAM,OAAO,KAAK,KAAK,CAAC;AACxB,QAAI,SAAS,OAAO,SAAS,KAAK;AAEhC,YAAM,MAAM,KAAK,OAAO,GAAG;AAAA,IAC7B;AACA,QAAI,KAAK,MAAM,OAAO;AACpB,YAAM,MAAM,QAAQ;AAAA,IACtB;AACA,QAAI,KAAK,MAAM,WAAW;AACxB,YAAM,MAAM,GAAG;AAAA,IACjB;AACA,QAAI,KAAK,UAAU;AACjB,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,KAAK;AACnC,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,WAAK,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,KAAK;AAAA,IACrC;AACA,mBAAe,OAAO,KAAK,MAAM,MAAM;AACvC,UAAM,MAAM,GAAG;AACf,SAAK,KAAK,MAAM,KAAK,IAAI,EAAE,KAAK,MAAM,MAAM,KAAK;AAAA,EACnD;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,SAAK,iBAAiB,MAAM,KAAK;AAAA,EACnC;AAAA,EACA,wBAAwB,MAAM,OAAO;AACnC,UAAM,MAAM,KAAK,QAAQ,WAAW,IAAI,IAAI;AAC5C,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,UAAU,MAAM;AAElB,UAAI,OAAO,WAAW,KAAK,OAAO,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK;AAEpD,cAAM,MAAM,OAAO,CAAC,EAAE,MAAM,OAAO,CAAC,CAAC;AAAA,MACvC,OAAO;AACL,uBAAe,OAAO,KAAK,MAAM;AAAA,MACnC;AAAA,IACF;AACA,UAAM,MAAM,MAAM;AAClB,QAAI,KAAK,KAAK,KAAK,CAAC,MAAM,KAAK;AAE7B,YAAM,MAAM,GAAG;AACf,WAAK,iBAAiB,KAAK,MAAM,KAAK;AACtC,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,WAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAAA,IACvC;AAAA,EACF;AAAA,EACA,eAAe,MAAM,OAAO;AAC1B,UAAM,MAAM,QAAQ,IAAI;AAAA,EAC1B;AAAA,EACA,MAAM,MAAM,OAAO;AACjB,UAAM,MAAM,SAAS,IAAI;AAAA,EAC3B;AAAA,EACA,aAAc,cAAc,SAAU,MAAM,OAAO;AACjD,UAAM,MAAM,KAAK;AACjB,SAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAAA,EAC/C;AAAA,EACA,eAAe;AAAA,EACf,gBAAgB,MAAM,OAAO;AAC3B,UAAM,MAAM,KAAK,WAAW,WAAW,OAAO;AAC9C,QAAI,KAAK,UAAU;AACjB,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,UAAM,MAAM,UAAU,IAAI;AAC1B,qBAAiB,OAAO,KAAK,UAAU,IAAI;AAAA,EAC7C;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,UAAM,EAAE,QAAQ,YAAY,IAAI;AAChC,UAAM,MAAM,GAAG;AACf,UAAM,EAAE,OAAO,IAAI;AACnB,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,YAAM,aAAa,YAAY,CAAC;AAChC,YAAMC,SAAQ,OAAO,CAAC;AACtB,YAAM,MAAMA,OAAM,MAAM,KAAKA,MAAK;AAClC,YAAM,MAAM,IAAI;AAChB,WAAK,WAAW,IAAI,EAAE,YAAY,KAAK;AACvC,YAAM,MAAM,GAAG;AAAA,IACjB;AACA,UAAM,QAAQ,OAAO,OAAO,SAAS,CAAC;AACtC,UAAM,MAAM,MAAM,MAAM,KAAK,KAAK;AAClC,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,UAAM,MAAM,KAAK,MAAM,KAAK,IAAI;AAAA,EAClC;AAAA,EACA,yBAAyB,MAAM,OAAO;AACpC,qBAAiB,OAAO,KAAK,KAAK,IAAI;AACtC,SAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AAAA,EACzC;AAAA,EACA,iBAAkB,kBAAkB,SAAU,MAAM,OAAO;AACzD,UAAM,MAAM,GAAG;AACf,QAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,YAAM,EAAE,SAAS,IAAI,MACnB,EAAE,OAAO,IAAI;AACf,eAAS,IAAI,OAAO;AAClB,cAAMC,WAAU,SAAS,CAAC;AAC1B,YAAIA,YAAW,MAAM;AACnB,eAAKA,SAAQ,IAAI,EAAEA,UAAS,KAAK;AAAA,QACnC;AACA,YAAI,EAAE,IAAI,QAAQ;AAChB,gBAAM,MAAM,IAAI;AAAA,QAClB,OAAO;AACL,cAAIA,YAAW,MAAM;AACnB,kBAAM,MAAM,IAAI;AAAA,UAClB;AACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,cAAc;AAAA,EACd,iBAAiB,MAAM,OAAO;AAC5B,UAAM,SAAS,MAAM,OAAO,OAAO,MAAM,aAAa;AACtD,UAAM,EAAE,SAAS,cAAc,IAAI;AACnC,UAAM,iBAAiB,SAAS,MAAM;AACtC,UAAM,MAAM,GAAG;AACf,QAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,YAAM,MAAM,OAAO;AACnB,UAAI,iBAAiB,KAAK,YAAY,MAAM;AAC1C,uBAAe,OAAO,KAAK,UAAU,gBAAgB,OAAO;AAAA,MAC9D;AACA,YAAM,QAAQ,MAAM;AACpB,YAAM,EAAE,WAAW,IAAI,MACrB,EAAE,OAAO,IAAI;AACf,eAAS,IAAI,OAAO;AAClB,cAAM,WAAW,WAAW,CAAC;AAC7B,YAAI,iBAAiB,SAAS,YAAY,MAAM;AAC9C,yBAAe,OAAO,SAAS,UAAU,gBAAgB,OAAO;AAAA,QAClE;AACA,cAAM,MAAM,cAAc;AAC1B,aAAK,SAAS,IAAI,EAAE,UAAU,KAAK;AACnC,YAAI,EAAE,IAAI,QAAQ;AAChB,gBAAM,MAAM,KAAK;AAAA,QACnB,OAAO;AACL;AAAA,QACF;AAAA,MACF;AACA,YAAM,MAAM,OAAO;AACnB,UAAI,iBAAiB,KAAK,oBAAoB,MAAM;AAClD,uBAAe,OAAO,KAAK,kBAAkB,gBAAgB,OAAO;AAAA,MACtE;AACA,YAAM,MAAM,SAAS,GAAG;AAAA,IAC1B,WAAW,eAAe;AACxB,UAAI,KAAK,YAAY,MAAM;AACzB,cAAM,MAAM,OAAO;AACnB,uBAAe,OAAO,KAAK,UAAU,gBAAgB,OAAO;AAC5D,YAAI,KAAK,oBAAoB,MAAM;AACjC,yBAAe,OAAO,KAAK,kBAAkB,gBAAgB,OAAO;AAAA,QACtE;AACA,cAAM,MAAM,SAAS,GAAG;AAAA,MAC1B,WAAW,KAAK,oBAAoB,MAAM;AACxC,cAAM,MAAM,OAAO;AACnB,uBAAe,OAAO,KAAK,kBAAkB,gBAAgB,OAAO;AACpE,cAAM,MAAM,SAAS,GAAG;AAAA,MAC1B,OAAO;AACL,cAAM,MAAM,GAAG;AAAA,MACjB;AAAA,IACF,OAAO;AACL,YAAM,MAAM,GAAG;AAAA,IACjB;AACA,UAAM;AAAA,EACR;AAAA,EACA,SAAS,MAAM,OAAO;AACpB,QAAI,KAAK,UAAU,KAAK,KAAK,CAAC,MAAM,KAAK;AAEvC,WAAK,iBAAiB,MAAM,KAAK;AAAA,IACnC,OAAO;AACL,UAAI,CAAC,KAAK,WAAW;AACnB,YAAI,KAAK,UAAU;AACjB,gBAAM,MAAM,GAAG;AACf,eAAK,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,KAAK;AACnC,gBAAM,MAAM,GAAG;AAAA,QACjB,OAAO;AACL,eAAK,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,KAAK;AAAA,QACrC;AACA,cAAM,MAAM,IAAI;AAAA,MAClB;AACA,WAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AAAA,IACzC;AAAA,EACF;AAAA,EACA,mBAAmB,MAAM,OAAO;AAC9B,QAAI,KAAK,QAAQ;AACf,YAAM,MAAM,SAAS;AAAA,IACvB;AACA,QAAI,KAAK,UAAU;AACjB,YAAM,MAAM,GAAG;AAAA,IACjB;AACA,SAAK,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,KAAK;AACnC,QAAI,KAAK,UAAU;AACjB,YAAM,MAAM,GAAG;AAAA,IACjB;AACA,QAAI,KAAK,SAAS,MAAM;AACtB,UAAI,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK;AAC5B,cAAM,MAAM,GAAG;AAAA,MACjB;AACA;AAAA,IACF;AACA,UAAM,MAAM,KAAK;AACjB,SAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AACvC,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,cAAc,MAAM,OAAO;AACzB,UAAM,MAAM,GAAG;AACf,QAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,YAAM,EAAE,WAAW,IAAI,MACrB,EAAE,OAAO,IAAI;AACf,eAAS,IAAI,OAAO;AAClB,aAAK,WAAW,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,GAAG,KAAK;AAC7C,YAAI,EAAE,IAAI,QAAQ;AAChB,gBAAM,MAAM,IAAI;AAAA,QAClB,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,UAAM,MAAM,GAAG;AAAA,EACjB;AAAA,EACA,mBAAmB,MAAM,OAAO;AAC9B,mBAAe,OAAO,KAAK,WAAW;AAAA,EACxC;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,QAAI,KAAK,QAAQ;AACf,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA,UAAU,EAAE,KAAK;AAAA,MACnB,IAAI;AACJ,YAAM,MAAM,QAAQ;AACpB,YAAM,mBAAmB,2BAA2B,OAAO,UAAU,IAAI;AACzE,UACE,CAAC,qBACA,SAAS,SAAS,KAChB,KAAK,CAAC,MAAM,QACV,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,QAChC,SAAS,UACT,SAAS,SAAS,CAAC,MAAM,aACxB,aAAa,OAAO,aAAa,OACtC;AAEA,cAAM,MAAM,GAAG;AAAA,MACjB;AACA,UAAI,kBAAkB;AACpB,cAAM,MAAM,SAAS,SAAS,IAAI,OAAO,GAAG;AAC5C,aAAK,IAAI,EAAE,UAAU,KAAK;AAC1B,cAAM,MAAM,GAAG;AAAA,MACjB,OAAO;AACL,aAAK,IAAI,EAAE,UAAU,KAAK;AAAA,MAC5B;AAAA,IACF,OAAO;AAEL,WAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAC7C,YAAM,MAAM,KAAK,QAAQ;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,iBAAiB,MAAM,OAAO;AAE5B,QAAI,KAAK,QAAQ;AACf,YAAM,MAAM,KAAK,QAAQ;AACzB,WAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAAA,IAC/C,OAAO;AACL,WAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAC7C,YAAM,MAAM,KAAK,QAAQ;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,qBAAqB,MAAM,OAAO;AAChC,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACrC,UAAM,MAAM,MAAM,KAAK,WAAW,GAAG;AACrC,SAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AAAA,EACzC;AAAA,EACA,kBAAkB,MAAM,OAAO;AAC7B,SAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACrC,UAAM,MAAM,KAAK;AACjB,SAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AAAA,EACzC;AAAA,EACA,kBAAmB,mBAAmB,SAAU,MAAM,OAAO;AAC3D,UAAM,OAAO,KAAK,aAAa;AAC/B,QAAI,MAAM;AAER,YAAM,MAAM,GAAG;AAAA,IACjB;AACA,qBAAiB,OAAO,KAAK,MAAM,MAAM,KAAK;AAC9C,UAAM,MAAM,MAAM,KAAK,WAAW,GAAG;AACrC,qBAAiB,OAAO,KAAK,OAAO,MAAM,IAAI;AAC9C,QAAI,MAAM;AACR,YAAM,MAAM,GAAG;AAAA,IACjB;AAAA,EACF;AAAA,EACA,mBAAmB;AAAA,EACnB,sBAAsB,MAAM,OAAO;AACjC,UAAM,EAAE,KAAK,IAAI;AACjB,UAAM,aAAa,MAAM,sBAAsB,KAAK,IAAI;AACxD,QACE,eAAe,qBACf,cAAc,MAAM,sBAAsB,uBAC1C;AACA,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,IAAI,EAAE,MAAM,KAAK;AAC3B,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,WAAK,KAAK,IAAI,EAAE,MAAM,KAAK;AAAA,IAC7B;AACA,UAAM,MAAM,KAAK;AACjB,SAAK,KAAK,WAAW,IAAI,EAAE,KAAK,YAAY,KAAK;AACjD,UAAM,MAAM,KAAK;AACjB,SAAK,KAAK,UAAU,IAAI,EAAE,KAAK,WAAW,KAAK;AAAA,EACjD;AAAA,EACA,cAAc,MAAM,OAAO;AACzB,UAAM,MAAM,MAAM;AAClB,UAAM,aAAa,MAAM,sBAAsB,KAAK,OAAO,IAAI;AAC/D,QACE,eAAe,qBACf,aAAa,MAAM,sBAAsB,kBACzC,kBAAkB,KAAK,MAAM,GAC7B;AACA,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AACzC,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,WAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AAAA,IAC3C;AACA,mBAAe,OAAO,KAAK,WAAW,CAAC;AAAA,EACzC;AAAA,EACA,eAAe,MAAM,OAAO;AAC1B,UAAM,aAAa,MAAM,sBAAsB,KAAK,OAAO,IAAI;AAC/D,QACE,eAAe,qBACf,aAAa,MAAM,sBAAsB,gBACzC;AACA,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AACzC,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,WAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AAAA,IAC3C;AACA,QAAI,KAAK,UAAU;AACjB,YAAM,MAAM,IAAI;AAAA,IAClB;AACA,mBAAe,OAAO,KAAK,WAAW,CAAC;AAAA,EACzC;AAAA,EACA,gBAAgB,MAAM,OAAO;AAC3B,SAAK,KAAK,WAAW,IAAI,EAAE,KAAK,YAAY,KAAK;AAAA,EACnD;AAAA,EACA,iBAAiB,MAAM,OAAO;AAC5B,UAAM,aAAa,MAAM,sBAAsB,KAAK,OAAO,IAAI;AAC/D,QACE,eAAe,qBACf,aAAa,MAAM,sBAAsB,kBACzC;AACA,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AACzC,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,WAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AAAA,IAC3C;AACA,QAAI,KAAK,UAAU;AACjB,UAAI,KAAK,UAAU;AACjB,cAAM,MAAM,IAAI;AAAA,MAClB;AACA,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAC7C,YAAM,MAAM,GAAG;AAAA,IACjB,OAAO;AACL,UAAI,KAAK,UAAU;AACjB,cAAM,MAAM,IAAI;AAAA,MAClB,OAAO;AACL,cAAM,MAAM,GAAG;AAAA,MACjB;AACA,WAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,aAAa,MAAM,OAAO;AACxB,UAAM,MAAM,KAAK,KAAK,OAAO,MAAM,KAAK,SAAS,MAAM,IAAI;AAAA,EAC7D;AAAA,EACA,WAAW,MAAM,OAAO;AACtB,UAAM,MAAM,KAAK,MAAM,IAAI;AAAA,EAC7B;AAAA,EACA,kBAAkB,MAAM,OAAO;AAC7B,UAAM,MAAM,IAAI,KAAK,QAAQ,IAAI;AAAA,EACnC;AAAA,EACA,QAAQ,MAAM,OAAO;AACnB,QAAI,KAAK,OAAO,MAAM;AAEpB,YAAM,MAAM,KAAK,KAAK,IAAI;AAAA,IAC5B,WAAW,KAAK,SAAS,MAAM;AAC7B,WAAK,cAAc,MAAM,KAAK;AAAA,IAChC,WAAW,KAAK,UAAU,MAAM;AAC9B,YAAM,MAAM,KAAK,SAAS,KAAK,IAAI;AAAA,IACrC,OAAO;AACL,YAAM,MAAMP,WAAU,KAAK,KAAK,GAAG,IAAI;AAAA,IACzC;AAAA,EACF;AAAA,EACA,cAAc,MAAM,OAAO;AACzB,UAAM,EAAE,OAAAQ,OAAM,IAAI;AAClB,UAAM,MAAM,IAAIA,OAAM,WAAWA,OAAM,SAAS,IAAI;AAAA,EACtD;AACF;AAEA,IAAM,eAAe,CAAC;AAOtB,IAAM,QAAN,MAAY;AAAA,EACV,YAAYC,UAAS;AACnB,UAAM,QAAQA,YAAW,OAAO,eAAeA;AAC/C,SAAK,SAAS;AAEd,QAAI,MAAM,UAAU,MAAM;AACxB,WAAK,SAAS,MAAM;AACpB,WAAK,QAAQ,KAAK;AAAA,IACpB,OAAO;AACL,WAAK,SAAS;AAAA,IAChB;AACA,SAAK,YAAY,MAAM,aAAa,OAAO,MAAM,YAAY;AAC7D,SAAK,wBACH,MAAM,yBAAyB,OAC3B,MAAM,wBACN;AAEN,SAAK,SAAS,MAAM,UAAU,OAAO,MAAM,SAAS;AACpD,SAAK,UAAU,MAAM,WAAW,OAAO,MAAM,UAAU;AACvD,SAAK,cACH,MAAM,uBAAuB,OAAO,MAAM,sBAAsB;AAClE,SAAK,gBAAgB,MAAM,WAAW,MAAM,WAAW;AAEvD,QAAI,MAAM,aAAa,MAAM;AAC3B,WAAK,QACH,MAAM,UAAU,OAAO,KAAK,cAAc,KAAK;AACjD,WAAK,YAAY,MAAM;AACvB,WAAK,OAAO;AACZ,WAAK,SAAS;AACd,WAAK,cAAc,KAAK,QAAQ,MAAM,IAAI,EAAE,SAAS;AACrD,WAAK,UAAU;AAAA,QACb,UAAU;AAAA;AAAA,QAEV,WAAW;AAAA,QACX,MAAM;AAAA,QACN,QAAQ,MAAM,UAAU,QAAQ,MAAM,UAAU;AAAA,MAClD;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,MAAM;AACV,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,cAAc,MAAM;AAClB,SAAK,OAAO,MAAM,IAAI;AAAA,EACxB;AAAA,EAEA,YAAY,MAAM,MAAM;AACtB,SAAK,UAAU;AACf,SAAK,IAAI,MAAM,IAAI;AAAA,EACrB;AAAA,EAEA,oBAAoB,MAAM,MAAM;AAC9B,SAAK,OAAO,MAAM,IAAI;AACtB,SAAK,IAAI,MAAM,IAAI;AAAA,EACrB;AAAA,EAEA,IAAI,MAAM,MAAM;AACd,QAAI,QAAQ,MAAM;AAChB,YAAM,EAAE,KAAK,IAAI;AACjB,UAAI,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AAEtC,aAAK,SAAS;AACd,aAAK;AACL;AAAA,MACF;AACA,UAAI,KAAK,OAAO,MAAM;AACpB,cAAM,EAAE,QAAQ,IAAI;AACpB,gBAAQ,WAAW,KAAK,IAAI;AAC5B,gBAAQ,OAAO,KAAK;AACpB,aAAK,UAAU,WAAW,OAAO;AAAA,MACnC;AACA,UACG,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,OAC/B,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,OAAO,OAAO,KAAK,UAAU,UAC7D;AAEA,cAAM,EAAE,QAAAC,QAAO,IAAI;AACnB,YAAI,EAAE,QAAQ,KAAK,IAAI;AACvB,iBAAS,IAAI,GAAG,IAAIA,SAAQ,KAAK;AAC/B,cAAI,KAAK,CAAC,MAAM,MAAM;AACpB,qBAAS;AACT;AAAA,UACF,OAAO;AACL;AAAA,UACF;AAAA,QACF;AACA,aAAK,SAAS;AACd,aAAK,OAAO;AACZ;AAAA,MACF;AAAA,IACF;AACA,UAAM,EAAE,OAAO,IAAI;AACnB,UAAM,EAAE,QAAQ,IAAI;AACpB,QAAI,SAAS,GAAG;AACd,UACE,KAAK,cAAc,MAClB,QAAQ,WAAW,IAChB,KAAK,SAAS,CAAC,MAAM,UACrB,KAAK,SAAS,OAAO,IACzB;AACA,aAAK,QAAQ,KAAK;AAClB,aAAK,SAAS;AAAA,MAChB,OAAO;AACL,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AACF;AAEO,SAAS,SAAS,MAAMD,UAAS;AAatC,QAAM,QAAQ,IAAI,MAAMA,QAAO;AAE/B,QAAM,UAAU,KAAK,IAAI,EAAE,MAAM,KAAK;AACtC,SAAO,MAAM;AACf;;;ACllCA,IAAME,aAAoB;AAG1B,IAAMC,YAAmB;AAYlB,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcT,SAAU,MAAMC,UAAS;AACvB,UAAM,EAAC,oBAAAC,qBAAoB,UAAU,UAAAC,UAAQ,IAAIF,YAAW,CAAC;AAC7D,UAAM,YAAYC,sBACd,IAAIA,oBAAmB,EAAC,MAAM,YAAY,eAAc,CAAC,IACzD;AAEJ,UAAM,QAAQF,UAAS,MAAM;AAAA,MAC3B,UAAU;AAAA,MACV,WAAW,EAAC,GAAGD,YAAW,GAAGI,UAAQ;AAAA,MACrC;AAAA,IACF,CAAC;AACD,UAAM,MAAM,YAAY,UAAU,OAAO,IAAI;AAE7C,WAAO,EAAC,OAAO,IAAG;AAAA,EACpB;AAAA;;;AClGG,IAAM,MAAM;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAgBA,SAAS,aAAa,MAAM,OAAO;AACjC,OAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAErC,MAAI,KAAK,UAAU,UAAa,KAAK,UAAU,MAAM;AACnD,UAAM,MAAM,GAAG;AAGf,QAAI,KAAK,MAAM,SAAS,WAAW;AACjC,YAAM;AAAA,QACJ,MAAM,UAAU,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ,MAAM,QAAQ,IAAI;AAAA,QACpE;AAAA,MACF;AAAA,IACF,OAAO;AACL,WAAK,KAAK,MAAM,IAAI,EAAE,KAAK,OAAO,KAAK;AAAA,IACzC;AAAA,EACF;AACF;AAcA,SAAS,kBAAkB,MAAM,OAAO;AACtC,QAAM,MAAM,IAAI;AAChB,OAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACrC,QAAM,MAAM,GAAG;AACjB;AAcA,SAAS,mBAAmB,MAAM,OAAO;AACvC,QAAM,MAAM,OAAO,IAAI;AACzB;AAeA,SAAS,WAAW,MAAM,OAAO;AAC/B,MAAIC,SAAQ;AAEZ,OAAK,KAAK,eAAe,IAAI,EAAE,KAAK,gBAAgB,KAAK;AAEzD,MAAI,KAAK,UAAU;AACjB,WAAO,EAAEA,SAAQ,KAAK,SAAS,QAAQ;AACrC,YAAM,QAAQ,KAAK,SAASA,MAAK;AAIjC,UAAI,MAAM,SAAS,kBAAkB;AACnC,cAAM,IAAI,MAAM,uCAAuC;AAAA,MACzD;AAEA,WAAK,MAAM,IAAI,EAAE,OAAO,KAAK;AAAA,IAC/B;AAAA,EACF;AAEA,MAAI,KAAK,gBAAgB;AACvB,SAAK,KAAK,eAAe,IAAI,EAAE,KAAK,gBAAgB,KAAK;AAAA,EAC3D;AACF;AAUA,SAAS,qBAAqB;AAAC;AAc/B,SAAS,uBAAuB,MAAM,OAAO;AAC3C,QAAM,MAAM,GAAG;AACf,OAAK,KAAK,WAAW,IAAI,EAAE,KAAK,YAAY,KAAK;AACjD,QAAM,MAAM,GAAG;AACjB;AAcA,SAAS,YAAY,MAAM,OAAO;AAChC,MAAIA,SAAQ;AAEZ,OAAK,KAAK,gBAAgB,IAAI,EAAE,KAAK,iBAAiB,KAAK;AAE3D,MAAI,KAAK,UAAU;AACjB,WAAO,EAAEA,SAAQ,KAAK,SAAS,QAAQ;AACrC,YAAM,QAAQ,KAAK,SAASA,MAAK;AAIjC,UAAI,MAAM,SAAS,kBAAkB;AACnC,cAAM,IAAI,MAAM,uCAAuC;AAAA,MACzD;AAEA,WAAK,MAAM,IAAI,EAAE,OAAO,KAAK;AAAA,IAC/B;AAAA,EACF;AAEA,OAAK,KAAK,gBAAgB,IAAI,EAAE,KAAK,iBAAiB,KAAK;AAC7D;AAcA,SAAS,cAAc,MAAM,OAAO;AAClC,QAAM,MAAM,KAAK,MAAM,IAAI;AAC7B;AAcA,SAAS,oBAAoB,MAAM,OAAO;AACxC,OAAK,KAAK,OAAO,IAAI,EAAE,KAAK,QAAQ,KAAK;AACzC,QAAM,MAAM,GAAG;AACf,OAAK,KAAK,SAAS,IAAI,EAAE,KAAK,UAAU,KAAK;AAC/C;AAcA,SAAS,kBAAkB,MAAM,OAAO;AACtC,OAAK,KAAK,UAAU,IAAI,EAAE,KAAK,WAAW,KAAK;AAC/C,QAAM,MAAM,GAAG;AACf,OAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AACvC;AAcA,SAAS,kBAAkB,MAAM,OAAO;AACtC,MAAIA,SAAQ;AAEZ,QAAM,MAAM,GAAG;AACf,OAAK,KAAK,KAAK,IAAI,EAAE,KAAK,MAAM,KAAK;AAErC,MAAI,KAAK,YAAY;AACnB,WAAO,EAAEA,SAAQ,KAAK,WAAW,QAAQ;AACvC,YAAM,MAAM,GAAG;AACf,WAAK,KAAK,WAAWA,MAAK,EAAE,IAAI,EAAE,KAAK,WAAWA,MAAK,GAAG,KAAK;AAAA,IACjE;AAAA,EACF;AAEA,QAAM,MAAM,KAAK,cAAc,QAAQ,GAAG;AAC5C;AAcA,SAAS,mBAAmB,MAAM,OAAO;AACvC,QAAM,MAAM,MAAM,IAAI;AACxB;AAcA,SAAS,mBAAmB,MAAM,OAAO;AACvC,QAAM,MAAM,GAAG;AAEf,OAAK,cAAc,MAAM,KAAK;AAC9B,QAAM,MAAM,GAAG;AACjB;AAcA,SAAS,QAAQ,MAAM,OAAO;AAC5B,QAAM;AAAA,IACJ,UAAU,KAAK,KAAK,EAAE;AAAA,MAAQ;AAAA,MAAW,CAAC,OACxC,OAAO,MACH,SACA,OAAO,MACP,SACA,OAAO,MACP,WACA;AAAA,IACN;AAAA,IACA;AAAA,EACF;AACF;AAiBA,SAAS,UAAU,OAAO;AACxB,SAAO,MAAM,QAAQ,iBAAiB,OAAO;AAC/C;;;ACnVO,SAAS,eAAeC,UAAS;AAGtC,QAAM,EAAC,oBAAAC,oBAAkB,IAAID,YAAW,CAAC;AAEzC,SAAO,OAAO,MAAM,EAAC,UAAU,SAAQ,CAAC;AAGxC,WAAS,SAAS,MAAM,MAAM;AAC5B,UAAM,SAASC,sBACX,KAAK,MAAM;AAAA,MACT,UAAU,KAAK,QAAQ;AAAA,MACvB,oBAAAA;AAAA,MACA,UAAU;AAAA,IACZ,CAAC,IACD,KAAK,MAAM,EAAC,UAAU,IAAG,CAAC;AAE9B,SAAK,MAAM,OAAO;AAElB,WAAO,OAAO;AAAA,EAChB;AACF;;;ACxBO,SAAS,QAAQ,MAAM,OAAO;AAEnC,QAAM,SAAS,EAAC,MAAM,SAAS,OAAO,KAAK,MAAK;AAChD,QAAM,QAAQ,MAAM,MAAM;AAC1B,QAAM,SAAS,KAAK,MAAM;AAG1B,QAAM,aAAa;AAAA,IACjB,MAAM;AAAA;AAAA,IAEN,UAAU,CAAC,OAAO,OAAO,CAAC,GAAG,QAAQ,EAAC,SAAS,OAAO,UAAU,KAAI,CAAC,CAAC;AAAA,EACxE;AACA,QAAM,MAAM,MAAM,UAAU;AAG5B,QAAM,YAAY,EAAC,MAAM,0BAA0B,WAAU;AAC7D,QAAM,MAAM,MAAM,SAAS;AAC3B,SAAO;AACT;;;ACnCA,mBAA0B;AAE1B,IAAO,0BAAQ,aAAAC;;;ACqBf,IAAMC,OAAM,CAAC,EAAE;AACf,IAAM,MAAM;AACZ,IAAM,gBAAgB;AAaf,SAAS,QAAQ,MAAM,OAAO;AACnC,QAAM,eAAe,MAAM;AAC3B,MAAI,SAAS;AACb,QAAM,QAAQ,KAAK,cAAc,CAAC;AAElC,MAAI,aAAa,UAAU,UAAU,KAAK,QAAQ,YAAY,MAAM,OAAO;AACzE,aAAS;AACT,UAAM,SAAS;AAAA,EACjB;AAEA,QAAM,WAAW,MAAM,IAAI,IAAI;AAG/B,QAAM,aAAa,CAAC;AAEpB,MAAI;AAEJ,OAAK,QAAQ,OAAO;AAClB,QAAIA,KAAI,KAAK,OAAO,IAAI,GAAG;AACzB,UAAI,QAAQ,MAAM,IAAI;AACtB,YAAM,OAAO,KAAK,QAAQ,IAAI;AAE9B,UAAI;AAIJ,UACE,UAAU,UACV,UAAU,QACT,OAAO,UAAU,YAAY,OAAO,MAAM,KAAK,KAChD,UAAU,SACT,CAAC,SAAS,KAAK,SAChB;AACA;AAAA,MACF;AAEA,aACE,MAAM,6BAA6B,WAAW,KAAK,QAC/C,YAAY,KAAK,QAAQ,KAAK,KAAK,WACnC,KAAK;AAEX,UAAI,MAAM,QAAQ,KAAK,GAAG;AAGxB,gBAAQ,KAAK,iBAAiBC,WAAO,KAAK,IAAI,UAAO,KAAK;AAAA,MAC5D;AAEA,UAAI,SAAS,SAAS;AACpB,YAAI,cACF,OAAO,UAAU,WACb,QACA,WAAW,OAAO,KAAK,GAAG,KAAK,OAAO;AAE5C,YAAI,MAAM,0BAA0B,OAAO;AACzC,wBAAc,0BAA0B,WAAW;AAAA,QACrD;AAGA,cAAM,gBAAgB,CAAC;AAEvB,YAAI;AAEJ,aAAK,WAAW,aAAa;AAE3B,cAAID,KAAI,KAAK,aAAa,OAAO,GAAG;AAClC,0BAAc,KAAK;AAAA,cACjB,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,WAAW;AAAA,cACX,UAAU;AAAA,cACV,KAAK,KAAe,OAAO,IACvB,EAAC,MAAM,cAAc,MAAM,QAAO,IAClC,EAAC,MAAM,WAAW,OAAO,QAAO;AAAA,cACpC,OAAO,EAAC,MAAM,WAAW,OAAO,OAAO,YAAY,OAAO,CAAC,EAAC;AAAA,cAC5D,MAAM;AAAA,YACR,CAAC;AAAA,UACH;AAAA,QACF;AAEA,yBAAiB;AAAA,UACf,MAAM;AAAA,UACN,YAAY,EAAC,MAAM,oBAAoB,YAAY,cAAa;AAAA,QAClE;AAAA,MACF,WAAW,UAAU,MAAM;AACzB,yBAAiB;AAAA,MACnB,OAAO;AACL,yBAAiB,EAAC,MAAM,WAAW,OAAO,OAAO,KAAK,EAAC;AAAA,MACzD;AAEA,UAAI,kBAAkB,IAAI,GAAG;AAC3B,mBAAW,KAAK;AAAA,UACd,MAAM;AAAA,UACN,MAAM,EAAC,MAAM,iBAAiB,MAAM,KAAI;AAAA,UACxC,OAAO;AAAA,QACT,CAAC;AAAA,MACH,OAAO;AACL,mBAAW,KAAK;AAAA,UACd,MAAM;AAAA,UACN,UAAU;AAAA,YACR,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,WAAW;AAAA,gBACX,UAAU;AAAA,gBACV,KAAK,EAAC,MAAM,WAAW,OAAO,OAAO,IAAI,EAAC;AAAA;AAAA;AAAA,gBAG1C,OAAO,kBAAkB,EAAC,MAAM,WAAW,OAAO,KAAI;AAAA,gBACtD,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAGA,QAAM,SAAS;AAGf,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN;AAAA,MACA,MAAM,MAAM,qBAAqB,KAAK,OAAO;AAAA,MAC7C,aAAa,SAAS,WAAW;AAAA,IACnC;AAAA,IACA,gBACE,SAAS,SAAS,IACd;AAAA,MACE,MAAM;AAAA,MACN,MAAM,MAAM,qBAAqB,KAAK,OAAO;AAAA,IAC/C,IACA;AAAA,IACN;AAAA,EACF;AACA,QAAM,QAAQ,MAAM,MAAM;AAC1B,SAAO;AACT;AAYA,SAAS,WAAW,OAAO,SAAS;AAElC,QAAM,SAAS,CAAC;AAEhB,MAAI;AACF,4BAAc,OAAO,QAAQ;AAAA,EAC/B,SAAS,OAAP;AACA,UAAM;AAAA;AAAA,MAAkC;AAAA;AACxC,cAAU,UACR,UAAU,YAAY,UAAU,QAAQ,MAAM,YAAY,MAAM;AAClE,UAAM;AAAA,EACR;AAEA,SAAO;AAYP,WAAS,SAASE,OAAMC,QAAO;AAC7B,QAAI,MAAMD;AAEV,QAAI,IAAI,MAAM,GAAG,CAAC,MAAM,MAAM;AAE5B,UAAI,IAAI,MAAM,GAAG,CAAC,MAAM;AAAQ,cAAM,QAAQ,IAAI,MAAM,CAAC;AACzD,YAAM,IAAI,QAAQ,eAAe,OAAO;AAAA,IAC1C;AAEA,WAAO,GAAG,IAAIC;AAAA,EAChB;AACF;AAQA,SAAS,0BAA0B,WAAW;AAE5C,QAAM,YAAY,CAAC;AAEnB,MAAI;AAEJ,OAAK,QAAQ,WAAW;AACtB,QAAIH,KAAI,KAAK,WAAW,IAAI,GAAG;AAC7B,UAAI,KAAK,KAAK,QAAQ,KAAK,MAAM;AAEjC,UAAI,GAAG,MAAM,GAAG,CAAC,MAAM;AAAO,aAAK,MAAM;AACzC,gBAAU,EAAE,IAAI,UAAU,IAAI;AAAA,IAChC;AAAA,EACF;AAEA,SAAO;AACT;AAYA,SAAS,QAAQ,GAAG,IAAI;AACtB,SAAO,GAAG,YAAY;AACxB;AAUA,SAAS,OAAO,IAAI;AAClB,SAAO,MAAM,GAAG,YAAY;AAC9B;AAYA,SAAS,kBAAkBE,OAAM;AAC/B,MAAIE,SAAQ;AAEZ,SAAO,EAAEA,SAAQF,MAAK,QAAQ;AAC5B,QAAI,EAAEE,SAAQC,QAAOC,QAAiBJ,MAAK,WAAWE,MAAK,CAAC;AAAG,aAAO;AAAA,EACxE;AAGA,SAAOA,SAAQ;AAMf,WAASC,MAAK,MAAM;AAClB,WAAOA,MAAe,IAAI,KAAK,SAAS;AAAA,EAC1C;AACF;;;ACnSA,IAAME,OAAM,CAAC,EAAE;AAiCR,SAAS,eAAe,MAAM,UAAU;AAC7C,QAAM,QAAQ,YAAY,CAAC,GAAG,OAAO,EAAE,KAAK,OAAO;AACnD,MAAI,KAAK,SAAS;AAAG,IAAAC,MAAK,MAAM,EAAC,UAAU,MAAM,OAAO,EAAC,CAAC;AAC1D,SAAO;AACT;AAYA,SAASA,MAAK,MAAM,OAAO;AAEzB,MAAI,MAAM,UAAU,MAAM,SAAS,QAAQ;AACzC;AAAA,EACF;AAGA,QAAM,WAAW,CAAC;AAElB,QAAM,WAAW,CAAC;AAElB,MAAI;AAGJ,OAAK,OAAO,MAAM;AAChB,QAAID,KAAI,KAAK,MAAM,GAAG,GAAG;AAGvB,YAAM,QAAQ,KAAK,GAAG;AAGtB,UAAI,SAAS,OAAO,UAAU,YAAY,QAAQ,YAAY;AAC5D,YAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,cAAIE,SAAQ;AAEZ,iBAAO,EAAEA,SAAQ,MAAM,QAAQ;AAC7B,gBAAI,MAAMA,MAAK,KAAK,OAAO,MAAMA,MAAK,EAAE,SAAS,UAAU;AACzD,uBAAS,KAAK,MAAMA,MAAK,CAAC;AAAA,YAC5B;AAAA,UACF;AAAA,QACF,WAAW,OAAO,MAAM,SAAS,UAAU;AACzC,mBAAS,KAAK,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,WAAS,KAAK,OAAO;AAGrB,WAAS,KAAK,GAAG,MAAM,OAAO,MAAM,OAAO,EAAC,SAAS,MAAM,UAAU,MAAK,CAAC,CAAC;AAE5E,MAAIA,SAAQ;AAEZ,SAAO,EAAEA,SAAQ,SAAS,QAAQ;AAChC,IAAAD,MAAK,SAASC,MAAK,GAAG,KAAK;AAAA,EAC7B;AAGA,WAAS;AAAA,IACP,GAAG,MAAM,OAAO,MAAM,MAAM;AAAA,MAC1B,SAAS;AAAA,MACT,UAAU,SAAS,SAAS;AAAA,IAC9B,CAAC;AAAA,EACH;AAEA,MAAI,SAAS,SAAS,GAAG;AAEvB,SAAK,WAAW;AAAA,EAClB;AACF;AAcA,SAAS,MAAM,OAAO,MAAM,YAAY,QAAQ;AAE9C,QAAM,SAAS,CAAC;AAEhB,SACE,MAAM,SAAS,MAAM,KAAK,KAC1B,QAAQ,MAAM,SAAS,MAAM,KAAK,GAAG,MAAM,UAAU,IAAI,GACzD;AACA,WAAO,KAAK,OAAO,OAAO,CAAC,GAAG,MAAM,SAAS,MAAM,OAAO,GAAG,MAAM,CAAC;AAAA,EACtE;AAEA,SAAO;AACT;AAcA,SAAS,QAAQ,MAAM,OAAO,YAAY;AACxC,QAAM,QAAQ,aAAa,QAAQ;AAGnC,MAAI,KAAK,SAAS,MAAM,OAAO;AAC7B,WAAO,KAAK,MAAM,CAAC,IAAI,MAAM,MAAM,aAAa,IAAI,CAAC;AAAA,EACvD;AAGA,MAAI,KAAK,OAAO,KAAK,IAAI,SAAS,MAAM,OAAO,MAAM,IAAI,KAAK,GAAG;AAC/D,WACE,KAAK,IAAI,MAAM,OAAO,MAAM,IAAI,KAAK,EAAE,QACvC,KAAK,IAAI,MAAM,SAAS,MAAM,IAAI,KAAK,EAAE;AAAA,EAE7C;AAIA,MAAI,WAAW,QAAQ,SAAS,OAAO;AAErC,WAAO,KAAK,QAAQ,MAAM,KAAK;AAAA,EACjC;AAEA,SAAO,OAAO;AAChB;;;ACzKO,SAASC,eAAc,MAAM,OAAO;AACzC,QAAM,SAAS,KAAK,QAAQ,KAAK,KAAK;AACtC,QAAM,WAAY,UAAU,OAAO,YAAa,CAAC;AAEjD,MAAI;AAEJ,MAAI,QAAQ;AACV,UAAM,SAAS,KAAK,GAAG,QAAQ;AAC/B,mBAAe,QAAQ,OAAO,QAAQ;AACtC,iBACG,OAAO,KAAK,CAAC,KACZ,OAAO,KAAK,CAAC,EAAE,SAAS,yBACxB,OAAO,KAAK,CAAC,EAAE,cACjB;AAAA,EACJ;AAEA,MAAI,CAAC,YAAY;AACf,iBAAa,EAAC,MAAM,qBAAoB;AACxC,UAAM,MAAM,MAAM,UAAU;AAAA,EAC9B;AAGA,QAAM,SAAS,EAAC,MAAM,0BAA0B,WAAU;AAC1D,QAAM,QAAQ,MAAM,MAAM;AAC1B,SAAO;AACT;;;ACrBO,SAAS,cAAc,MAAM,OAAO;AACzC,QAAM,eAAe,MAAM;AAC3B,MAAI,SAAS;AACb,QAAM,QAAQ,KAAK,cAAc,CAAC;AAClC,MAAIC,SAAQ;AAEZ,MACE,KAAK,QACL,aAAa,UAAU,UACvB,KAAK,KAAK,YAAY,MAAM,OAC5B;AACA,aAAS;AACT,UAAM,SAAS;AAAA,EACjB;AAEA,QAAM,WAAW,MAAM,IAAI,IAAI;AAE/B,QAAM,aAAa,CAAC;AAEpB,SAAO,EAAEA,SAAQ,MAAM,QAAQ;AAC7B,UAAM,OAAO,MAAMA,MAAK;AACxB,UAAM,QAAQ,KAAK;AAEnB,QAAI;AAEJ,QAAI,KAAK,SAAS,mBAAmB;AACnC,UAAI,UAAU,UAAa,UAAU,MAAM;AACzC,yBAAiB;AAAA,MAEnB,WAES,OAAO,UAAU,UAAU;AAClC,cAAM,SAAS,MAAM,QAAQ,MAAM,KAAK;AACxC,cAAM,WAAY,UAAU,OAAO,YAAa,CAAC;AAEjD,YAAI;AAEJ,YAAI,QAAQ;AACV,gBAAM,SAAS,KAAK,GAAG,QAAQ;AAC/B,yBAAe,QAAQ,OAAO,QAAQ;AAGtC,uBACG,OAAO,KAAK,CAAC,KACZ,OAAO,KAAK,CAAC,EAAE,SAAS,yBACxB,OAAO,KAAK,CAAC,EAAE,cACjB;AAAA,QACJ;AAEA,yBAAiB;AAAA,UACf,MAAM;AAAA,UACN,YAAY,cAAc,EAAC,MAAM,qBAAoB;AAAA,QACvD;AACA,cAAM,QAAQ,OAAO,cAAc;AAAA,MACrC,OAEK;AACH,yBAAiB,EAAC,MAAM,WAAW,OAAO,OAAO,KAAK,EAAC;AAAA,MACzD;AAGA,YAAM,YAAY;AAAA,QAChB,MAAM;AAAA,QACN,MAAM,MAAM,uBAAuB,KAAK,IAAI;AAAA,QAC5C,OAAO;AAAA,MACT;AAEA,YAAM,QAAQ,MAAM,SAAS;AAC7B,iBAAW,KAAK,SAAS;AAAA,IAC3B,OAEK;AACH,YAAM,SAAS,KAAK,QAAQ,KAAK,KAAK;AACtC,YAAM,WAAY,UAAU,OAAO,YAAa,CAAC;AAEjD,UAAI;AAEJ,UAAI,QAAQ;AACV,cAAM,SAAS,KAAK,GAAG,QAAQ;AAC/B,uBAAe,QAAQ,OAAO,QAAQ;AAGtC,wBACG,OAAO,KAAK,CAAC,KACZ,OAAO,KAAK,CAAC,EAAE,SAAS,yBACxB,OAAO,KAAK,CAAC,EAAE,cACf,OAAO,KAAK,CAAC,EAAE,WAAW,SAAS,sBACnC,OAAO,KAAK,CAAC,EAAE,WAAW,cAC1B,OAAO,KAAK,CAAC,EAAE,WAAW,WAAW,CAAC,KACtC,OAAO,KAAK,CAAC,EAAE,WAAW,WAAW,CAAC,EAAE,SAAS,mBACjD,OAAO,KAAK,CAAC,EAAE,WAAW,WAAW,CAAC,EAAE,YAC1C;AAAA,MACJ;AAGA,YAAM,YAAY;AAAA,QAChB,MAAM;AAAA,QACN,UAAU,iBAAiB,EAAC,MAAM,oBAAoB,YAAY,CAAC,EAAC;AAAA,MACtE;AACA,YAAM,QAAQ,MAAM,SAAS;AAC7B,iBAAW,KAAK,SAAS;AAAA,IAC3B;AAAA,EACF;AAGA,QAAM,SAAS;AAGf,QAAM,SAAS,KAAK,OAChB;AAAA,IACE,MAAM;AAAA,IACN,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN;AAAA,MACA,MAAM,MAAM,qBAAqB,KAAK,IAAI;AAAA,MAC1C,aAAa,SAAS,WAAW;AAAA,IACnC;AAAA,IACA,gBACE,SAAS,SAAS,IACd;AAAA,MACE,MAAM;AAAA,MACN,MAAM,MAAM,qBAAqB,KAAK,IAAI;AAAA,IAC5C,IACA;AAAA,IACN;AAAA,EACF,IACA;AAAA,IACE,MAAM;AAAA,IACN,iBAAiB,EAAC,MAAM,qBAAoB;AAAA,IAC5C,iBAAiB,EAAC,MAAM,qBAAoB;AAAA,IAC5C;AAAA,EACF;AAEJ,QAAM,QAAQ,MAAM,MAAM;AAC1B,SAAO;AACT;;;AC/IO,SAASC,UAAS,MAAM,OAAO;AACpC,QAAM,SAAS,KAAK,QAAQ,KAAK,KAAK;AACtC,QAAM,WAAY,UAAU,OAAO,YAAa,CAAC;AAEjD,MAAI,QAAQ;AACV,UAAM,SAAS,KAAK,GAAG,QAAQ;AAC/B,mBAAe,QAAQ,QAAQ;AAC/B,UAAM,IAAI,KAAK,GAAG,OAAO,IAAI;AAAA,EAC/B;AACF;;;ACTO,SAAS,KAAK,MAAM,OAAO;AAChC,QAAM,QAAQ,OAAO,KAAK,SAAS,EAAE;AAErC,MAAI,OAAO;AAET,UAAM,SAAS,EAAC,MAAM,WAAW,MAAK;AACtC,UAAM,QAAQ,MAAM,MAAM;AAE1B,UAAM,YAAY,EAAC,MAAM,0BAA0B,YAAY,OAAM;AACrE,UAAM,MAAM,MAAM,SAAS;AAC3B,WAAO;AAAA,EACT;AACF;;;ACVO,SAAS,KAAK,MAAM,OAAO;AAChC,QAAM,WAAW,MAAM,IAAI,IAAI;AAE/B,QAAM,gBAAgB,CAAC;AACvB,MAAIC,SAAQ;AAEZ,MAAI;AAGJ,SAAO,EAAEA,SAAQ,SAAS,QAAQ;AAChC,UAAM,QAAQ,SAASA,MAAK;AAE5B,QACE,MAAM,SAAS,4BACf,MAAM,WAAW,SAAS,aAC1B,WAAW,MAAM,WAAW,KAAK,GACjC;AACA,UAAI;AAAO,cAAM,KAAK,KAAK;AAAA,IAC7B,OAAO;AACL,UAAI;AAAO,sBAAc,KAAK,GAAG,KAAK;AACtC,oBAAc,KAAK,KAAK;AACxB,cAAQ,CAAC;AAAA,IACX;AAAA,EACF;AAGA,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,iBAAiB,EAAC,MAAM,qBAAoB;AAAA,IAC5C,iBAAiB,EAAC,MAAM,qBAAoB;AAAA,IAC5C,UAAU;AAAA,EACZ;AACA,QAAM,QAAQ,MAAM,MAAM;AAC1B,SAAO;AACT;;;AC7CO,IAAM,WAAW;AAAA,EACtB;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA,mBAAmBC;AAAA,EACnB,mBAAmBA;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,UAAAC;AAAA,EACA;AAAA,EACA;AACF;AAQA,SAAS,SAAS;AAAC;;;ACsFnB,IAAMC,OAAM,CAAC,EAAE;AAcf,IAAM,gBAAgB,oBAAI,IAAI,CAAC,SAAS,SAAS,SAAS,SAAS,IAAI,CAAC;AAWjE,SAAS,YAAYC,UAAS;AAEnC,QAAM,MAAM,OAAO,QAAQ;AAAA,IACzB;AAAA,IACA;AAAA,IACA,UAAU,EAAC,GAAG,UAAU,GAAGA,SAAQ,SAAQ;AAAA,EAC7C,CAAC;AAED,SAAO;AAAA;AAAA,IAEL,QAAQA,SAAQ,UAAU,QAAQ,MAAM;AAAA,IACxC,0BAA0BA,SAAQ,4BAA4B;AAAA,IAC9D,uBAAuBA,SAAQ,yBAAyB;AAAA;AAAA,IAExD,UAAU,CAAC;AAAA,IACX,KAAK,CAAC;AAAA;AAAA,IAEN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAOA,WAAS,OAAO,MAAM;AACpB,WAAO,IAAI,MAAM,IAAI;AAAA,EACvB;AACF;AAUA,SAAS,QAAQ,OAAO;AACtB,QAAM,IAAI,MAAM,0BAA0B,QAAQ,kBAAkB;AACtE;AAUA,SAAS,QAAQ,MAAM;AAErB,QAAM,IAAI,MAAM,iCAAiC,KAAK,OAAO,GAAG;AAClE;AAUA,SAAS,IAAI,QAAQ;AACnB,QAAM,WAAW,OAAO,YAAY,CAAC;AACrC,MAAIC,SAAQ;AAEZ,QAAM,UAAU,CAAC;AACjB,QAAM,kBACJ,KAAK,OAAO,UAAU,UACtB,OAAO,SAAS,aAChB,cAAc,IAAI,OAAO,QAAQ,YAAY,CAAC;AAEhD,SAAO,EAAEA,SAAQ,SAAS,QAAQ;AAChC,UAAM,QAAQ,SAASA,MAAK;AAE5B,QAAI,mBAAmB,MAAM,SAAS,UAAU,MAAM,UAAU,MAAM;AACpE;AAAA,IACF;AAEA,UAAM,SAAS,KAAK,OAAO,KAAK;AAEhC,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,cAAQ,KAAK,GAAG,MAAM;AAAA,IACxB,WAAW,QAAQ;AACjB,cAAQ,KAAK,MAAM;AAAA,IACrB;AAAA,EACF;AAEA,SAAO;AACT;AAcA,SAAS,QAAQ,MAAM,IAAI;AAEzB,QAAM,OAAO,KAAK;AAElB,MAAI;AAEJ,MAAI;AAEJ,QAAM,MAAM,EAAE;AAEd,MAAI,MAAM;AACR,SAAK,OAAO,MAAM;AAChB,UAAIF,KAAI,KAAK,MAAM,GAAG,KAAK,QAAQ,UAAU;AAC3C,YAAI,CAAC;AAAO,kBAAQ,CAAC;AACrB,cAAM,GAAG,IAAI,KAAK,GAAG;AAAA,MACvB;AAAA,IACF;AAEA,QAAI,OAAO;AAET,SAAG,OAAO;AAAA,IACZ;AAAA,EACF;AACF;AAcA,SAAS,MAAM,MAAM,IAAI;AACvB,QAAM,IAAI,SAAS,IAAI;AAEvB,MACE,EAAE,MAAM,QACR,EAAE,MAAM,WAAW,UACnB,EAAE,IAAI,WAAW,QACjB;AAEA,OAAG,QAAQ,EAAE,MAAM;AAEnB,OAAG,MAAM,EAAE,IAAI;AACf,OAAG,MAAM;AAAA,MACP,OAAO,EAAC,MAAM,EAAE,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS,EAAC;AAAA,MACtD,KAAK,EAAC,MAAM,EAAE,IAAI,MAAM,QAAQ,EAAE,IAAI,SAAS,EAAC;AAAA,IAClD;AACA,OAAG,QAAQ,CAAC,EAAE,MAAM,QAAQ,EAAE,IAAI,MAAM;AAAA,EAC1C;AACF;AAQA,SAAS,uBAAuBG,OAAM;AACpC,QAAM,OAAO,wBAAwBA,KAAI;AAIzC,MAAI,KAAK,SAAS,uBAAuB;AACvC,UAAM,IAAI,MAAM,yDAAyD;AAAA,EAC3E;AAEA,SAAO;AACT;AAQA,SAAS,qBAAqBA,OAAM;AAClC,SAAO,wBAAwBA,KAAI;AACrC;AAUA,SAAS,wBAAwBA,OAAM;AACrC,MAAIA,MAAK,SAAS,GAAG,GAAG;AACtB,UAAM,QAAQA,MAAK,MAAM,GAAG;AAC5B,QAAI,OAAO,MAAM,MAAM;AAGvB,QAAI,OAAO,EAAC,MAAM,iBAAiB,MAAM,KAAI;AAE7C,WAAQ,OAAO,MAAM,MAAM,GAAI;AAC7B,aAAO;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU,EAAC,MAAM,iBAAiB,MAAM,KAAI;AAAA,MAC9C;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,MAAIA,MAAK,SAAS,GAAG,GAAG;AACtB,UAAM,QAAQA,MAAK,MAAM,GAAG;AAC5B,WAAO;AAAA,MACL,MAAM;AAAA,MACN,WAAW,EAAC,MAAM,iBAAiB,MAAM,MAAM,CAAC,EAAC;AAAA,MACjD,MAAM,EAAC,MAAM,iBAAiB,MAAM,MAAM,CAAC,EAAC;AAAA,IAC9C;AAAA,EACF;AAEA,SAAO,EAAC,MAAM,iBAAiB,MAAAA,MAAI;AACrC;;;ACtSO,SAAS,SAAS,MAAMC,UAAS;AACtC,QAAM,QAAQ,YAAYA,YAAW,CAAC,CAAC;AACvC,MAAI,SAAS,MAAM,OAAO,IAAI;AAC9B,QAAM,OAAO,MAAM;AAEnB,MAAI,QAAQ;AACV,QAAI,OAAO,SAAS,iBAAiB,OAAO,SAAS,cAAc;AACjE,eAAS;AAAA,QACP,MAAM;AAAA,QACN,iBAAiB,EAAC,MAAM,qBAAoB;AAAA,QAC5C,iBAAiB,EAAC,MAAM,qBAAoB;AAAA,QAC5C,UAAU,CAAC,MAAM;AAAA,MACnB;AACA,YAAM,MAAM,MAAM,MAAM;AAAA,IAC1B;AAIA,UAAM,YAAY,EAAC,MAAM,uBAAuB,YAAY,OAAM;AAClE,UAAM,MAAM,MAAM,SAAS;AAC3B,SAAK,KAAK,SAAS;AAAA,EACrB;AAGA,QAAM,UAAU;AAAA,IACd,MAAM;AAAA,IACN;AAAA,IACA,YAAY;AAAA,IACZ,UAAU,MAAM;AAAA,EAClB;AACA,QAAM,MAAM,MAAM,OAAO;AACzB,SAAO;AACT;;;ACnEO,SAAS,YAAYC,UAAS;AACnC,SAAO,CAAC,SAAS,SAAS,MAAMA,QAAO;AACzC;;;AC3BO,SAAS,kBAAkB;AAChC,SAAO,CAAC,SAAS;AACf,UAAM,MAAM,OAAO,CAAC,GAAGC,QAAO,WAAW;AACvC,UAAI,UAAU,OAAOA,WAAU,UAAU;AACvC,eAAO,SAAS,OAAOA,QAAO,CAAC;AAC/B,eAAOA;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ACNO,SAAS,uBAAuB;AACrC,SAAO,CAAC,SAAS;AACf,UAAM,MAAM,CAAC,MAAMC,QAAO,WAAW;AACnC,UAAI,SAAS;AACb,UAAIC,OAAM;AACV,UAAI,YAAY;AAEhB,UAAI,UAAU,OAAOD,WAAU,YAAY,KAAK,SAAS,aAAa;AACpE,cAAM,WAAW,KAAK;AAEtB,eAAO,EAAE,SAAS,SAAS,QAAQ;AACjC,gBAAM,QAAQ,SAAS,MAAM;AAE7B,cACE,MAAM,SAAS,uBACf,MAAM,SAAS,qBACf;AACA,wBAAY;AAAA,UACd,WACE,MAAM,SAAS,UACf,eAAe,KAAK,OAAO,MAAM,KAAK,CAAC,GACvC;AAAA,UAEF,OAAO;AACL,YAAAC,OAAM;AACN;AAAA,UACF;AAAA,QACF;AAEA,YAAIA,QAAO,WAAW;AACpB,mBAAS;AAGT,gBAAM,cAAc,CAAC;AAErB,iBAAO,EAAE,SAAS,SAAS,QAAQ;AACjC,kBAAM,QAAQ,SAAS,MAAM;AAE7B,gBAAI,MAAM,SAAS,qBAAqB;AAEtC,oBAAM,OAAO;AAAA,YACf;AAEA,gBAAI,MAAM,SAAS,qBAAqB;AAEtC,oBAAM,OAAO;AAAA,YACf;AAEA,gBACE,MAAM,SAAS,UACf,eAAe,KAAK,OAAO,MAAM,KAAK,CAAC,GACvC;AAAA,YAEF,OAAO;AACL,0BAAY,KAAK,KAAK;AAAA,YACxB;AAAA,UACF;AAEA,iBAAO,SAAS,OAAOD,QAAO,GAAG,GAAG,WAAW;AAC/C,iBAAOA;AAAA,QACT;AAAA,MACF;AAEA,UACE,KAAK,SAAS,uBACd,KAAK,SAAS,qBACd;AACA,cAAM,OAAO,KAAK,SAAS,KAAK,OAAO,CAAC;AACxC,aAAK,kBAAkB;AAAA,MACzB;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ACtFO,IAAM,YAAY;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACVO,IAAM,cAAc;;;ACqD3B,IAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAcO,SAAS,gBAAgBE,UAAS;AACvC,QAAM;AAAA,IACJ,aAAAC;AAAA,IACA,KAAAC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,oBAAAC;AAAA,IACA,GAAG;AAAA,EACL,IAAIH,YAAW,CAAC;AAChB,QAAM,MACJC,iBAAgB,QAAQA,iBAAgB,SACpC,cACAA;AACN,MAAIG,SAAQ;AAEZ,SAAO,EAAEA,SAAQ,eAAe,QAAQ;AACtC,UAAM,MAAM,eAAeA,MAAK;AAChC,QAAIJ,YAAW,OAAOA,UAAS;AAC7B,YAAM,IAAI;AAAA,QACR,cACE,MACA;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AAIA,MAAI,WAAW,UAAU;AACvB,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAEA,QAAM,WAAW,QAAQ,EAAE,IAAI,oBAAW;AAE1C,MAAI,WAAW,MAAM;AACnB,aAAS,IAAI,SAAS;AAAA,EACxB;AAEA,QAAM,iBAAiB;AAAA;AAAA,IAEnB,oBAAoB,eAAe,CAAC;AAAA,MACpC,CAAC;AAEL,WACG,IAAI,oBAAoB,EACxB,IAAI,iBAAiB,CAAC,CAAC,EACvB,IAAI,aAAc;AAAA,IACjB,GAAG;AAAA,IACH,oBAAoB;AAAA,IACpB,aAAa,CAAC,GAAG,gBAAgB,GAAG,SAAS;AAAA,EAC/C,CAAC,EACA,IAAI,iBAAiB,CAAC,CAAC;AAE1B,MAAI,WAAW,MAAM;AACnB,aAAS,IAAI,eAAe;AAAA,EAC9B;AAEA,WACG,IAAI,aAAa,EAAC,0BAA0B,sBAAqB,CAAC,EAClE,IAAI,eAAe,EAAC,GAAG,MAAM,aAAY,CAAC,EAC1C,IAAI,iBAAiB;AAAA,IACpB,aAAa;AAAA,IACb;AAAA,IACA;AAAA,EACF,CAAC;AAEH,MAAI,CAACE,MAAK;AACR,aAAS,IAAI,eAAe,EAAC,aAAa,KAAK,aAAY,CAAC;AAAA,EAC9D;AAEA,WAAS,IAAI,gBAAgB,EAAC,oBAAAC,oBAAkB,CAAC,EAAE,IAAI,gBAAgB,CAAC,CAAC;AAEzE,SAAO;AACT;;;AC3JA,iCAA+B;AAExB,IAAM,MAAM,CAAC,MAAM;AAEnB,IAAM,KAAK,2BAAAE,QAAmB,IAAI,CAAuB,MAAM,MAAM,CAAC;;;ACYtE,SAAS,sBAAsB,iBAAiBC,UAAS;AAC9D,QAAM,OAAO,gBAAgB,eAAe,IACxC,kBACA,IAAI,MAAM,eAAe;AAC7B,QAAM,EAAC,QAAQ,GAAG,KAAI,IAAIA,YAAW,CAAC;AACtC,SAAO;AAAA,IACL;AAAA,IACA,SAAS;AAAA,MACP,QACE,WAAW,QAAQ,WAAW,QAC1B,SACA,KAAK,YAAY,KAAK,gBAAgB,IAAI,SAAS,KAAK,OAAO,IAC/D,OACA;AAAA,MACN,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAMA,SAAS,gBAAgB,OAAO;AAC9B,SAAO;AAAA,IACL,SACE,OAAO,UAAU,YACjB,aAAa,SACb,cAAc;AAAA,EAClB;AACF;;;ACbO,SAAS,QAAQ,iBAAiB,gBAAgB;AACvD,QAAM,EAAC,MAAM,SAAAC,SAAO,IAAI,sBAAsB,iBAAiB,cAAc;AAC7E,SAAO,gBAAgBA,QAAO,EAAE,QAAQ,IAAI;AAC9C;;;ACpCA,IAAM,gBAAgB,OAAO,eAAe,GAAG,EAAE;AAYjD,eAAsB,IAAI,MAAMC,UAAS;AACvC,SAAO,IAAI,cAAc,OAAO,IAAI,CAAC,EAAEA,QAAO;AAChD;;;ACMA,wBAAiC;;;ACrBjC,kBAA2D;AAE3D,uBAAe;AAsJf,SAAS,QAAQ,KAAK;AAClB,SAAO,MAAM,QAAQ,GAAG;AAC5B;AACA,SAAS,YAAY,OAAO;AACxB,MAAI,QAAQ,KAAK;AACb,WAAO;AACX,MAAI,SAAS;AACT,WAAO,CAAC;AACZ,SAAO,CAAC,KAAK;AACjB;AAEA,IAAM,gBAAgB,SAASC,eAAc,UAAU;AACnD,SAAO,SAAS,MAAM,kBAAM,GAAG,EAAE,KAAK,kBAAM,GAAG;AACnD;AAEA,SAAS,iBAAiB,IAAI,gBAAgB;AAC1C,MAAI,mBAAmB,aAAS,wBAAW,EAAE,KAAK,GAAG,WAAW,GAAG,GAAG;AAClE,WAAO,cAAc,EAAE;AAAA,EAC3B;AAEA,QAAM,WAAW,kBAAc,qBAAQ,kBAAkB,EAAE,CAAC,EAEvD,QAAQ,sBAAsB,MAAM;AAKzC,SAAO,kBAAM,KAAK,UAAU,cAAc,EAAE,CAAC;AACjD;AACA,IAAM,eAAe,SAASC,cAAa,SAAS,SAASC,UAAS;AAClE,QAAM,iBAAiBA,YAAWA,SAAQ;AAC1C,QAAM,aAAa,CAAC,OAAO,cAAc,SACnC,KACA;AAAA,IACE,MAAM,CAAC,SAAS;AAEZ,YAAM,UAAU,iBAAiB,IAAI,cAAc;AACnD,YAAM,SAAK,iBAAAC,SAAG,SAAS,EAAE,KAAK,KAAK,CAAC;AACpC,YAAM,SAAS,GAAG,IAAI;AACtB,aAAO;AAAA,IACX;AAAA,EACJ;AACJ,QAAM,kBAAkB,YAAY,OAAO,EAAE,IAAI,UAAU;AAC3D,QAAM,kBAAkB,YAAY,OAAO,EAAE,IAAI,UAAU;AAC3D,SAAO,SAAS,OAAO,IAAI;AACvB,QAAI,OAAO,OAAO;AACd,aAAO;AACX,QAAI,KAAK,KAAK,EAAE;AACZ,aAAO;AACX,UAAM,SAAS,cAAc,EAAE;AAC/B,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,EAAE,GAAG;AAC7C,YAAM,UAAU,gBAAgB,CAAC;AACjC,UAAI,QAAQ,KAAK,MAAM;AACnB,eAAO;AAAA,IACf;AACA,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,EAAE,GAAG;AAC7C,YAAM,UAAU,gBAAgB,CAAC;AACjC,UAAI,QAAQ,KAAK,MAAM;AACnB,eAAO;AAAA,IACf;AACA,WAAO,CAAC,gBAAgB;AAAA,EAC5B;AACJ;AAEA,IAAM,gBAAgB;AACtB,IAAM,WAAW;AACjB,IAAM,uBAAuB,IAAI,IAAI,GAAG,iBAAiB,WAAW,MAAM,GAAG,CAAC;AAC9E,qBAAqB,IAAI,EAAE;;;ACxMpB,SAAS,4BAA4B,gBAAgB;AAC1D,QAAM,kBAAkB,kBAAkB,CAAC;AAC3C,QAAM,eAAe,gBAAgB,gBAAgB;AACrD,QAAM,gBAAgB,gBAAgB,iBAAiB;AAEvD,MAAI;AAEJ,MAAI;AAEJ,SAAO;AAAA,IACL,UACE,gBAAgB,WAAW,OACvB,eACA,gBAAgB,WAAW,QAC3B,gBACA,aAAa,OAAO,aAAa;AAAA,IACvC,SAAAC;AAAA,IACA;AAAA,EACF;AAUA,WAASA,SAAQ,iBAAiB;AAChC,UAAM,EAAC,MAAM,UAAS,IAAI,MAAM,eAAe;AAC/C,WAAO,UAAU,QAAQ,IAAI;AAAA,EAC/B;AAaA,WAAS,YAAY,iBAAiB;AACpC,UAAM,EAAC,MAAM,UAAS,IAAI,MAAM,eAAe;AAC/C,WAAO,UAAU,YAAY,IAAI;AAAA,EACnC;AAaA,WAAS,MAAM,iBAAiB;AAC9B,UAAM,EAAC,MAAM,SAAAC,SAAO,IAAI;AAAA,MACtB;AAAA,MACA;AAAA,IACF;AACA,UAAM,YACJA,SAAQ,WAAW,OACf,mBAAmB,iBAAiB,gBAAgBA,QAAO,KAC3D,cAAc,YAAY,gBAAgBA,QAAO;AACvD,WAAO,EAAC,MAAM,UAAS;AAAA,EACzB;AACF;;;AFxDO,SAAS,OAAOC,UAAS;AAC9B,QAAM,EAAC,SAAS,SAAS,GAAG,KAAI,IAAIA,YAAW,CAAC;AAChD,QAAM,EAAC,UAAU,SAAAC,SAAO,IAAI,4BAA4B;AAAA,IACtD;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACD,QAAM,SAAS,aAAa,SAAS,OAAO;AAE5C,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM,UAAU,OAAO,MAAM;AAC3B,YAAM,OAAO,IAAI,MAAM,EAAC,OAAO,KAAI,CAAC;AAEpC,UACE,KAAK,WACL,OAAO,KAAK,IAAI,KAChB,SAAS,SAAS,KAAK,OAAO,GAC9B;AACA,cAAM,WAAW,MAAMA,SAAQ,IAAI;AACnC,cAAM,OAAO,OAAO,SAAS,KAAK;AAGlC,cAAM,SAAS,EAAC,MAAM,KAAK,SAAS,IAAG;AACvC,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACF;;;AG5DA,IAAM,IAAE,MAAI,IAAI,WAAW,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC;AAAS,SAASC,OAAMC,IAAE,IAAE,KAAI;AAAC,MAAG,CAAC;AAAE,WAAO,KAAK,KAAM,MAAID,OAAMC,EAAC,CAAE;AAAE,QAAM,IAAEA,GAAE,SAAO,GAAE,KAAG,EAAE,YAAY,SAAO,EAAE,eAAa,IAAE,IAAE,EAAE,OAAO,OAAO;AAAW,MAAE,KAAG,EAAE,OAAO,KAAK,KAAK,KAAK,IAAE,KAAK,CAAC;AAAE,QAAM,IAAE,EAAE,GAAG,IAAE,CAAC;AAAE,OAAI,IAAE,IAAE,GAAGA,IAAE,IAAI,YAAY,EAAE,OAAO,QAAO,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,MAAM;AAAE,UAAM,OAAO,OAAO,IAAI,MAAM,eAAe,KAAKA,GAAE,MAAM,GAAE,EAAE,EAAE,CAAC,EAAE,MAAM,IAAI,EAAE,UAAU,EAAE,EAAE,IAAEA,GAAE,YAAY,MAAK,EAAE,EAAE,IAAE,CAAC,GAAG,GAAE,EAAC,KAAI,EAAE,EAAE,EAAC,CAAC;AAAE,QAAM,IAAE,CAAC,GAAE,IAAE,CAAC;AAAE,SAAK,EAAE,GAAG,KAAG;AAAC,UAAMC,KAAE,EAAE,GAAG,GAAEC,KAAE,EAAE,GAAG,GAAEC,KAAE,EAAE,GAAG,GAAEC,KAAE,EAAE,GAAG,GAAEC,KAAE,EAAE,GAAG,GAAEC,KAAE,EAAE,GAAG;AAAE,QAAIC;AAAE,MAAE,GAAG,MAAIA,KAAE,EAAEP,GAAE,MAAM,OAAKI,KAAEH,KAAE,IAAEA,IAAE,OAAKG,KAAEF,KAAE,IAAEA,EAAC,CAAC,IAAG,EAAE,KAAK,EAAC,GAAEK,IAAE,GAAEN,IAAE,GAAEC,IAAE,IAAGG,IAAE,IAAGC,IAAE,GAAEF,IAAE,GAAED,GAAC,CAAC;AAAA,EAAC;AAAC,SAAK,EAAE,GAAG,KAAG;AAAC,UAAMF,KAAED,GAAE,MAAM,EAAE,GAAG,GAAE,EAAE,GAAG,CAAC,GAAEE,KAAED,GAAE,CAAC;AAAE,MAAE,KAAK,QAAMC,MAAG,QAAMA,KAAE,EAAED,EAAC,IAAEA,EAAC;AAAA,EAAC;AAAC,WAAS,EAAEA,IAAE;AAAC,QAAG;AAAC,cAAO,GAAE,MAAMA,EAAC;AAAA,IAAC,SAAOA,IAAN;AAAA,IAAS;AAAA,EAAC;AAAC,SAAM,CAAC,GAAE,GAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAAC;AAAC,SAAS,EAAEA,IAAEC,IAAE;AAAC,QAAMC,KAAEF,GAAE;AAAO,MAAIO,KAAE;AAAE,SAAKA,KAAEL,MAAG;AAAC,UAAMA,KAAEF,GAAE,WAAWO,EAAC;AAAE,IAAAN,GAAEM,IAAG,KAAG,MAAIL,OAAI,IAAEA,OAAI;AAAA,EAAC;AAAC;AAAC,SAAS,EAAEF,IAAEC,IAAE;AAAC,QAAMC,KAAEF,GAAE;AAAO,MAAIO,KAAE;AAAE,SAAKA,KAAEL;AAAG,IAAAD,GAAEM,EAAC,IAAEP,GAAE,WAAWO,IAAG;AAAC;AAAC,IAAI;AAAS,IAAM,OAAK,YAAY,SAAS,IAAE,gvSAA+uS,eAAa,OAAO,SAAO,OAAO,KAAK,GAAE,QAAQ,IAAE,WAAW,KAAK,KAAK,CAAC,GAAG,CAAAP,OAAGA,GAAE,WAAW,CAAC,CAAE,EAAE,EAAE,KAAK,YAAY,WAAW,EAAE,KAAM,CAAC,EAAC,SAAQA,GAAC,MAAI;AAAC,MAAEA;AAAC,CAAE;AAAE,IAAI;;;ACI55U,sBAAe;;;ACLf,IAAI;AAAJ,IAAiB;AAAjB,IAAsC;AAAtC,IAAgD;AAAhD,IAAsD,QAAM;AAC5D,IAAI,OAAO,YAAY,aAAa;AACnC,GAAC,EAAE,aAAa,qBAAqB,UAAU,KAAK,IAAI,QAAQ,OAAO,CAAC;AACxE,UAAQ,QAAQ,UAAU,QAAQ,OAAO;AAC1C;AAEO,IAAM,IAAI;AAAA,EAChB,SAAS,CAAC,uBAAuB,YAAY,QAAQ,SAAS,WAC7D,eAAe,QAAQ,gBAAgB,OAAO;AAEhD;AAEA,SAASQ,MAAK,GAAG,GAAG;AACnB,MAAI,MAAM,IAAI,OAAO,WAAW,MAAM,GAAG;AACzC,MAAI,OAAO,QAAQ,MAAM,QAAQ,QAAQ;AAEzC,SAAO,SAAU,KAAK;AACrB,QAAI,CAAC,EAAE,WAAW,OAAO;AAAM,aAAO;AACtC,WAAO,QAAQ,CAAC,CAAC,EAAE,KAAG,KAAK,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,QAAQ,IAAI,IAAI,OAAO;AAAA,EACrF;AACD;AAGO,IAAM,QAAQA,MAAK,GAAG,CAAC;AACvB,IAAM,OAAOA,MAAK,GAAG,EAAE;AACvB,IAAM,MAAMA,MAAK,GAAG,EAAE;AACtB,IAAM,SAASA,MAAK,GAAG,EAAE;AACzB,IAAM,YAAYA,MAAK,GAAG,EAAE;AAC5B,IAAM,UAAUA,MAAK,GAAG,EAAE;AAC1B,IAAM,SAASA,MAAK,GAAG,EAAE;AACzB,IAAM,gBAAgBA,MAAK,GAAG,EAAE;AAGhC,IAAM,QAAQA,MAAK,IAAI,EAAE;AACzB,IAAM,MAAMA,MAAK,IAAI,EAAE;AACvB,IAAM,QAAQA,MAAK,IAAI,EAAE;AACzB,IAAM,SAASA,MAAK,IAAI,EAAE;AAC1B,IAAM,OAAOA,MAAK,IAAI,EAAE;AACxB,IAAM,UAAUA,MAAK,IAAI,EAAE;AAC3B,IAAM,OAAOA,MAAK,IAAI,EAAE;AACxB,IAAM,QAAQA,MAAK,IAAI,EAAE;AACzB,IAAM,OAAOA,MAAK,IAAI,EAAE;AACxB,IAAM,OAAOA,MAAK,IAAI,EAAE;AAGxB,IAAM,UAAUA,MAAK,IAAI,EAAE;AAC3B,IAAM,QAAQA,MAAK,IAAI,EAAE;AACzB,IAAM,UAAUA,MAAK,IAAI,EAAE;AAC3B,IAAM,WAAWA,MAAK,IAAI,EAAE;AAC5B,IAAM,SAASA,MAAK,IAAI,EAAE;AAC1B,IAAM,YAAYA,MAAK,IAAI,EAAE;AAC7B,IAAM,SAASA,MAAK,IAAI,EAAE;AAC1B,IAAM,UAAUA,MAAK,IAAI,EAAE;;;AC5ClC,sBAA8B;;;ACP9B,yBAAmB;AACnB,SAAS,mBAAmB,MAAM;AAChC,SAAO,KAAK,SAAS,GAAG,IAAI,OAAO,OAAO;AAC5C;AACA,SAAS,YAAY,IAAI,QAAQ;AAC/B,QAAM,eAAe;AAAA,IACnB,OAAO,OAAO,IAAI,IAAI,OAAO,MAAM,OAAO,IAAI,EAAE,WAAW,OAAO;AAAA,EACpE;AACA,MAAI,MAAM;AACV,MAAI;AACF,UAAM,IAAI,IAAI,UAAU,IAAI;AAAA,EAC9B,QAAE;AAAA,EACF;AACA,QAAM,SAAS,GAAG,MAAM,GAAG,EAAE,CAAC;AAC9B,MAAI;AACJ,QAAM,SAAS,OAAO,SAAS,SAAS;AACxC,MAAI,QAAQ;AACV,cAAU,OAAO,QAAQ,iBAAiB,YAAY,EAAE,QAAQ,oBAAoB,EAAE;AAAA,EACxF,WAAW,OAAO,IAAI,SAAS,WAAW,OAAO,KAAK,QAAQ,GAAG;AAC/D,cAAU,IAAI,SAAS,MAAM,OAAO,KAAK,SAAS,MAAM;AAAA,EAC1D,OAAO;AACL,cAAU;AAAA,EACZ;AACA,MAAI,WAAW,OAAO,kBAAkB,UAAU;AAChD,cAAU,mBAAmB,OAAO;AAAA,EACtC;AACA,SAAO,EAAE,QAAQ,QAAQ;AAC3B;AACA,SAAS,iBAAiB,MAAM,IAAI;AAClC,MAAI;AACF,eAAO,mBAAAC,SAAO,IAAI;AAAA,EACpB,SAAS,GAAP;AACA,QAAI,EAAE,SAAS,iBAAiB;AAC9B,YAAM,MAAM;AACZ,UAAI,KAAK;AACT,UAAI,MAAM,EAAE,MAAM,EAAE,IAAI,MAAM,EAAE,KAAK,OAAO,GAAG,QAAQ,EAAE,KAAK,OAAO;AACrE,UAAI,UAAU,EAAE;AAChB,YAAM;AAAA,IACR,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF;AACF;AACA,SAAS,aAAa,UAAU,YAAY;AAAA,EAC1C,aAAa;AAAA,EACb,YAAY;AACd,GAAG;AACD,SAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,MACJ,QAAQ;AAAA,QACN,MAAM,CAAC;AAAA,QACP,GAAGC,OAAM,UAAU,SAAS;AAAA,QAC5B,MAAM;AAAA,QACN,YAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,eAAe,MAAM;AAC5B,SAAO,sBAAsB,IAAI,KAAK,mBAAmB,IAAI;AAC/D;AACA,SAAS,sBAAsB,MAAM;AACnC,QAAM,KAAK,KAAK,CAAC;AACjB,QAAM,KAAK,KAAK,CAAC;AACjB,QAAM,KAAK,KAAK,CAAC;AACjB,SAAO,OAAO,OAAO,OAAO,OAAO,OAAO;AAC5C;AACA,SAAS,mBAAmB,MAAM;AAChC,QAAM,KAAK,KAAK,CAAC;AACjB,QAAM,KAAK,KAAK,CAAC;AACjB,SAAO,OAAO,OAAO,OAAO;AAC9B;;;ACzEA,SAAS,6BAA6B;AACpC,SAAO,SAAS,MAAM,MAAM;AAC1B,UAAM,WAAW,KAAK,KAAK,mBAAmB,CAAC;AAC/C,SAAK,SAAS;AAAA,MACZ,aAAa,0CAA0C,KAAK,UAAU,QAAQ,KAAK;AAAA,IACrF;AAAA,EACF;AACF;;;ACPA,SAAS,mBAAmB;AAC1B,SAAO,SAAS,MAAM;AACpB,UAAM,MAAM,CAAC,SAAS;AACpB,UAAI;AACJ,UAAI,KAAK,SAAS,aAAa,KAAK,YAAY,YAAY,KAAK,KAAK,SAAS,OAAO,SAAS,GAAG,OAAO;AACvG,aAAK,eAAe,KAAK,aAAa,CAAC;AACvC,aAAK,WAAW,aAAa,KAAK,KAAK;AAAA,MACzC;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ACTA,SAAS,cAAc;AACrB,SAAO,CAAC,SAAS,MAAM,MAAM,QAAQ,CAAC,SAAS;AAC7C,QAAI,EAAE,MAAM,MAAM,IAAI;AACtB,SAAK,OAAO;AACZ,QAAI,EAAE,MAAAC,OAAM,cAAc,IAAI,wBAAwB,MAAM,KAAK;AACjE,QAAI,UAAU,CAAC,aAAa;AAC5B,SAAK,QAAQ,eAAe,QAAQ;AAAA,MAClC;AAAA,IACF,mBAAmB,kBAAkBA;AACrC,WAAO;AAAA,EACT,CAAC;AACH;;;ACXA,IAAM,wBAAwC,oBAAI,IAAI;AACtD,IAAM,cAAc,OAAO,EAAE,QAAQ,CAAC,GAAG,QAAQ,eAAe,MAAAC,QAAO,MAAM,MAAM;AACjF,QAAM,UAAU,OAAO,UAAU,WAAW,QAAQ,MAAM;AAC1D,MAAI,mBAAmB,sBAAsB,IAAI,OAAO;AACxD,MAAI,CAAC,kBAAkB;AACrB,uBAAmB,eAAe,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,OAAO;AACxD,SAAG,qBAAqB;AAAA,QACtB,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,MACb,CAAC;AACD,aAAO;AAAA,IACT,CAAC;AACD,0BAAsB,IAAI,SAAS,gBAAgB;AAAA,EACrD;AACA,QAAM,cAAc,MAAM;AAC1B,aAAW,QAAQ,OAAO;AACxB,UAAM,YAAY,aAAa,IAAI;AAAA,EACrC;AACA,SAAO,MAAM,CAAC,SAAS;AACrB,UAAM,MAAM,QAAQ,CAAC,SAAS;AAC5B,UAAI;AACJ,UAAI,OAAO,KAAK,SAAS,UAAU;AACjC,cAAM,aAAa,YAAY,mBAAmB,EAAE,SAAS,KAAK,IAAI;AACtE,YAAI,YAAY;AACd,iBAAO,KAAK;AAAA,QACd,OAAO;AACL,kBAAQ,KAAK,iBAAiB,KAAK,iDAAiD;AACpF,iBAAO;AAAA,QACT;AAAA,MACF,OAAO;AACL,eAAO;AAAA,MACT;AACA,UAAIC,QAAO,YAAY,WAAW,KAAK,OAAO,EAAE,KAAK,CAAC;AACtD,MAAAA,QAAOA,MAAK,QAAQ,gCAAgC,6BAA6B;AACjF,UAAI,KAAK,SAAS,QAAQ;AACxB,QAAAA,QAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF;AAAA,MACF;AACA,UAAID,UAAS,OAAO;AAClB,QAAAC,QAAOA,MAAK,QAAQ,iBAAiB,+BAA+B;AAAA,MACtE,WAAWD,UAAS,MAAM;AACxB,QAAAC,QAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF;AAAA,MACF;AACA,WAAK,OAAO;AACZ,WAAK,QAAQA;AACb,WAAK,WAAW,CAAC;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AACA,IAAI,uBAAuB;;;AL/C3B,SAAS,+BAA+B;AAAA,EACtC;AACF,GAAG;AACD,SAAO,CAAC,SAAS;AACf,IAAAC,OAAY,MAAM,CAAC,SAAS;AAC1B,UAAI,KAAK,SAAS,oBAAoB;AACpC,cAAM,aAAa,6BAA6B,IAAI;AACpD,YAAI,OAAO,eAAe,UAAU;AAClC,qBAAW,OAAO,MAAM;AACtB,mBAAO,KAAK,GAAG;AAAA,UACjB;AACA,gBAAM,gBAAgB;AAAA,YACpB,MAAM;AAAA,YACN,OAAO,cAAc,UAAU;AAAA,YAC/B,KAAK,KAAK,UAAU,cAAc,UAAU,CAAC;AAAA,UAC/C;AACA,iBAAO,OAAO,MAAM,aAAa;AAAA,QACnC;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AACA,SAAS,+BAA+B;AACtC,SAAO,SAAS,MAAM,OAAO;AAC3B,UAAM,YAAY,mBAAmB,MAAM,IAAI;AAC/C,QAAI,qBAAqB;AACvB,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AACF,UAAM,EAAE,YAAY,IAAI;AACxB,UAAM,cAAc;AAAA,MAClB,aAAa,8BAA8B,KAAK,UAAU,WAAW,IAAI;AAAA,IAC3E;AACA,QAAI,YAAY,QAAQ;AACtB,kBAAY;AAAA,QACV;AAAA,UACE;AAAA;AAAA;AAAA,oCAG0B,KAAK,UAAU,YAAY,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAc7D;AAAA,MACF;AAAA,IACF;AACA,SAAK,WAAW,YAAY,OAAO,KAAK,QAAQ;AAAA,EAClD;AACF;AACA,SAAS,6BAA6B,EAAE,OAAO,GAAG;AAChD,QAAM,aAAa,IAAI,IAAI,YAAY,MAAM;AAC7C,SAAO,SAAS,6BAA6B;AAC3C,WAAO,CAAC,MAAM,UAAU;AACtB,YAAM,oBAAgB,+BAAc,MAAM,IAAI,EAAE,KAAK,WAAW,WAAW,IAAI;AAC/E,UAAI,CAAC;AACH;AACF,YAAM,gBAAgC,oBAAI,IAAI;AAC9C,YAAM,MAAM,SAAS,SAAS,WAAW,MAAM;AAC7C,YAAI,eAAe,KAAK,GAAG,GAAG;AAC5B,wBAAc,IAAI,KAAK,GAAG;AAAA,QAC5B;AAAA,MACF,CAAC;AACD,UAAI,cAAc,SAAS;AACzB;AACF,YAAM,eAAe;AAAA,IACvB,CAAC,GAAG,aAAa,EAAE,IAAI,CAAC,SAAS,KAAK,UAAU,IAAI,CAAC,EAAE,KAAK,KAAK;AAC/D,YAAM,IAAI,MAAM,YAAY;AAAA,IAC9B;AAAA,EACF;AACF;AACA,eAAe,iBAAiB,YAAY,QAAQ;AAClD,MAAI,gBAAgB,CAAC;AACrB,MAAI,WAAW,KAAK;AAClB,kBAAc,KAAK,SAAS;AAAA,EAC9B;AACA,MAAI,WAAW,aAAa;AAC1B,kBAAc,KAAK,iBAAiB;AAAA,EACtC;AACA,kBAAgB,CAAC,GAAG,eAAe,GAAG,oBAAoB,WAAW,aAAa,CAAC;AACnF,MAAI,WAAW,oBAAoB,SAAS;AAC1C,kBAAc,KAAK,CAAC,MAAM,qBAAY,WAAW,WAAW,CAAC,CAAC;AAAA,EAChE;AACA,MAAI,WAAW,oBAAoB,SAAS;AAC1C,kBAAc,KAAK,WAAW;AAAA,EAChC;AACA,gBAAc,KAAK,6BAA6B,MAAM,CAAC;AACvD,SAAO;AACT;AACA,SAAS,iBAAiB,YAAY;AACpC,MAAI,gBAAgB;AAAA,IAClB;AAAA,IACA,CAAC,WAAW,EAAE,aAAa,UAAU,CAAC;AAAA,EACxC;AACA,kBAAgB;AAAA,IACd,GAAG;AAAA,IACH,GAAG,oBAAoB,WAAW,aAAa;AAAA,IAC/C;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,oBAAoB,SAAS;AACpC,MAAI,eAAe,CAAC;AACpB,MAAI,mBAAmB;AACvB,aAAW,UAAU,SAAS;AAC5B,QAAI,OAAO,WAAW,UAAU;AAC9B,cAAQ,KAAK,OAAO,SAAS,KAAK,MAAM,gBAAgB,CAAC;AACzD,yBAAmB;AAAA,IACrB,WAAW,MAAM,QAAQ,MAAM,KAAK,OAAO,OAAO,CAAC,MAAM,UAAU;AACjE,cAAQ,KAAK,OAAO,SAAS,KAAK,OAAO,CAAC,CAAC,gBAAgB,CAAC;AAC5D,yBAAmB;AAAA,IACrB,OAAO;AACL,mBAAa,KAAK,MAAM;AAAA,IAC1B;AAAA,EACF;AACA,MAAI,kBAAkB;AACpB,YAAQ;AAAA,MACN;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,6BAA6B,MAAM;AAC1C,MAAI;AACF,QAAI,KAAK,OAAO,SAAS,sBAAsB,KAAK,SAAS,SAAS;AACpE,aAAO,IAAI,MAAM;AACnB,UAAM,mBAAmB,KAAK;AAC9B,QAAI,iBAAiB,SAAS,SAAS,gBAAgB,iBAAiB,SAAS,SAAS;AACxF,aAAO,IAAI,MAAM;AACnB,UAAM,gBAAgB,iBAAiB;AACvC,QAAI,cAAc,SAAS,kBAAkB,cAAc,SAAS,SAAS,gBAAgB,cAAc,SAAS,SAAS;AAC3H,aAAO,IAAI,MAAM;AACnB,QAAI,cAAc,KAAK,SAAS;AAC9B,aAAO,IAAI,MAAM;AACnB,WAAO,KAAK,SAAS;AAAA,EACvB,SAAS,GAAP;AACA,QAAI,aAAa,OAAO;AACtB,aAAO;AAAA,IACT;AACA,WAAO,IAAI,MAAM,uBAAuB;AAAA,EAC1C;AACF;;;AFjKA,SAASC,KAAI,oBAAoB,CAAC,GAAG;AACnC,SAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,MACL,sBAAsB,OAAO,EAAE,cAAc,QAAQ,kBAAkB,QAAQ,MAAM;AACnF,yBAAiB,MAAM;AACvB,cAAM,uBAAuB,kBAAkB,wBAAwB,eAAe;AACtF,cAAM,aAAa,oBAAoB;AAAA,UACrC,SAAS;AAAA,UACT,UAAU,uBAAuB,OAAO,WAAW;AAAA,QACrD,CAAC;AACD,cAAM,gBAAgB;AAAA,UACpB,eAAe,MAAM,iBAAiB,YAAY,MAAM;AAAA,UACxD,eAAe,iBAAiB,UAAU;AAAA,UAC1C,cAAc,WAAW;AAAA,UACzB,qBAAqB,WAAW;AAAA,UAChC,KAAK;AAAA,UACL,iBAAiB;AAAA,UACjB,QAAQ;AAAA,UACR,cAAc,CAAC;AAAA,QACjB;AACA,YAAI,gBAAgB;AAAA,UAClB,MAAM,OAAO;AAAA,QACf;AACA,qBAAa;AAAA,UACX,MAAM;AAAA,YACJ,SAAS;AAAA,cACP;AAAA,gBACE,SAAS;AAAA,gBACT,GAAG,OAAU,aAAa;AAAA,gBAC1B,eAAe,UAAU;AACvB,kCAAgB,EAAE,GAAG,eAAe,GAAG,SAAS,IAAI;AAAA,gBACtD;AAAA,gBACA,MAAM,UAAU,GAAG,IAAI;AACrB,sBAAI,CAAC,GAAG,SAAS,KAAK;AACpB;AACF,wBAAM,EAAE,OAAO,IAAI,YAAY,IAAI,MAAM;AACzC,wBAAM,OAAO,MAAM,gBAAAC,QAAG,SAAS,QAAQ,OAAO;AAC9C,wBAAM,EAAE,MAAM,aAAa,SAAS,YAAY,IAAI,iBAAiB,MAAM,EAAE;AAC7E,wBAAM,WAAW,MAAM,QAAW,IAAI,MAAM,EAAE,OAAO,aAAa,MAAM,GAAG,CAAC,GAAG;AAAA,oBAC7E,GAAG;AAAA,oBACH,0BAA0B;AAAA,oBAC1B,eAAe;AAAA,sBACb,4BAA4B,EAAE,iBAAiB,YAAY,CAAC;AAAA,sBAC5D,GAAG,cAAc,iBAAiB,CAAC;AAAA,oBACrC;AAAA,oBACA,cAAc;AAAA,sBACZ,GAAG,cAAc,gBAAgB,CAAC;AAAA,sBAClC,MAAM,+BAA+B,EAAE,cAAc,CAAC;AAAA,oBACxD;AAAA,kBACF,CAAC;AACD,yBAAO;AAAA,oBACL,MAAM,wBAAwB,OAAO,SAAS,KAAK,CAAC;AAAA,oBACpD,KAAK,SAAS;AAAA,kBAChB;AAAA,gBACF;AAAA,cACF;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,UAAU,MAAM,IAAI;AAClB,sBAAI,CAAC,GAAG,SAAS,MAAM;AACrB;AACF,wBAAM,CAAC,eAAe,aAAa,IAAIC,OAAS,IAAI;AACpD,wBAAM,wBAAwB,cAAc,OAAO,CAAC,EAAE,EAAE,MAAM,MAAM,mBAAmB,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,MAAM,KAAK,UAAU,IAAI,EAAE,CAAC;AACnI,wBAAM,oBAAoB,sBAAsB;AAAA,oBAC9C,CAAC,cAAc,iCAAiC,KAAK,SAAS;AAAA,kBAChE;AACA,sBAAI,CAAC,mBAAmB;AACtB,2BAAO,mDAAmD;AAAA,kBAC5D;AACA,wBAAM,EAAE,SAAS,OAAO,IAAI,YAAY,IAAI,MAAM;AAClD,sBAAI,CAAC,cAAc,SAAS,KAAK,GAAG;AAClC,4BAAQ;AAAA,qBACP,KAAK,UAAU,OAAO;AAAA,kBACzB;AACA,sBAAI,CAAC,cAAc,SAAS,MAAM,GAAG;AACnC,4BAAQ;AAAA,sBACN,KAAK,UAAU,MAAM;AAAA,kBACzB;AACA,sBAAI,CAAC,cAAc,SAAS,SAAS,GAAG;AACtC,2BAAO,KAAK,QAAQ,8BAA8B,EAAE;AACpD,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMV;AACA,0BAAQ;AAAA;AAER,sBAAI,YAAY,OAAO;AACrB,4BAAQ;AAAA;AAAA;AAAA;AAAA,kBAIV;AACA,yBAAO,wBAAwB,IAAI;AAAA,gBACrC;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAM,iBAAiB;AAAA,EACrB,GAAG;AAAA,EACH,sBAAsB;AAAA,EACtB,cAAc,CAAC;AAAA,EACf,eAAe,CAAC;AAAA,EAChB,eAAe,CAAC;AAAA,EAChB,cAAc,CAAC;AACjB;AACA,SAAS,oBAAoB;AAAA,EAC3B,SAAAC;AAAA,EACA;AACF,GAAG;AACD,SAAO;AAAA,IACL,iBAAiBA,SAAQ,mBAAmB,SAAS;AAAA,IACrD,sBAAsBA,SAAQ,wBAAwB,SAAS;AAAA,IAC/D,cAAcA,SAAQ,gBAAgB,SAAS;AAAA,IAC/C,cAAcA,SAAQ,gBAAgB,SAAS;AAAA,IAC/C,KAAKA,SAAQ,OAAO,SAAS;AAAA,IAC7B,aAAaA,SAAQ,eAAe,SAAS;AAAA,IAC7C,eAAeA,SAAQ,iBAAiB,SAAS;AAAA,IACjD,eAAeA,SAAQ,iBAAiB,SAAS;AAAA,IACjD,aAAaA,SAAQ,eAAe,SAAS;AAAA,EAC/C;AACF;AACA,SAAS,wBAAwB,MAAM;AACrC,SAAO,KAAK,QAAQ,sBAAsB,uBAAuB;AACnE;",
  "names": ["exports", "module", "exports", "module", "reservedWords", "i", "TokenType", "name", "options", "isArray", "Position", "SourceLocation", "start", "defaultOptions", "text", "comment", "Parser", "parse", "ref", "parseExpressionAt", "tokenizer", "DestructuringErrors", "list", "init", "element", "ecmaVersion", "TokContext", "types", "index", "empty", "Scope", "Node", "RegExpValidationState", "reset", "Token", "str", "position", "exports", "module", "acornJsx", "options", "Parser", "str", "start", "name", "exports", "module", "options", "str", "position", "start", "whitespace", "comment", "exports", "module", "parse", "StyleToObject", "exports", "module", "require_markdown_extensions", "exports", "module", "exports", "exports", "exports", "normalize", "isAbsolute", "start", "index", "str", "exports", "exports", "exports", "SourceMapGenerator", "name", "exports", "index", "exports", "module", "fs", "resolve", "exports", "module", "name", "exports", "name", "index", "section", "exports", "SourceMapGenerator", "str", "exports", "exports", "module", "win32", "exports", "win32", "str", "options", "exports", "module", "options", "str", "index", "start", "exports", "module", "constants", "options", "parse", "win32", "opts", "value", "index", "rest", "posix", "create", "str", "source", "exports", "module", "parse", "constants", "options", "str", "state", "posix", "regex", "require_picomatch", "exports", "module", "exports", "module", "exports", "module", "isArray", "name", "exports", "module", "exports", "module", "exports", "module", "options", "exports", "module", "index", "exports", "module", "exports", "module", "name", "position", "start", "exports", "module", "options", "name", "exports", "module", "name", "index", "types", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "index", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "index", "exports", "module", "index", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "State", "options", "name", "start", "index", "exports", "module", "index", "State", "options", "position", "str", "string", "start", "exports", "module", "name", "require_js_yaml", "exports", "module", "yaml", "options", "exports", "module", "str", "require_utils", "exports", "str", "exports", "module", "engines", "options", "exports", "module", "name", "options", "exports", "module", "options", "str", "matter", "exports", "module", "options", "exports", "module", "stringify", "options", "require_parse", "exports", "module", "str", "options", "exports", "module", "fs", "stringify", "engines", "parse", "matter", "options", "str", "visit", "index", "options", "index", "point", "visit", "comment", "ok", "self", "start", "options", "ok", "self", "start", "start", "cont", "name", "index", "ok", "self", "start", "cont", "ok", "ok", "self", "start", "options", "options", "ok", "self", "index", "start", "options", "acornJsx", "options", "index", "point", "start", "following", "position", "position", "point", "position", "options", "index", "value", "options", "options", "index", "index", "options", "index", "name", "create", "index", "init", "index", "create", "toIdOrMemberExpression", "index", "name", "start", "cont", "options", "development", "WalkerBase", "index", "SyncWalker", "WalkerBase", "index", "isNode", "walk", "SyncWalker", "walk", "name", "scope", "element", "stringifyPosition", "position", "point", "index", "WalkerBase", "index", "SyncWalker", "WalkerBase", "index", "isNode", "walk", "SyncWalker", "options", "stringifyPosition", "create", "index", "walk", "replacement", "init", "element", "index", "own", "options", "development", "walk", "name", "index", "stringifyPosition", "parameters", "stringify", "text", "comment", "i", "init", "name", "quasi", "element", "regex", "options", "length", "GENERATOR", "generate", "options", "SourceMapGenerator", "handlers", "index", "options", "SourceMapGenerator", "StyleToObject", "own", "stringify", "name", "value", "index", "cont", "start", "own", "walk", "index", "mdxExpression", "index", "mdxjsEsm", "index", "mdxExpression", "mdxjsEsm", "own", "options", "index", "name", "options", "options", "index", "index", "all", "options", "development", "jsx", "SourceMapGenerator", "index", "markdownExtensions", "options", "options", "options", "normalizePath", "createFilter", "options", "pm", "process", "options", "options", "process", "parse", "E", "A", "Q", "B", "g", "I", "o", "k", "C", "init", "matter", "parse", "html", "wrap", "html", "visit", "mdx", "fs", "parse", "options"]
}
