---
import { getConfig } from '../../libs/config'
import type { Layout } from '../../libs/layout'
import Stylesheet from './Stylesheet.astro'
import Favicons from './Favicons.astro'
import Social from './Social.astro'
import Analytics from './Analytics.astro'

interface Props {
  description: string | undefined
  layout: Layout
  robots: string | undefined
}

const { description, layout, robots } = Astro.props

const canonicalUrl = new URL(Astro.url.pathname, Astro.site)
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />

<meta name="description" content={description ?? getConfig().params.description} />
<!--TODO: handle | markdownify -->

<meta name="author" content={getConfig().params.authors} />
<meta name="generator" content={Astro.generator} />
<meta name="docsearch:language" content="en" />
<meta name="docsearch:version" content={getConfig().params.docs_version} />

<title>{getConfig().title}</title>
<!--TODO: handle <title>{{ if .IsHome }}{{ .Site.Title | markdownify }} · {{ .Site.Params.subtitle | markdownify }}{{ else }}{{ .Title | markdownify }} · {{ .Site.Title | markdownify }} v{{ .Site.Params.docs_version }}{{ end }}</title>-->

<link rel="canonical" href={canonicalUrl} />

{layout === 'docs' && <link rel="preconnect" href="https://AK7KMZKZHQ-dsn.algolia.net" crossorigin />}
{robots && <meta name="robots" content={robots} />}

<!-- TODO(HiDeoo) Broken atm -->
<script src={`/docs/${getConfig().params.docs_version}/assets/js/color-modes.js`}></script>

<!--
			TODO: handle relURL?? or use public??
			{{- $colorModeJS := printf "/docs/%s/assets/js/color-modes.js" $.Site.Params.docs_version -}}
			<script src="{{ $colorModeJS | relURL }}"></script>
		-->
<!--<script is:inline src="/color-script.js"></script>-->

<Stylesheet layout={layout} />
<Favicons />
<Social />
<Analytics />
